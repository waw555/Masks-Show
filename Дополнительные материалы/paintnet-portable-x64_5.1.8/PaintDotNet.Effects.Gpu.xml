<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PaintDotNet.Effects.Gpu</name>
    </assembly>
    <members>
        <member name="T:PaintDotNet.Effects.Gpu.CurveControl">
            <summary>
            This class is for manipulation of transfer functions.
            It is intended for curve adjustment
            </summary>
        </member>
        <member name="M:PaintDotNet.Effects.Gpu.CurveControl.OnDispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="T:PaintDotNet.Effects.Gpu.PdnAddNoiseEffect">
            <summary>
            A Direct2D effect that renders Paint.NET's Add Noise effect.
            </summary>
            <inheritdoc cref="T:PaintDotNet.Effects.Gpu.PdnAddNoiseEffect"/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnAddNoiseEffect.Props.Intensity">
            <summary>
            Specifies the intensity of the noise.<br/>
            The range is [0, 1] which corresponds to the UI's range of [0, 100].<br/>
            The default is 0.64.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnAddNoiseEffect.Props.Saturation">
            <summary>
            Specifies the saturation of the noise.<br/>
            The range is [0, 4] which corresponds to the UI's range of [0, 400].>br/>
            The default is 1.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnAddNoiseEffect.Props.Coverage">
            <summary>
            Specifies the coverage of the noise.<br/>
            The range is [0, 1] which corresponds to the UI's range of [0, 100].<br/>
            The default is 1.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnAddNoiseEffect.Props.Seed">
            <summary>
            Specifies a seed number to use for random number generation.
            </summary>
            <remarks>
            Typically the Seed property is user configurable with a "Reseed" or "Randomize" button that just increments
            its value, while SeedInstance is generated once per effect instance. If two effect instances have the same
            value for both seed properties, rendering output will be identical for both.<br/>
            Sample maps that are participating in multisampled rendering for the same effect instance should all
            have the same values for Seed and SeedInstance.
            </remarks>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnAddNoiseEffect.Props.SeedInstance">
            <summary>
            <inheritdoc cref="P:PaintDotNet.Effects.Gpu.PdnAddNoiseEffect.Props.Seed" /> The default value is automatically generated.
            </summary>
            <remarks>
            <inheritdoc cref="P:PaintDotNet.Effects.Gpu.PdnAddNoiseEffect.Props.Seed" />
            </remarks>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnAddNoiseEffect.Props.AlphaMode">
            <summary>
            Specifies the alpha mode for the input and output.<br/>
            If set to Premultiplied, the input will be unpremultiplied, noise will be added, and then the result will be premultiplied.<br/>
            If set to Straight, noise will be added without any alpha space conversion.<br/>
            The default is Premultiplied.
            </summary>
        </member>
        <member name="T:PaintDotNet.Effects.Gpu.PdnAddNoiseEffect.Impl">
            <inheritdoc cref="T:PaintDotNet.Effects.Gpu.PdnAddNoiseEffect.Impl"/>
        </member>
        <member name="T:PaintDotNet.Effects.Gpu.PdnAddNoiseEffect.Impl.AddNoiseShader">
            <inheritdoc cref="T:PaintDotNet.Effects.Gpu.PdnAddNoiseEffect.Impl.AddNoiseShader"/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnAddNoiseEffect.Impl.AddNoiseShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnAddNoiseEffect#Impl#AddNoiseShader}#EffectId">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnAddNoiseEffect.Impl.AddNoiseShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnAddNoiseEffect#Impl#AddNoiseShader}#EffectDisplayName">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnAddNoiseEffect.Impl.AddNoiseShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnAddNoiseEffect#Impl#AddNoiseShader}#EffectDescription">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnAddNoiseEffect.Impl.AddNoiseShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnAddNoiseEffect#Impl#AddNoiseShader}#EffectCategory">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnAddNoiseEffect.Impl.AddNoiseShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnAddNoiseEffect#Impl#AddNoiseShader}#EffectAuthor">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnAddNoiseEffect.Impl.AddNoiseShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnAddNoiseEffect#Impl#AddNoiseShader}#ConstantBufferSize">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnAddNoiseEffect.Impl.AddNoiseShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnAddNoiseEffect#Impl#AddNoiseShader}#InputCount">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnAddNoiseEffect.Impl.AddNoiseShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnAddNoiseEffect#Impl#AddNoiseShader}#ResourceTextureCount">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnAddNoiseEffect.Impl.AddNoiseShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnAddNoiseEffect#Impl#AddNoiseShader}#InputTypes">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnAddNoiseEffect.Impl.AddNoiseShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnAddNoiseEffect#Impl#AddNoiseShader}#InputDescriptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnAddNoiseEffect.Impl.AddNoiseShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnAddNoiseEffect#Impl#AddNoiseShader}#ResourceTextureDescriptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnAddNoiseEffect.Impl.AddNoiseShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnAddNoiseEffect#Impl#AddNoiseShader}#PixelOptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnAddNoiseEffect.Impl.AddNoiseShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnAddNoiseEffect#Impl#AddNoiseShader}#BufferPrecision">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnAddNoiseEffect.Impl.AddNoiseShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnAddNoiseEffect#Impl#AddNoiseShader}#ChannelDepth">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnAddNoiseEffect.Impl.AddNoiseShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnAddNoiseEffect#Impl#AddNoiseShader}#ShaderProfile">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnAddNoiseEffect.Impl.AddNoiseShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnAddNoiseEffect#Impl#AddNoiseShader}#CompileOptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnAddNoiseEffect.Impl.AddNoiseShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnAddNoiseEffect#Impl#AddNoiseShader}#HlslSource">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnAddNoiseEffect.Impl.AddNoiseShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnAddNoiseEffect#Impl#AddNoiseShader}#HlslBytecode">
            <inheritdoc/>
        </member>
        <member name="M:PaintDotNet.Effects.Gpu.PdnAddNoiseEffect.Impl.AddNoiseShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnAddNoiseEffect#Impl#AddNoiseShader}#CreateFromConstantBuffer(System.ReadOnlySpan{System.Byte})">
            <inheritdoc/>
        </member>
        <member name="M:PaintDotNet.Effects.Gpu.PdnAddNoiseEffect.Impl.AddNoiseShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnAddNoiseEffect#Impl#AddNoiseShader}#LoadConstantBuffer``1(PaintDotNet.Effects.Gpu.PdnAddNoiseEffect.Impl.AddNoiseShader@,``0@)">
            <inheritdoc/>
        </member>
        <member name="T:PaintDotNet.Effects.Gpu.PdnAutoLevel">
            <summary>
            Contains methods that enable the calculation of auto-leveling values for use with <see cref="T:PaintDotNet.Effects.Gpu.PdnLevelsEffect"/>.
            </summary>
        </member>
        <member name="M:PaintDotNet.Effects.Gpu.PdnAutoLevel.SetEffectProperties(PaintDotNet.Effects.Gpu.PdnLevelsEffect,PaintDotNet.Direct2D1.Effects.IHistogramData,System.Single,System.Single)">
            <summary>
            Sets the properties of a <see cref="T:PaintDotNet.Effects.Gpu.PdnLevelsEffect"/> to perform auto-leveling. This method
            will produce the same values and output as using Paint.NET's built-in Auto-Level adjustment.
            </summary>
            <param name="levelsEffect">The effect to set properties on.</param>
            <param name="histogram">A histogram of the image, created with <see cref="T:PaintDotNet.Direct2D1.Effects.HistogramEffect2"/>.</param>
            <param name="blackPointPercentile">The percentile to use for black point calculation.</param>
            <param name="whitePointPercentile">The percentile to use for white point calculation.</param>
        </member>
        <member name="T:PaintDotNet.Effects.Gpu.PdnBokehEffect">
            <summary>
            A Direct2D effect that implements Paint.NET's Bokeh blur.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnBokehEffect.Props.Radius">
            <summary>
            The radius of the bokeh effect. A value of 0 will disable the blur effect.<br/>
            The valid range is [0, 300], the default is 25.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnBokehEffect.Props.Quality">
            <summary>
            The quality of the bokeh effect. Performance is affected linearly. For example, a quality of 6 takes
            about twice as long to render as a quality value of 3.<br/>
            The range is [1, 10] and the default is 3.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnBokehEffect.Props.EdgeMode">
            <summary>
            Specifies how samples outside the bounds of the input image are calculated.<br/>
            If this value is Transparent, the effect pads the image with transparent pixels as it applies the blur kernel,
            resulting in a soft edge. The output will be larger than the input by approximately the blur radius, in pixels.
            If set to another edge mode, the effect clamps the output to the size of the input image.<br/>
            The default value is Mirror.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnBokehEffect.Props.AlphaMode">
            <summary>
            Specifies the alpha mode for the input and output. The default value is Premultiplied.
            </summary>
        </member>
        <member name="T:PaintDotNet.Effects.Gpu.PdnBrightnessContrastEffect">
            <summary>
            A Direct2D effect that operates the same as Paint.NET's built-in Brightness &amp; Contrast adjustment.
            </summary>
            <inheritdoc cref="T:PaintDotNet.Effects.Gpu.PdnBrightnessContrastEffect"/>
            <inheritdoc cref="T:PaintDotNet.Effects.Gpu.PdnBrightnessContrastEffect"/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnBrightnessContrastEffect.Props.Brightness">
            <summary>
            Specifies the amount to adjust the input's brightness by. The range of this property is
            [-1, +1], which corresponds to the UI's range of [-100, +100]. The default value is 0.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnBrightnessContrastEffect.Props.Contrast">
            <summary>
            Specifies the amount to adjust the input's contrast by. The range of this property is
            [-1, +1], which corresponds to the UI's range of [-100, +100]. The default value is 0.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnBrightnessContrastEffect.Props.AlphaMode">
            <summary>
            Specifies the alpha mode for the input image, and for the output.<br/>
            The default value is Premultiplied.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnBrightnessContrastEffect.Props.InputGamma">
            <summary>
            Indicates the gamma of the input image, and for the output. If the input image is known to be linear, then the
            <see cref="F:PaintDotNet.Effects.Gpu.PdnBrightnessContrastInputGamma.Linear"/> value should be used so that the correct calculations are used.<br/>
            The default value is <see cref="F:PaintDotNet.Effects.Gpu.PdnBrightnessContrastInputGamma.Srgb"/>.
            </summary>
        </member>
        <member name="T:PaintDotNet.Effects.Gpu.PdnBrightnessContrastEffect.BrightnessContrastShader">
            <inheritdoc cref="T:PaintDotNet.Effects.Gpu.PdnBrightnessContrastEffect.BrightnessContrastShader"/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnBrightnessContrastEffect.BrightnessContrastShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnBrightnessContrastEffect#BrightnessContrastShader}#EffectId">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnBrightnessContrastEffect.BrightnessContrastShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnBrightnessContrastEffect#BrightnessContrastShader}#EffectDisplayName">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnBrightnessContrastEffect.BrightnessContrastShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnBrightnessContrastEffect#BrightnessContrastShader}#EffectDescription">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnBrightnessContrastEffect.BrightnessContrastShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnBrightnessContrastEffect#BrightnessContrastShader}#EffectCategory">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnBrightnessContrastEffect.BrightnessContrastShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnBrightnessContrastEffect#BrightnessContrastShader}#EffectAuthor">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnBrightnessContrastEffect.BrightnessContrastShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnBrightnessContrastEffect#BrightnessContrastShader}#ConstantBufferSize">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnBrightnessContrastEffect.BrightnessContrastShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnBrightnessContrastEffect#BrightnessContrastShader}#InputCount">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnBrightnessContrastEffect.BrightnessContrastShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnBrightnessContrastEffect#BrightnessContrastShader}#ResourceTextureCount">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnBrightnessContrastEffect.BrightnessContrastShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnBrightnessContrastEffect#BrightnessContrastShader}#InputTypes">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnBrightnessContrastEffect.BrightnessContrastShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnBrightnessContrastEffect#BrightnessContrastShader}#InputDescriptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnBrightnessContrastEffect.BrightnessContrastShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnBrightnessContrastEffect#BrightnessContrastShader}#ResourceTextureDescriptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnBrightnessContrastEffect.BrightnessContrastShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnBrightnessContrastEffect#BrightnessContrastShader}#PixelOptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnBrightnessContrastEffect.BrightnessContrastShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnBrightnessContrastEffect#BrightnessContrastShader}#BufferPrecision">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnBrightnessContrastEffect.BrightnessContrastShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnBrightnessContrastEffect#BrightnessContrastShader}#ChannelDepth">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnBrightnessContrastEffect.BrightnessContrastShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnBrightnessContrastEffect#BrightnessContrastShader}#ShaderProfile">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnBrightnessContrastEffect.BrightnessContrastShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnBrightnessContrastEffect#BrightnessContrastShader}#CompileOptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnBrightnessContrastEffect.BrightnessContrastShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnBrightnessContrastEffect#BrightnessContrastShader}#HlslSource">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnBrightnessContrastEffect.BrightnessContrastShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnBrightnessContrastEffect#BrightnessContrastShader}#HlslBytecode">
            <inheritdoc/>
        </member>
        <member name="M:PaintDotNet.Effects.Gpu.PdnBrightnessContrastEffect.BrightnessContrastShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnBrightnessContrastEffect#BrightnessContrastShader}#CreateFromConstantBuffer(System.ReadOnlySpan{System.Byte})">
            <inheritdoc/>
        </member>
        <member name="M:PaintDotNet.Effects.Gpu.PdnBrightnessContrastEffect.BrightnessContrastShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnBrightnessContrastEffect#BrightnessContrastShader}#LoadConstantBuffer``1(PaintDotNet.Effects.Gpu.PdnBrightnessContrastEffect.BrightnessContrastShader@,``0@)">
            <inheritdoc/>
        </member>
        <member name="T:PaintDotNet.Effects.Gpu.PdnBrightnessContrastEffect.FullContrastShader">
            <inheritdoc cref="T:PaintDotNet.Effects.Gpu.PdnBrightnessContrastEffect.FullContrastShader"/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnBrightnessContrastEffect.FullContrastShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnBrightnessContrastEffect#FullContrastShader}#EffectId">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnBrightnessContrastEffect.FullContrastShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnBrightnessContrastEffect#FullContrastShader}#EffectDisplayName">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnBrightnessContrastEffect.FullContrastShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnBrightnessContrastEffect#FullContrastShader}#EffectDescription">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnBrightnessContrastEffect.FullContrastShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnBrightnessContrastEffect#FullContrastShader}#EffectCategory">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnBrightnessContrastEffect.FullContrastShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnBrightnessContrastEffect#FullContrastShader}#EffectAuthor">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnBrightnessContrastEffect.FullContrastShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnBrightnessContrastEffect#FullContrastShader}#ConstantBufferSize">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnBrightnessContrastEffect.FullContrastShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnBrightnessContrastEffect#FullContrastShader}#InputCount">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnBrightnessContrastEffect.FullContrastShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnBrightnessContrastEffect#FullContrastShader}#ResourceTextureCount">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnBrightnessContrastEffect.FullContrastShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnBrightnessContrastEffect#FullContrastShader}#InputTypes">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnBrightnessContrastEffect.FullContrastShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnBrightnessContrastEffect#FullContrastShader}#InputDescriptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnBrightnessContrastEffect.FullContrastShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnBrightnessContrastEffect#FullContrastShader}#ResourceTextureDescriptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnBrightnessContrastEffect.FullContrastShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnBrightnessContrastEffect#FullContrastShader}#PixelOptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnBrightnessContrastEffect.FullContrastShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnBrightnessContrastEffect#FullContrastShader}#BufferPrecision">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnBrightnessContrastEffect.FullContrastShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnBrightnessContrastEffect#FullContrastShader}#ChannelDepth">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnBrightnessContrastEffect.FullContrastShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnBrightnessContrastEffect#FullContrastShader}#ShaderProfile">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnBrightnessContrastEffect.FullContrastShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnBrightnessContrastEffect#FullContrastShader}#CompileOptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnBrightnessContrastEffect.FullContrastShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnBrightnessContrastEffect#FullContrastShader}#HlslSource">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnBrightnessContrastEffect.FullContrastShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnBrightnessContrastEffect#FullContrastShader}#HlslBytecode">
            <inheritdoc/>
        </member>
        <member name="M:PaintDotNet.Effects.Gpu.PdnBrightnessContrastEffect.FullContrastShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnBrightnessContrastEffect#FullContrastShader}#CreateFromConstantBuffer(System.ReadOnlySpan{System.Byte})">
            <inheritdoc/>
        </member>
        <member name="M:PaintDotNet.Effects.Gpu.PdnBrightnessContrastEffect.FullContrastShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnBrightnessContrastEffect#FullContrastShader}#LoadConstantBuffer``1(PaintDotNet.Effects.Gpu.PdnBrightnessContrastEffect.FullContrastShader@,``0@)">
            <inheritdoc/>
        </member>
        <member name="F:PaintDotNet.Effects.Gpu.PdnBrightnessContrastInputGamma.Linear">
            <summary>
            <inheritdoc cref="F:PaintDotNet.Direct2D1.HighlightsAndShadowsInputGamma.Linear"/>
            </summary>
        </member>
        <member name="F:PaintDotNet.Effects.Gpu.PdnBrightnessContrastInputGamma.Srgb">
            <summary>
            <inheritdoc cref="F:PaintDotNet.Direct2D1.HighlightsAndShadowsInputGamma.Srgb"/>
            </summary>
        </member>
        <member name="T:PaintDotNet.Effects.Gpu.PdnBulgeEffect">
            <summary>
            Provides Paint.NET's Bulge effect as a <see cref="T:PaintDotNet.Direct2D1.DynamicEffect"/> that can be used
            for rendering with Direct2D.
            </summary>
            <remarks>
            <inheritdoc />
            </remarks>
        </member>
        <member name="M:PaintDotNet.Effects.Gpu.PdnBulgeEffect.#ctor(PaintDotNet.Direct2D1.IDeviceContext)">
            <summary>
            <inheritdoc />
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnBulgeEffect.Props.Strength">
            <summary>
            Gets or sets the strength of the bulge effect. The range is [-3, +1], and the default value is 0.45.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnBulgeEffect.Props.Center">
            <summary>
            Gets or sets the center of the bulge. This is typically set to the center point of the InputRect
            or the output/clip rect. The default is (500, 500).
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnBulgeEffect.Props.Diameter">
            <summary>
            Gets or sets the diameter of the bulge. This is typically set to the minimum of the width and
            height of either the InputRect or the output/clip rect. The minimum value is 1.
            </summary>
        </member>
        <member name="T:PaintDotNet.Effects.Gpu.PdnBulgeSampleMap">
            <inheritdoc cref="T:PaintDotNet.Effects.Gpu.PdnBulgeSampleMap"/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnBulgeSampleMap.Props.Strength">
            <summary>
            Specifies the strength of the bulge effect. The range is [-3, +1], and the default is 0.45.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnBulgeSampleMap.Props.Center">
            <summary>
            Specifies the offset of the bulge's center, in pixels.<br/>
            To center the bulge you should set this to the center point of the desired output rectangle.<br/>
            The default value is (0,0) which produces a bulge centered at the top-left.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnBulgeSampleMap.Props.Diameter">
            <summary>
            Specifies the diameter of the edge of the bulge. This is typically set to the minimum of the
            width and height of either the source image or the output/clip rectangle.
            </summary>
        </member>
        <member name="T:PaintDotNet.Effects.Gpu.PdnBulgeSampleMap.SampleMapShader">
            <inheritdoc cref="T:PaintDotNet.Effects.Gpu.PdnBulgeSampleMap.SampleMapShader"/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnBulgeSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnBulgeSampleMap#SampleMapShader}#EffectId">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnBulgeSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnBulgeSampleMap#SampleMapShader}#EffectDisplayName">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnBulgeSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnBulgeSampleMap#SampleMapShader}#EffectDescription">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnBulgeSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnBulgeSampleMap#SampleMapShader}#EffectCategory">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnBulgeSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnBulgeSampleMap#SampleMapShader}#EffectAuthor">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnBulgeSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnBulgeSampleMap#SampleMapShader}#ConstantBufferSize">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnBulgeSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnBulgeSampleMap#SampleMapShader}#InputCount">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnBulgeSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnBulgeSampleMap#SampleMapShader}#ResourceTextureCount">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnBulgeSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnBulgeSampleMap#SampleMapShader}#InputTypes">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnBulgeSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnBulgeSampleMap#SampleMapShader}#InputDescriptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnBulgeSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnBulgeSampleMap#SampleMapShader}#ResourceTextureDescriptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnBulgeSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnBulgeSampleMap#SampleMapShader}#PixelOptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnBulgeSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnBulgeSampleMap#SampleMapShader}#BufferPrecision">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnBulgeSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnBulgeSampleMap#SampleMapShader}#ChannelDepth">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnBulgeSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnBulgeSampleMap#SampleMapShader}#ShaderProfile">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnBulgeSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnBulgeSampleMap#SampleMapShader}#CompileOptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnBulgeSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnBulgeSampleMap#SampleMapShader}#HlslSource">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnBulgeSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnBulgeSampleMap#SampleMapShader}#HlslBytecode">
            <inheritdoc/>
        </member>
        <member name="M:PaintDotNet.Effects.Gpu.PdnBulgeSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnBulgeSampleMap#SampleMapShader}#CreateFromConstantBuffer(System.ReadOnlySpan{System.Byte})">
            <inheritdoc/>
        </member>
        <member name="M:PaintDotNet.Effects.Gpu.PdnBulgeSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnBulgeSampleMap#SampleMapShader}#LoadConstantBuffer``1(PaintDotNet.Effects.Gpu.PdnBulgeSampleMap.SampleMapShader@,``0@)">
            <inheritdoc/>
        </member>
        <member name="T:PaintDotNet.Effects.Gpu.PdnCloudsEffect">
            <summary>
            A Direct2D effect that renders Paint.NET's Clouds effect.
            </summary>
            <inheritdoc cref="T:PaintDotNet.Effects.Gpu.PdnCloudsEffect"/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnCloudsEffect.Props.Size">
            <summary>
            The size of the clouds. This is not a clipping rect, but rather sets the base scaling.
            This is typically set to the size of the output region. The default is (1000, 1000).
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnCloudsEffect.Props.Color1">
            <summary>
            Specifies the primary color of the clouds. The default is black.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnCloudsEffect.Props.Color2">
            <summary>
            Specifies the secondary color of the clouds. The default is white.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnCloudsEffect.Props.Scale">
            <summary>
            Specifies the scaling for the clouds. The range is [2, 1000]. The default value is 250.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnCloudsEffect.Props.Power">
            <summary>
            Specifies how much detail is in the clouds. The range is [0, 1] and the default is 0.5.
            This corresponds to the "Roughness" parameter in the Paint.NET Clouds UI.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnCloudsEffect.Props.Seed">
            <summary>
            Specifies a seed number to use for random number generation. The default value is 0.
            </summary>
            <remarks>
            Typically the Seed property is user configurable with a "Reseed" button that just increments its value,
            while SeedInstance is generated once per effect instance. If two effect instances have the same
            value for both seed properties, rendering output will be identical for both.<br/>
            </remarks>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnCloudsEffect.Props.SeedInstance">
            <summary>
            Specifies a seed number to use for random number generation. The default value is auto-generated.
            </summary>
            <remarks>
            <inheritdoc cref="P:PaintDotNet.Effects.Gpu.PdnCloudsEffect.Props.Seed" />
            </remarks>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnCloudsEffect.Props.AlphaMode">
            <summary>
            Specifies the alpha mode for the output. The default value is Premultiplied.
            </summary>
        </member>
        <member name="T:PaintDotNet.Effects.Gpu.PdnCloudsEffect.Impl">
            <inheritdoc cref="T:PaintDotNet.Effects.Gpu.PdnCloudsEffect.Impl"/>
        </member>
        <member name="T:PaintDotNet.Effects.Gpu.PdnCloudsEffect.Impl.CloudsShader">
            <inheritdoc cref="T:PaintDotNet.Effects.Gpu.PdnCloudsEffect.Impl.CloudsShader"/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnCloudsEffect.Impl.CloudsShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnCloudsEffect#Impl#CloudsShader}#EffectId">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnCloudsEffect.Impl.CloudsShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnCloudsEffect#Impl#CloudsShader}#EffectDisplayName">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnCloudsEffect.Impl.CloudsShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnCloudsEffect#Impl#CloudsShader}#EffectDescription">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnCloudsEffect.Impl.CloudsShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnCloudsEffect#Impl#CloudsShader}#EffectCategory">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnCloudsEffect.Impl.CloudsShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnCloudsEffect#Impl#CloudsShader}#EffectAuthor">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnCloudsEffect.Impl.CloudsShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnCloudsEffect#Impl#CloudsShader}#ConstantBufferSize">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnCloudsEffect.Impl.CloudsShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnCloudsEffect#Impl#CloudsShader}#InputCount">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnCloudsEffect.Impl.CloudsShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnCloudsEffect#Impl#CloudsShader}#ResourceTextureCount">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnCloudsEffect.Impl.CloudsShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnCloudsEffect#Impl#CloudsShader}#InputTypes">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnCloudsEffect.Impl.CloudsShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnCloudsEffect#Impl#CloudsShader}#InputDescriptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnCloudsEffect.Impl.CloudsShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnCloudsEffect#Impl#CloudsShader}#ResourceTextureDescriptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnCloudsEffect.Impl.CloudsShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnCloudsEffect#Impl#CloudsShader}#PixelOptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnCloudsEffect.Impl.CloudsShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnCloudsEffect#Impl#CloudsShader}#BufferPrecision">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnCloudsEffect.Impl.CloudsShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnCloudsEffect#Impl#CloudsShader}#ChannelDepth">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnCloudsEffect.Impl.CloudsShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnCloudsEffect#Impl#CloudsShader}#ShaderProfile">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnCloudsEffect.Impl.CloudsShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnCloudsEffect#Impl#CloudsShader}#CompileOptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnCloudsEffect.Impl.CloudsShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnCloudsEffect#Impl#CloudsShader}#HlslSource">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnCloudsEffect.Impl.CloudsShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnCloudsEffect#Impl#CloudsShader}#HlslBytecode">
            <inheritdoc/>
        </member>
        <member name="M:PaintDotNet.Effects.Gpu.PdnCloudsEffect.Impl.CloudsShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnCloudsEffect#Impl#CloudsShader}#CreateFromConstantBuffer(System.ReadOnlySpan{System.Byte})">
            <inheritdoc/>
        </member>
        <member name="M:PaintDotNet.Effects.Gpu.PdnCloudsEffect.Impl.CloudsShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnCloudsEffect#Impl#CloudsShader}#LoadConstantBuffer``1(PaintDotNet.Effects.Gpu.PdnCloudsEffect.Impl.CloudsShader@,``0@)">
            <inheritdoc/>
        </member>
        <member name="T:PaintDotNet.Effects.Gpu.PdnCrystalizeEffect">
            <summary>
            Provides Paint.NET's Crystalize effect as a <see cref="T:PaintDotNet.Direct2D1.DynamicEffect"/> that can be used
            for rendering with Direct2D.
            </summary>
            <remarks>
            <inheritdoc />
            </remarks>
        </member>
        <member name="M:PaintDotNet.Effects.Gpu.PdnCrystalizeEffect.#ctor(PaintDotNet.Direct2D1.IDeviceContext)">
            <summary>
            <inheritdoc />
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnCrystalizeEffect.Props.CellSize">
            <summary>
            Gets or sets the size of each cell. The range is [2, 250], and the default is 8.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnCrystalizeEffect.Props.Seed">
            <summary>
            Gets or sets a seed for random number generation.
            </summary>
            <remarks>
            <inheritdoc cref="P:PaintDotNet.Effects.Gpu.PdnCrystalizeSampleMap.Props.Seed" />
            </remarks>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnCrystalizeEffect.Props.SeedInstance">
            <summary>
            <inheritdoc cref="P:PaintDotNet.Effects.Gpu.PdnCrystalizeEffect.Props.Seed" /> The default value is auto-generated at instantiation time.
            </summary>
            <remarks>
            <inheritdoc cref="P:PaintDotNet.Effects.Gpu.PdnCrystalizeEffect.Props.Seed" />
            </remarks>
        </member>
        <member name="T:PaintDotNet.Effects.Gpu.PdnCrystalizeSampleMap">
            <inheritdoc cref="T:PaintDotNet.Effects.Gpu.PdnCrystalizeSampleMap"/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnCrystalizeSampleMap.Props.CellSize">
            <summary>
            Specifies the size of each crystal cell. The range is [2, 250], and the default is 8.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnCrystalizeSampleMap.Props.Seed">
            <summary>
            Specifies a seed number to use for random number generation.<br/>
            </summary>
            <remarks>
            Typically the Seed property is user configurable with a "Reseed" button that just increments its value,
            while SeedInstance is generated once per effect instance. If two effect instances have the same
            value for both seed properties, rendering output will be identical for both.<br/>
            Sample maps that are participating in multisampled rendering for the same effect instance should all
            have the same values for Seed and SeedInstance.
            </remarks>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnCrystalizeSampleMap.Props.SeedInstance">
            <summary>
            Specifies a seed number to use for random number generation.<br/>
            </summary>
            <remarks>
            <inheritdoc cref="P:PaintDotNet.Effects.Gpu.PdnCrystalizeSampleMap.Props.Seed" />
            </remarks>
        </member>
        <member name="T:PaintDotNet.Effects.Gpu.PdnCrystalizeSampleMap.SampleMapShader">
            <inheritdoc cref="T:PaintDotNet.Effects.Gpu.PdnCrystalizeSampleMap.SampleMapShader"/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnCrystalizeSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnCrystalizeSampleMap#SampleMapShader}#EffectId">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnCrystalizeSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnCrystalizeSampleMap#SampleMapShader}#EffectDisplayName">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnCrystalizeSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnCrystalizeSampleMap#SampleMapShader}#EffectDescription">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnCrystalizeSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnCrystalizeSampleMap#SampleMapShader}#EffectCategory">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnCrystalizeSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnCrystalizeSampleMap#SampleMapShader}#EffectAuthor">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnCrystalizeSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnCrystalizeSampleMap#SampleMapShader}#ConstantBufferSize">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnCrystalizeSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnCrystalizeSampleMap#SampleMapShader}#InputCount">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnCrystalizeSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnCrystalizeSampleMap#SampleMapShader}#ResourceTextureCount">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnCrystalizeSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnCrystalizeSampleMap#SampleMapShader}#InputTypes">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnCrystalizeSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnCrystalizeSampleMap#SampleMapShader}#InputDescriptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnCrystalizeSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnCrystalizeSampleMap#SampleMapShader}#ResourceTextureDescriptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnCrystalizeSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnCrystalizeSampleMap#SampleMapShader}#PixelOptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnCrystalizeSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnCrystalizeSampleMap#SampleMapShader}#BufferPrecision">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnCrystalizeSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnCrystalizeSampleMap#SampleMapShader}#ChannelDepth">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnCrystalizeSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnCrystalizeSampleMap#SampleMapShader}#ShaderProfile">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnCrystalizeSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnCrystalizeSampleMap#SampleMapShader}#CompileOptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnCrystalizeSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnCrystalizeSampleMap#SampleMapShader}#HlslSource">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnCrystalizeSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnCrystalizeSampleMap#SampleMapShader}#HlslBytecode">
            <inheritdoc/>
        </member>
        <member name="M:PaintDotNet.Effects.Gpu.PdnCrystalizeSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnCrystalizeSampleMap#SampleMapShader}#CreateFromConstantBuffer(System.ReadOnlySpan{System.Byte})">
            <inheritdoc/>
        </member>
        <member name="M:PaintDotNet.Effects.Gpu.PdnCrystalizeSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnCrystalizeSampleMap#SampleMapShader}#LoadConstantBuffer``1(PaintDotNet.Effects.Gpu.PdnCrystalizeSampleMap.SampleMapShader@,``0@)">
            <inheritdoc/>
        </member>
        <member name="T:PaintDotNet.Effects.Gpu.PdnDentsEffect">
            <summary>
            Provides Paint.NET's Dents effect as a <see cref="T:PaintDotNet.Direct2D1.DynamicEffect"/> that can be used
            for rendering with Direct2D.
            </summary>
            <remarks>
            <inheritdoc />
            </remarks>
        </member>
        <member name="M:PaintDotNet.Effects.Gpu.PdnDentsEffect.#ctor(PaintDotNet.Direct2D1.IDeviceContext)">
            <summary>
            <inheritdoc />
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnDentsEffect.Props.Scale">
            <summary>
            Specifies the overall scale of the effect rendering. This is usually set to
            the minimum of the width/height of InputRect or the output/clip rect.<br/>
            The default value is 1024.
            </summary>
            <remarks>
            This effective scale is <see cref="P:PaintDotNet.Effects.Gpu.PdnDentsEffect.Props.Scale"/> * <see cref="P:PaintDotNet.Effects.Gpu.PdnDentsEffect.Props.NoiseScale"/>. Usually Scale is set
            depending on the input/output rectangles, and NoiseScale can be user-configurable.
            </remarks>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnDentsEffect.Props.NoiseScale">
            <summary>
            Specifies the scale of the noise. The default value is 25.
            </summary>
            <remarks>
            This effective scale is <see cref="P:PaintDotNet.Effects.Gpu.PdnDentsEffect.Props.Scale"/> * <see cref="P:PaintDotNet.Effects.Gpu.PdnDentsEffect.Props.NoiseScale"/>. Usually Scale is set
            depending on the input/output rectangles, and NoiseScale can be user-configurable.
            </remarks>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnDentsEffect.Props.NoiseRefraction">
            <summary>
            Specifies the amount of refraction in the noise. The default value is 50.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnDentsEffect.Props.NoiseDetail">
            <summary>
            Specifies the amount of detail in the noise. The default value is 10.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnDentsEffect.Props.NoiseTurbulence">
            <summary>
            Specifies the amount of turbulence in the noise. The default is 10.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnDentsEffect.Props.NoiseCenter">
            <summary>
            Specifies the center of rotation for the noise, as configured by the <see cref="P:PaintDotNet.Effects.Gpu.PdnDentsEffect.Props.NoiseAngle"/> property.<br/>
            The default is (512, 512), which is half of the default Scale.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnDentsEffect.Props.NoiseAngle">
            <summary>
            Specifies the rotation for the noise. Rotation is performed around the <see cref="P:PaintDotNet.Effects.Gpu.PdnDentsEffect.Props.NoiseCenter"/>.<br/>
            The default is 137.2.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnDentsEffect.Props.NoiseSeed">
            <summary>
            Gets or sets a seed for random number generation.
            </summary>
            <remarks>
            <inheritdoc cref="P:PaintDotNet.Effects.Gpu.PdnDentsSampleMap.Props.NoiseSeed" />
            </remarks>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnDentsEffect.Props.NoiseSeedInstance">
            <summary>
            <inheritdoc cref="P:PaintDotNet.Effects.Gpu.PdnDentsEffect.Props.NoiseSeed" /> The default value is auto-generated at instantiation time.
            </summary>
            <remarks>
            <inheritdoc cref="P:PaintDotNet.Effects.Gpu.PdnDentsEffect.Props.NoiseSeed" />
            </remarks>
        </member>
        <member name="T:PaintDotNet.Effects.Gpu.PdnDentsSampleMap">
            <inheritdoc cref="T:PaintDotNet.Effects.Gpu.PdnDentsSampleMap"/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnDentsSampleMap.Props.NoiseSeed">
            <summary>
            Specifies a seed number to use for random number generation.<br/>
            </summary>
            <remarks>
            Typically the NoiseSeed property is user configurable with a "Reseed" button that just increments its value,
            while NoiseSeedInstance is generated once per effect instance. If two effect instances have the same
            value for both seed properties, rendering output will be identical for both.<br/>
            Sample maps that are participating in multisampled rendering for the same effect instance should all
            have the same values for NoiseSeed and NoiseSeedInstance.
            </remarks>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnDentsSampleMap.Props.NoiseSeedInstance">
            <summary>
            Specifies a seed number to use for random number generation.<br/>
            </summary>
            <remarks>
            <inheritdoc cref="P:PaintDotNet.Effects.Gpu.PdnDentsSampleMap.Props.NoiseSeed" />
            </remarks>
        </member>
        <member name="T:PaintDotNet.Effects.Gpu.PdnDentsSampleMap.SampleMapShader">
            <inheritdoc cref="T:PaintDotNet.Effects.Gpu.PdnDentsSampleMap.SampleMapShader"/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnDentsSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnDentsSampleMap#SampleMapShader}#EffectId">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnDentsSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnDentsSampleMap#SampleMapShader}#EffectDisplayName">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnDentsSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnDentsSampleMap#SampleMapShader}#EffectDescription">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnDentsSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnDentsSampleMap#SampleMapShader}#EffectCategory">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnDentsSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnDentsSampleMap#SampleMapShader}#EffectAuthor">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnDentsSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnDentsSampleMap#SampleMapShader}#ConstantBufferSize">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnDentsSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnDentsSampleMap#SampleMapShader}#InputCount">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnDentsSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnDentsSampleMap#SampleMapShader}#ResourceTextureCount">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnDentsSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnDentsSampleMap#SampleMapShader}#InputTypes">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnDentsSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnDentsSampleMap#SampleMapShader}#InputDescriptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnDentsSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnDentsSampleMap#SampleMapShader}#ResourceTextureDescriptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnDentsSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnDentsSampleMap#SampleMapShader}#PixelOptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnDentsSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnDentsSampleMap#SampleMapShader}#BufferPrecision">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnDentsSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnDentsSampleMap#SampleMapShader}#ChannelDepth">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnDentsSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnDentsSampleMap#SampleMapShader}#ShaderProfile">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnDentsSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnDentsSampleMap#SampleMapShader}#CompileOptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnDentsSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnDentsSampleMap#SampleMapShader}#HlslSource">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnDentsSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnDentsSampleMap#SampleMapShader}#HlslBytecode">
            <inheritdoc/>
        </member>
        <member name="M:PaintDotNet.Effects.Gpu.PdnDentsSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnDentsSampleMap#SampleMapShader}#CreateFromConstantBuffer(System.ReadOnlySpan{System.Byte})">
            <inheritdoc/>
        </member>
        <member name="M:PaintDotNet.Effects.Gpu.PdnDentsSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnDentsSampleMap#SampleMapShader}#LoadConstantBuffer``1(PaintDotNet.Effects.Gpu.PdnDentsSampleMap.SampleMapShader@,``0@)">
            <inheritdoc/>
        </member>
        <member name="T:PaintDotNet.Effects.Gpu.PdnDistortionEffect">
            <summary>
            The base class for Paint.NET distortion effects.
            </summary>
            <remarks>
            <inheritdoc cref="T:PaintDotNet.Direct2D1.DynamicImage" />
            </remarks>
        </member>
        <member name="M:PaintDotNet.Effects.Gpu.PdnDistortionEffect.#ctor(PaintDotNet.Direct2D1.IDeviceContext)">
            <summary>
            Creates an instance of the distortion effect.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnDistortionEffect.Props.EdgeMode">
            <summary>
            <inheritdoc cref="P:PaintDotNet.Direct2D1.MultisampleMapRenderer.Props.EdgeMode"/><br/>
            The default value will vary depending on the effect.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnDistortionEffect.Props.Quality">
            <summary>
            Gets or sets the quality of rendering. This controls the number of sub-pixel samples used for
            multisample antialiasing. The number of samples is the square of this value.<br/>
            Rendering performance will be proportional to the number of samples, which means it is
            proportional to the square of this value. That is, a quality value of 8, which uses 64 samples,
            will take about 64 times as long to render compared to using a quality value of 1.<br/>
            The range is [1, 8] and the default is usually 2 but derived classes may change this.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnDistortionEffect.Props.SamplingMode">
            <summary>
            Gets or sets the sampling mode used when reading from the input image. The default is PdnDistortionSamplingMode.Linear.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnDistortionEffect.Props.AlphaMode">
            <summary>
            Gets or sets the alpha mode for the input and the output. The default value is Premultiplied.
            </summary>
        </member>
        <member name="T:PaintDotNet.Effects.Gpu.PdnDropShadowEffect">
            <summary>
            A Direct2D effect that operates the same as Paint.NET's built-in Drop Shadow effect.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnDropShadowEffect.Props.BlurRadius">
            <summary>
            Specifies the amount of blur to be applied to the alpha channel of the image.<br/>
            The blur is implemented using a gaussian filter.<br/>
            The range for this value is [0, 300], and the default value is 10.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnDropShadowEffect.Props.Distance">
            <summary>
            The distance, in pixels, that the shadow is offset by.<br/>
            The range for this value is unbounded, and the default value is 10.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnDropShadowEffect.Props.Angle">
            <summary>
            Specifies the angle, in degrees, of the offset for the drop shadow. The value value is -45.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnDropShadowEffect.Props.Color">
            <summary>
            The color of the drop shadow. You must specify this color in straight alpha (not premultiplied).<br/>
            The default value is { R=0, G=0, B=0, A=0.75 } (black at 75% opacity).
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnDropShadowEffect.Props.ShadowOnly">
            <summary>
            Specifies whether to draw the shadow only, or to also include the input. The input will be composited on top of the drop shadow.<br/>
            The default value is false.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnDropShadowEffect.Props.Optimization">
            <summary>
            The level of performance optimization. The default value is <see cref="F:PaintDotNet.Effects.Gpu.PdnDropShadowOptimization.Quality"/>.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnDropShadowEffect.Props.AlphaMode">
            <summary>
            Sets the alpha mode for the input and the output.<br/>
            The default value is Premultiplied.
            </summary>
        </member>
        <member name="F:PaintDotNet.Effects.Gpu.PdnDropShadowOptimization.Speed">
            <summary>
            <inheritdoc cref="F:PaintDotNet.Direct2D1.Effects.ShadowOptimization2.Speed"/>
            </summary>
        </member>
        <member name="F:PaintDotNet.Effects.Gpu.PdnDropShadowOptimization.Balanced">
            <summary>
            <inheritdoc cref="F:PaintDotNet.Direct2D1.Effects.ShadowOptimization2.Balanced"/>
            </summary>
        </member>
        <member name="F:PaintDotNet.Effects.Gpu.PdnDropShadowOptimization.Quality">
            <summary>
            <inheritdoc cref="F:PaintDotNet.Direct2D1.Effects.ShadowOptimization2.Quality"/>
            </summary>
        </member>
        <member name="F:PaintDotNet.Effects.Gpu.PdnDropShadowOptimization.HighQuality">
            <summary>
            <inheritdoc cref="F:PaintDotNet.Direct2D1.Effects.ShadowOptimization2.HighQuality"/>
            </summary>
        </member>
        <member name="T:PaintDotNet.Effects.Gpu.PdnEmbossEffect">
            <summary>
            A Direct2D effect that renders Paint.NET's Emboss effect.
            </summary>
            <remarks>
            This effect is visually distinct from Direct2D's built-in <see cref="T:PaintDotNet.Direct2D1.Effects.EmbossEffect"/>. You should
            use whichever one produces the output that you prefer.
            </remarks>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnEmbossEffect.Props.Angle">
            <summary>
            The rotation angle of the emboss effect, in degrees. The default value is 0,
            which draws highlights on the right and shadows on the left.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnEmbossEffect.Props.AlphaMode">
            <summary>
            The alpha mode for the input. The output is always opaque, so its alpha mode is invariant.<br/>
            The default value is Premultiplied.
            </summary>
        </member>
        <member name="T:PaintDotNet.Effects.Gpu.PdnFragmentEffect">
            <summary>
            A Direct2D effect that operates the same as Paint.NET's built-in Fragment effect.<br/>
            </summary>
            <inheritdoc cref="T:PaintDotNet.Effects.Gpu.PdnFragmentEffect"/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnFragmentEffect.Props.Fragments">
            <summary>
            The number of fragments to render. The range is 2 to 200, and the default is 4.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnFragmentEffect.Props.Distance">
            <summary>
            The distance of each fragment from the center. The range is 0 to 400 and the default is 8.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnFragmentEffect.Props.Angle">
            <summary>
            The offset for the angle of each fragment, in degrees. The default is 0.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnFragmentEffect.Props.AlphaMode">
            <summary>
            Specifies the alpha mode of the input and output. The default value is <see cref="F:PaintDotNet.Effects.Gpu.PdnFragmentAlphaMode.Premultiplied"/>.<br/>
            </summary>
        </member>
        <member name="T:PaintDotNet.Effects.Gpu.PdnFragmentEffect.FragmentShader">
            <inheritdoc cref="T:PaintDotNet.Effects.Gpu.PdnFragmentEffect.FragmentShader"/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnFragmentEffect.FragmentShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnFragmentEffect#FragmentShader}#EffectId">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnFragmentEffect.FragmentShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnFragmentEffect#FragmentShader}#EffectDisplayName">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnFragmentEffect.FragmentShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnFragmentEffect#FragmentShader}#EffectDescription">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnFragmentEffect.FragmentShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnFragmentEffect#FragmentShader}#EffectCategory">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnFragmentEffect.FragmentShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnFragmentEffect#FragmentShader}#EffectAuthor">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnFragmentEffect.FragmentShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnFragmentEffect#FragmentShader}#ConstantBufferSize">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnFragmentEffect.FragmentShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnFragmentEffect#FragmentShader}#InputCount">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnFragmentEffect.FragmentShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnFragmentEffect#FragmentShader}#ResourceTextureCount">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnFragmentEffect.FragmentShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnFragmentEffect#FragmentShader}#InputTypes">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnFragmentEffect.FragmentShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnFragmentEffect#FragmentShader}#InputDescriptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnFragmentEffect.FragmentShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnFragmentEffect#FragmentShader}#ResourceTextureDescriptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnFragmentEffect.FragmentShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnFragmentEffect#FragmentShader}#PixelOptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnFragmentEffect.FragmentShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnFragmentEffect#FragmentShader}#BufferPrecision">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnFragmentEffect.FragmentShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnFragmentEffect#FragmentShader}#ChannelDepth">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnFragmentEffect.FragmentShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnFragmentEffect#FragmentShader}#ShaderProfile">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnFragmentEffect.FragmentShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnFragmentEffect#FragmentShader}#CompileOptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnFragmentEffect.FragmentShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnFragmentEffect#FragmentShader}#HlslSource">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnFragmentEffect.FragmentShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnFragmentEffect#FragmentShader}#HlslBytecode">
            <inheritdoc/>
        </member>
        <member name="M:PaintDotNet.Effects.Gpu.PdnFragmentEffect.FragmentShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnFragmentEffect#FragmentShader}#CreateFromConstantBuffer(System.ReadOnlySpan{System.Byte})">
            <inheritdoc/>
        </member>
        <member name="M:PaintDotNet.Effects.Gpu.PdnFragmentEffect.FragmentShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnFragmentEffect#FragmentShader}#LoadConstantBuffer``1(PaintDotNet.Effects.Gpu.PdnFragmentEffect.FragmentShader@,``0@)">
            <inheritdoc/>
        </member>
        <member name="M:PaintDotNet.Effects.Gpu.PdnFrostedGlassEffect.#ctor(PaintDotNet.Direct2D1.IDeviceContext)">
            <summary>
            <inheritdoc />
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnFrostedGlassEffect.Props.MinScatterRadius">
            <summary>
            Gets or sets the minimum scatter radius, in pixels. The range is [0, 500]. The default is 0.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnFrostedGlassEffect.Props.MaxScatterRadius">
            <summary>
            Gets or sets the maximum scatter radius, in pixels. The range is [0, 500]. The default is 0.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnFrostedGlassEffect.Props.DiffusionExponent">
            <summary>
            The exponent used when calculating the scatter radius.<br/>
            A value of 1 will evenly distribute scattering in the ring between the min and max radius. Smaller values
            will prefer distribution closer to the min radius, while larger values will prefer distribution closer to
            the max radius.<br/>
            The range is [0.01, 3.0], the default is 1.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnFrostedGlassEffect.Props.Quality">
            <summary>
            Defines the smoothness of the frosted glass effect, which determines the number of samples taken.<br/>
            The range is [1, 8]. The default value is 2.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnFrostedGlassEffect.Props.Seed">
            <summary>
            Gets or sets a seed for random number generation.
            </summary>
            <remarks>
            Typically the Seed property is user configurable with a "Reseed" button that just increments its value,
            while SeedInstance is generated once per effect instance. If two effect instances have the same
            value for both seed properties, rendering output will be identical for both.<br/>
            Sample maps that are participating in multisampled rendering for the same effect instance should all
            have the same values for Seed and InstanceSeed.
            </remarks>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnFrostedGlassEffect.Props.SeedInstance">
            <summary>
            <inheritdoc cref="P:PaintDotNet.Effects.Gpu.PdnFrostedGlassEffect.Props.Seed" /> The default value is auto-generated at instantiation time.
            </summary>
            <remarks>
            <inheritdoc cref="P:PaintDotNet.Effects.Gpu.PdnFrostedGlassEffect.Props.Seed" />
            </remarks>
        </member>
        <member name="T:PaintDotNet.Effects.Gpu.PdnFrostedGlassSampleMap">
            <inheritdoc cref="T:PaintDotNet.Effects.Gpu.PdnFrostedGlassSampleMap"/>
        </member>
        <member name="T:PaintDotNet.Effects.Gpu.PdnFrostedGlassSampleMap.SampleMapShader">
            <inheritdoc cref="T:PaintDotNet.Effects.Gpu.PdnFrostedGlassSampleMap.SampleMapShader"/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnFrostedGlassSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnFrostedGlassSampleMap#SampleMapShader}#EffectId">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnFrostedGlassSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnFrostedGlassSampleMap#SampleMapShader}#EffectDisplayName">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnFrostedGlassSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnFrostedGlassSampleMap#SampleMapShader}#EffectDescription">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnFrostedGlassSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnFrostedGlassSampleMap#SampleMapShader}#EffectCategory">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnFrostedGlassSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnFrostedGlassSampleMap#SampleMapShader}#EffectAuthor">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnFrostedGlassSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnFrostedGlassSampleMap#SampleMapShader}#ConstantBufferSize">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnFrostedGlassSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnFrostedGlassSampleMap#SampleMapShader}#InputCount">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnFrostedGlassSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnFrostedGlassSampleMap#SampleMapShader}#ResourceTextureCount">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnFrostedGlassSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnFrostedGlassSampleMap#SampleMapShader}#InputTypes">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnFrostedGlassSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnFrostedGlassSampleMap#SampleMapShader}#InputDescriptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnFrostedGlassSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnFrostedGlassSampleMap#SampleMapShader}#ResourceTextureDescriptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnFrostedGlassSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnFrostedGlassSampleMap#SampleMapShader}#PixelOptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnFrostedGlassSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnFrostedGlassSampleMap#SampleMapShader}#BufferPrecision">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnFrostedGlassSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnFrostedGlassSampleMap#SampleMapShader}#ChannelDepth">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnFrostedGlassSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnFrostedGlassSampleMap#SampleMapShader}#ShaderProfile">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnFrostedGlassSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnFrostedGlassSampleMap#SampleMapShader}#CompileOptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnFrostedGlassSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnFrostedGlassSampleMap#SampleMapShader}#HlslSource">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnFrostedGlassSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnFrostedGlassSampleMap#SampleMapShader}#HlslBytecode">
            <inheritdoc/>
        </member>
        <member name="M:PaintDotNet.Effects.Gpu.PdnFrostedGlassSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnFrostedGlassSampleMap#SampleMapShader}#CreateFromConstantBuffer(System.ReadOnlySpan{System.Byte})">
            <inheritdoc/>
        </member>
        <member name="M:PaintDotNet.Effects.Gpu.PdnFrostedGlassSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnFrostedGlassSampleMap#SampleMapShader}#LoadConstantBuffer``1(PaintDotNet.Effects.Gpu.PdnFrostedGlassSampleMap.SampleMapShader@,``0@)">
            <inheritdoc/>
        </member>
        <member name="T:PaintDotNet.Effects.Gpu.PdnGlowEffect">
            <summary>
            A Direct2D effect that operates the same as Paint.NET's built-in Glow effect.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnGlowEffect.Props.Glow">
            <summary>
            Specifies the glow amount, which configures the blur radius.<br/>
            The range of this value is [1, 20].<br/>
            The default value is 6.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnGlowEffect.Props.Brightness">
            <summary>
            Specifies how much to adjust the brightness.<br/>
            The range of this value is [-1, +1], which corresponds to the UI's range of [-100, +100].<br/>
            The default value is 0.1.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnGlowEffect.Props.Contrast">
            <summary>
            Specifies how much to adjust the contrast.<br/>
            The range of this value is [-1, +1], which corresponds to the UI's range of [-100, +100].<br/>
            The default value is 0.1.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnGlowEffect.Props.AlphaMode">
            <summary>
            Specifies the alpha mode for the input and output.<br/>
            The default value is <see cref="F:PaintDotNet.Effects.Gpu.PdnGlowAlphaMode.Premultiplied"/>.
            </summary>
        </member>
        <member name="T:PaintDotNet.Effects.Gpu.PdnHueSaturationLightnessEffect">
            <summary>
            A Direct2D effect that adjusts hue, saturation, and lightness in the same manner as Paint.NET's built-in
            Hue &amp; Saturation adjustment.
            </summary>
            <inheritdoc cref="T:PaintDotNet.Effects.Gpu.PdnHueSaturationLightnessEffect"/>
            <inheritdoc cref="T:PaintDotNet.Effects.Gpu.PdnHueSaturationLightnessEffect"/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnHueSaturationLightnessEffect.Props.HueAngleDelta">
            <summary>
            Specifies the change to each pixel's hue. Any finite value is acceptable, but the effective range is
            [-180.0f, +180.0f] due to wrapping.<br/>
            The default values is 0, which will leave the hue unchanged.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnHueSaturationLightnessEffect.Props.SaturationFactor">
            <summary>
            Specifies a value for changing each pixel's saturation. A pixel's saturation ranges from 0 (unsaturated/grey) to 1 (fully saturated).<br/>
            If the value is set to 1.0, saturation will be unchanged.<br/>
            If the value is set to 0, the image will be completely desaturated.<br/>
            For values less than 1.0, the saturation will be multiplied by the value.<br/>
            For values greater than 1.0, the saturation will be multiplied by 1+((value-1)*3), which effectively amplifies the scaling by 3x.<br/>
            The range of this value is [0, 2], which corresponds to the UI's range of [0, 200].<br/>
            The default value is 1.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnHueSaturationLightnessEffect.Props.LightnessDelta">
            <summary>
            Specifies the amount to change each pixel's lightness by. The range for lightness is [0, 1], so the
            range of this property is [-1.0f, +1.0f]. This corresponds to the UI's range of [-100, +100].<br/>
            A value of -1 will produce a completely black image, while a value of +1 will produce a completely white image.<br/>
            Results will be clamped to a valid range.<br/>
            The default value is 0.<br/>
            Note that this "lightness" does not operate in exactly the same way as "lightness" in HSL does. It is a simple
            linear interpolation between black and white.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnHueSaturationLightnessEffect.Props.AlphaMode">
            <summary>
            Specifies the alpha mode for the input image, for the the output.<br/>
            The default value is Premultiplied.
            </summary>
        </member>
        <member name="T:PaintDotNet.Effects.Gpu.PdnHueSaturationLightnessEffect.HueSaturationShader">
            <inheritdoc cref="T:PaintDotNet.Effects.Gpu.PdnHueSaturationLightnessEffect.HueSaturationShader"/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnHueSaturationLightnessEffect.HueSaturationShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnHueSaturationLightnessEffect#HueSaturationShader}#EffectId">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnHueSaturationLightnessEffect.HueSaturationShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnHueSaturationLightnessEffect#HueSaturationShader}#EffectDisplayName">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnHueSaturationLightnessEffect.HueSaturationShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnHueSaturationLightnessEffect#HueSaturationShader}#EffectDescription">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnHueSaturationLightnessEffect.HueSaturationShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnHueSaturationLightnessEffect#HueSaturationShader}#EffectCategory">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnHueSaturationLightnessEffect.HueSaturationShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnHueSaturationLightnessEffect#HueSaturationShader}#EffectAuthor">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnHueSaturationLightnessEffect.HueSaturationShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnHueSaturationLightnessEffect#HueSaturationShader}#ConstantBufferSize">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnHueSaturationLightnessEffect.HueSaturationShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnHueSaturationLightnessEffect#HueSaturationShader}#InputCount">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnHueSaturationLightnessEffect.HueSaturationShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnHueSaturationLightnessEffect#HueSaturationShader}#ResourceTextureCount">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnHueSaturationLightnessEffect.HueSaturationShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnHueSaturationLightnessEffect#HueSaturationShader}#InputTypes">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnHueSaturationLightnessEffect.HueSaturationShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnHueSaturationLightnessEffect#HueSaturationShader}#InputDescriptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnHueSaturationLightnessEffect.HueSaturationShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnHueSaturationLightnessEffect#HueSaturationShader}#ResourceTextureDescriptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnHueSaturationLightnessEffect.HueSaturationShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnHueSaturationLightnessEffect#HueSaturationShader}#PixelOptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnHueSaturationLightnessEffect.HueSaturationShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnHueSaturationLightnessEffect#HueSaturationShader}#BufferPrecision">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnHueSaturationLightnessEffect.HueSaturationShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnHueSaturationLightnessEffect#HueSaturationShader}#ChannelDepth">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnHueSaturationLightnessEffect.HueSaturationShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnHueSaturationLightnessEffect#HueSaturationShader}#ShaderProfile">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnHueSaturationLightnessEffect.HueSaturationShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnHueSaturationLightnessEffect#HueSaturationShader}#CompileOptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnHueSaturationLightnessEffect.HueSaturationShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnHueSaturationLightnessEffect#HueSaturationShader}#HlslSource">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnHueSaturationLightnessEffect.HueSaturationShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnHueSaturationLightnessEffect#HueSaturationShader}#HlslBytecode">
            <inheritdoc/>
        </member>
        <member name="M:PaintDotNet.Effects.Gpu.PdnHueSaturationLightnessEffect.HueSaturationShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnHueSaturationLightnessEffect#HueSaturationShader}#CreateFromConstantBuffer(System.ReadOnlySpan{System.Byte})">
            <inheritdoc/>
        </member>
        <member name="M:PaintDotNet.Effects.Gpu.PdnHueSaturationLightnessEffect.HueSaturationShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnHueSaturationLightnessEffect#HueSaturationShader}#LoadConstantBuffer``1(PaintDotNet.Effects.Gpu.PdnHueSaturationLightnessEffect.HueSaturationShader@,``0@)">
            <inheritdoc/>
        </member>
        <member name="T:PaintDotNet.Effects.Gpu.PdnHueSaturationLightnessEffect.LightnessShader">
            <inheritdoc cref="T:PaintDotNet.Effects.Gpu.PdnHueSaturationLightnessEffect.LightnessShader"/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnHueSaturationLightnessEffect.LightnessShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnHueSaturationLightnessEffect#LightnessShader}#EffectId">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnHueSaturationLightnessEffect.LightnessShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnHueSaturationLightnessEffect#LightnessShader}#EffectDisplayName">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnHueSaturationLightnessEffect.LightnessShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnHueSaturationLightnessEffect#LightnessShader}#EffectDescription">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnHueSaturationLightnessEffect.LightnessShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnHueSaturationLightnessEffect#LightnessShader}#EffectCategory">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnHueSaturationLightnessEffect.LightnessShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnHueSaturationLightnessEffect#LightnessShader}#EffectAuthor">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnHueSaturationLightnessEffect.LightnessShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnHueSaturationLightnessEffect#LightnessShader}#ConstantBufferSize">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnHueSaturationLightnessEffect.LightnessShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnHueSaturationLightnessEffect#LightnessShader}#InputCount">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnHueSaturationLightnessEffect.LightnessShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnHueSaturationLightnessEffect#LightnessShader}#ResourceTextureCount">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnHueSaturationLightnessEffect.LightnessShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnHueSaturationLightnessEffect#LightnessShader}#InputTypes">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnHueSaturationLightnessEffect.LightnessShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnHueSaturationLightnessEffect#LightnessShader}#InputDescriptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnHueSaturationLightnessEffect.LightnessShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnHueSaturationLightnessEffect#LightnessShader}#ResourceTextureDescriptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnHueSaturationLightnessEffect.LightnessShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnHueSaturationLightnessEffect#LightnessShader}#PixelOptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnHueSaturationLightnessEffect.LightnessShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnHueSaturationLightnessEffect#LightnessShader}#BufferPrecision">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnHueSaturationLightnessEffect.LightnessShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnHueSaturationLightnessEffect#LightnessShader}#ChannelDepth">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnHueSaturationLightnessEffect.LightnessShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnHueSaturationLightnessEffect#LightnessShader}#ShaderProfile">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnHueSaturationLightnessEffect.LightnessShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnHueSaturationLightnessEffect#LightnessShader}#CompileOptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnHueSaturationLightnessEffect.LightnessShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnHueSaturationLightnessEffect#LightnessShader}#HlslSource">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnHueSaturationLightnessEffect.LightnessShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnHueSaturationLightnessEffect#LightnessShader}#HlslBytecode">
            <inheritdoc/>
        </member>
        <member name="M:PaintDotNet.Effects.Gpu.PdnHueSaturationLightnessEffect.LightnessShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnHueSaturationLightnessEffect#LightnessShader}#CreateFromConstantBuffer(System.ReadOnlySpan{System.Byte})">
            <inheritdoc/>
        </member>
        <member name="M:PaintDotNet.Effects.Gpu.PdnHueSaturationLightnessEffect.LightnessShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnHueSaturationLightnessEffect#LightnessShader}#LoadConstantBuffer``1(PaintDotNet.Effects.Gpu.PdnHueSaturationLightnessEffect.LightnessShader@,``0@)">
            <inheritdoc/>
        </member>
        <member name="T:PaintDotNet.Effects.Gpu.PdnInkSketchEffect">
            <summary>
            A Direct2D effect that renders Paint.NET's Ink Sketch effect.
            </summary>
            <inheritdoc cref="T:PaintDotNet.Effects.Gpu.PdnInkSketchEffect"/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnInkSketchEffect.Props.InkOutline">
            <summary>
            Specifies the strength of the ink outline.<br/>
            The range of this value is [0, 0.99], which corresponds to the UI's range of [0, 99].<br/>
            The default value is 0.5.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnInkSketchEffect.Props.Coloring">
            <summary>
            Specifies how much color to retain. This is used to increase brightness and decrease contrast.<br/>
            The range of this value is [0, 1], which corresponds to the UI's range of [0, 100].<br/>
            The default value is 0.5.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnInkSketchEffect.Props.AlphaMode">
            <summary>
            Specifies the alpha mode for the input and output. The default is premultiplied.
            </summary>
        </member>
        <member name="T:PaintDotNet.Effects.Gpu.PdnInkSketchEffect.Impl">
            <inheritdoc cref="T:PaintDotNet.Effects.Gpu.PdnInkSketchEffect.Impl"/>
        </member>
        <member name="T:PaintDotNet.Effects.Gpu.PdnInkSketchEffect.Impl.AdjustShader">
            <inheritdoc cref="T:PaintDotNet.Effects.Gpu.PdnInkSketchEffect.Impl.AdjustShader"/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnInkSketchEffect.Impl.AdjustShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnInkSketchEffect#Impl#AdjustShader}#EffectId">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnInkSketchEffect.Impl.AdjustShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnInkSketchEffect#Impl#AdjustShader}#EffectDisplayName">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnInkSketchEffect.Impl.AdjustShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnInkSketchEffect#Impl#AdjustShader}#EffectDescription">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnInkSketchEffect.Impl.AdjustShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnInkSketchEffect#Impl#AdjustShader}#EffectCategory">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnInkSketchEffect.Impl.AdjustShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnInkSketchEffect#Impl#AdjustShader}#EffectAuthor">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnInkSketchEffect.Impl.AdjustShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnInkSketchEffect#Impl#AdjustShader}#ConstantBufferSize">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnInkSketchEffect.Impl.AdjustShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnInkSketchEffect#Impl#AdjustShader}#InputCount">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnInkSketchEffect.Impl.AdjustShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnInkSketchEffect#Impl#AdjustShader}#ResourceTextureCount">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnInkSketchEffect.Impl.AdjustShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnInkSketchEffect#Impl#AdjustShader}#InputTypes">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnInkSketchEffect.Impl.AdjustShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnInkSketchEffect#Impl#AdjustShader}#InputDescriptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnInkSketchEffect.Impl.AdjustShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnInkSketchEffect#Impl#AdjustShader}#ResourceTextureDescriptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnInkSketchEffect.Impl.AdjustShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnInkSketchEffect#Impl#AdjustShader}#PixelOptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnInkSketchEffect.Impl.AdjustShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnInkSketchEffect#Impl#AdjustShader}#BufferPrecision">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnInkSketchEffect.Impl.AdjustShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnInkSketchEffect#Impl#AdjustShader}#ChannelDepth">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnInkSketchEffect.Impl.AdjustShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnInkSketchEffect#Impl#AdjustShader}#ShaderProfile">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnInkSketchEffect.Impl.AdjustShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnInkSketchEffect#Impl#AdjustShader}#CompileOptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnInkSketchEffect.Impl.AdjustShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnInkSketchEffect#Impl#AdjustShader}#HlslSource">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnInkSketchEffect.Impl.AdjustShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnInkSketchEffect#Impl#AdjustShader}#HlslBytecode">
            <inheritdoc/>
        </member>
        <member name="M:PaintDotNet.Effects.Gpu.PdnInkSketchEffect.Impl.AdjustShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnInkSketchEffect#Impl#AdjustShader}#CreateFromConstantBuffer(System.ReadOnlySpan{System.Byte})">
            <inheritdoc/>
        </member>
        <member name="M:PaintDotNet.Effects.Gpu.PdnInkSketchEffect.Impl.AdjustShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnInkSketchEffect#Impl#AdjustShader}#LoadConstantBuffer``1(PaintDotNet.Effects.Gpu.PdnInkSketchEffect.Impl.AdjustShader@,``0@)">
            <inheritdoc/>
        </member>
        <member name="T:PaintDotNet.Effects.Gpu.PdnJuliaFractalEffect">
            <summary>
            A Direct2D effect that renders a Julia fractal.
            </summary>
            <inheritdoc cref="T:PaintDotNet.Effects.Gpu.PdnJuliaFractalEffect"/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnJuliaFractalEffect.Props.Size">
            <summary>
            The size of the Julia fractal, in pixels. This is normally set to the size of the output buffer.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnJuliaFractalEffect.Props.Offset">
            <summary>
            The rendering offset, in pixels, of the Julia fractal.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnJuliaFractalEffect.Props.Factor">
            <summary>
            The factor value when computing the fractal. The range is [1, 10]. The default value is 4.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnJuliaFractalEffect.Props.Zoom">
            <summary>
            The zoom level of the fractal. The default value is 1.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnJuliaFractalEffect.Props.Angle">
            <summary>
            The rotation, in degrees, of the fractal. The default value is 0.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnJuliaFractalEffect.Props.Quality">
            <summary>
            Specifies the quality of the output. The number of samples rendered for each output pixel will be equal
            to the square of the value. The range is 1 to 8, and the default is 2.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnJuliaFractalEffect.Props.AlphaMode">
            <summary>
            Specifies the alpha mode of the output. The default value is Premultiplied.
            </summary>
        </member>
        <member name="T:PaintDotNet.Effects.Gpu.PdnJuliaFractalEffect.Impl">
            <inheritdoc cref="T:PaintDotNet.Effects.Gpu.PdnJuliaFractalEffect.Impl"/>
        </member>
        <member name="T:PaintDotNet.Effects.Gpu.PdnJuliaFractalEffect.Impl.JuliaFractalShader">
            <inheritdoc cref="T:PaintDotNet.Effects.Gpu.PdnJuliaFractalEffect.Impl.JuliaFractalShader"/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnJuliaFractalEffect.Impl.JuliaFractalShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnJuliaFractalEffect#Impl#JuliaFractalShader}#EffectId">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnJuliaFractalEffect.Impl.JuliaFractalShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnJuliaFractalEffect#Impl#JuliaFractalShader}#EffectDisplayName">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnJuliaFractalEffect.Impl.JuliaFractalShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnJuliaFractalEffect#Impl#JuliaFractalShader}#EffectDescription">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnJuliaFractalEffect.Impl.JuliaFractalShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnJuliaFractalEffect#Impl#JuliaFractalShader}#EffectCategory">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnJuliaFractalEffect.Impl.JuliaFractalShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnJuliaFractalEffect#Impl#JuliaFractalShader}#EffectAuthor">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnJuliaFractalEffect.Impl.JuliaFractalShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnJuliaFractalEffect#Impl#JuliaFractalShader}#ConstantBufferSize">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnJuliaFractalEffect.Impl.JuliaFractalShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnJuliaFractalEffect#Impl#JuliaFractalShader}#InputCount">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnJuliaFractalEffect.Impl.JuliaFractalShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnJuliaFractalEffect#Impl#JuliaFractalShader}#ResourceTextureCount">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnJuliaFractalEffect.Impl.JuliaFractalShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnJuliaFractalEffect#Impl#JuliaFractalShader}#InputTypes">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnJuliaFractalEffect.Impl.JuliaFractalShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnJuliaFractalEffect#Impl#JuliaFractalShader}#InputDescriptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnJuliaFractalEffect.Impl.JuliaFractalShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnJuliaFractalEffect#Impl#JuliaFractalShader}#ResourceTextureDescriptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnJuliaFractalEffect.Impl.JuliaFractalShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnJuliaFractalEffect#Impl#JuliaFractalShader}#PixelOptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnJuliaFractalEffect.Impl.JuliaFractalShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnJuliaFractalEffect#Impl#JuliaFractalShader}#BufferPrecision">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnJuliaFractalEffect.Impl.JuliaFractalShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnJuliaFractalEffect#Impl#JuliaFractalShader}#ChannelDepth">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnJuliaFractalEffect.Impl.JuliaFractalShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnJuliaFractalEffect#Impl#JuliaFractalShader}#ShaderProfile">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnJuliaFractalEffect.Impl.JuliaFractalShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnJuliaFractalEffect#Impl#JuliaFractalShader}#CompileOptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnJuliaFractalEffect.Impl.JuliaFractalShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnJuliaFractalEffect#Impl#JuliaFractalShader}#HlslSource">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnJuliaFractalEffect.Impl.JuliaFractalShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnJuliaFractalEffect#Impl#JuliaFractalShader}#HlslBytecode">
            <inheritdoc/>
        </member>
        <member name="M:PaintDotNet.Effects.Gpu.PdnJuliaFractalEffect.Impl.JuliaFractalShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnJuliaFractalEffect#Impl#JuliaFractalShader}#CreateFromConstantBuffer(System.ReadOnlySpan{System.Byte})">
            <inheritdoc/>
        </member>
        <member name="M:PaintDotNet.Effects.Gpu.PdnJuliaFractalEffect.Impl.JuliaFractalShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnJuliaFractalEffect#Impl#JuliaFractalShader}#LoadConstantBuffer``1(PaintDotNet.Effects.Gpu.PdnJuliaFractalEffect.Impl.JuliaFractalShader@,``0@)">
            <inheritdoc/>
        </member>
        <member name="T:PaintDotNet.Effects.Gpu.PdnLevelsEffect">
            <summary>
            A Direct2D effect that can move and stretch the brightness and contrast levels of an image.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnLevelsEffect.Props.AlphaMode">
            <summary>
            Specifies the alpha mode for the input image and for the output.<br/>
            The default value is <see cref="F:PaintDotNet.Effects.Gpu.PdnLevelsAlphaMode.Premultiplied"/>.
            </summary>
        </member>
        <member name="T:PaintDotNet.Effects.Gpu.PdnMandelbrotFractalEffect">
            <inheritdoc cref="T:PaintDotNet.Effects.Gpu.PdnMandelbrotFractalEffect"/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnMandelbrotFractalEffect.Props.Size">
            <summary>
            The size of the Mandelbrot fractal, in pixels. This is normally set to the size of the output buffer.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnMandelbrotFractalEffect.Props.Offset">
            <summary>
            The rendering offset, in pixels, of the Mandelbrot fractal.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnMandelbrotFractalEffect.Props.Factor">
            <summary>
            The factor value when computing the fractal. The range is [1, 10]. The default value is 1.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnMandelbrotFractalEffect.Props.Zoom">
            <summary>
            The zoom level of the fractal. The default value is 10.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnMandelbrotFractalEffect.Props.Angle">
            <summary>
            The rotation, in degrees, of the fractal. The default value is 0.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnMandelbrotFractalEffect.Props.Quality">
            <summary>
            Specifies the quality of the output. The number of samples rendered for each output pixel will be equal
            to the square of the value. The range is 1 to 8, and the default is 2.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnMandelbrotFractalEffect.Props.AlphaMode">
            <summary>
            Specifies the alpha mode of the output. The default value is Premultiplied.
            </summary>
        </member>
        <member name="T:PaintDotNet.Effects.Gpu.PdnMandelbrotFractalEffect.Impl">
            <inheritdoc cref="T:PaintDotNet.Effects.Gpu.PdnMandelbrotFractalEffect.Impl"/>
        </member>
        <member name="T:PaintDotNet.Effects.Gpu.PdnMandelbrotFractalEffect.Impl.MandelbrotFractalShader">
            <inheritdoc cref="T:PaintDotNet.Effects.Gpu.PdnMandelbrotFractalEffect.Impl.MandelbrotFractalShader"/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnMandelbrotFractalEffect.Impl.MandelbrotFractalShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnMandelbrotFractalEffect#Impl#MandelbrotFractalShader}#EffectId">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnMandelbrotFractalEffect.Impl.MandelbrotFractalShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnMandelbrotFractalEffect#Impl#MandelbrotFractalShader}#EffectDisplayName">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnMandelbrotFractalEffect.Impl.MandelbrotFractalShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnMandelbrotFractalEffect#Impl#MandelbrotFractalShader}#EffectDescription">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnMandelbrotFractalEffect.Impl.MandelbrotFractalShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnMandelbrotFractalEffect#Impl#MandelbrotFractalShader}#EffectCategory">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnMandelbrotFractalEffect.Impl.MandelbrotFractalShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnMandelbrotFractalEffect#Impl#MandelbrotFractalShader}#EffectAuthor">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnMandelbrotFractalEffect.Impl.MandelbrotFractalShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnMandelbrotFractalEffect#Impl#MandelbrotFractalShader}#ConstantBufferSize">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnMandelbrotFractalEffect.Impl.MandelbrotFractalShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnMandelbrotFractalEffect#Impl#MandelbrotFractalShader}#InputCount">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnMandelbrotFractalEffect.Impl.MandelbrotFractalShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnMandelbrotFractalEffect#Impl#MandelbrotFractalShader}#ResourceTextureCount">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnMandelbrotFractalEffect.Impl.MandelbrotFractalShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnMandelbrotFractalEffect#Impl#MandelbrotFractalShader}#InputTypes">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnMandelbrotFractalEffect.Impl.MandelbrotFractalShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnMandelbrotFractalEffect#Impl#MandelbrotFractalShader}#InputDescriptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnMandelbrotFractalEffect.Impl.MandelbrotFractalShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnMandelbrotFractalEffect#Impl#MandelbrotFractalShader}#ResourceTextureDescriptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnMandelbrotFractalEffect.Impl.MandelbrotFractalShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnMandelbrotFractalEffect#Impl#MandelbrotFractalShader}#PixelOptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnMandelbrotFractalEffect.Impl.MandelbrotFractalShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnMandelbrotFractalEffect#Impl#MandelbrotFractalShader}#BufferPrecision">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnMandelbrotFractalEffect.Impl.MandelbrotFractalShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnMandelbrotFractalEffect#Impl#MandelbrotFractalShader}#ChannelDepth">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnMandelbrotFractalEffect.Impl.MandelbrotFractalShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnMandelbrotFractalEffect#Impl#MandelbrotFractalShader}#ShaderProfile">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnMandelbrotFractalEffect.Impl.MandelbrotFractalShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnMandelbrotFractalEffect#Impl#MandelbrotFractalShader}#CompileOptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnMandelbrotFractalEffect.Impl.MandelbrotFractalShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnMandelbrotFractalEffect#Impl#MandelbrotFractalShader}#HlslSource">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnMandelbrotFractalEffect.Impl.MandelbrotFractalShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnMandelbrotFractalEffect#Impl#MandelbrotFractalShader}#HlslBytecode">
            <inheritdoc/>
        </member>
        <member name="M:PaintDotNet.Effects.Gpu.PdnMandelbrotFractalEffect.Impl.MandelbrotFractalShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnMandelbrotFractalEffect#Impl#MandelbrotFractalShader}#CreateFromConstantBuffer(System.ReadOnlySpan{System.Byte})">
            <inheritdoc/>
        </member>
        <member name="M:PaintDotNet.Effects.Gpu.PdnMandelbrotFractalEffect.Impl.MandelbrotFractalShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnMandelbrotFractalEffect#Impl#MandelbrotFractalShader}#LoadConstantBuffer``1(PaintDotNet.Effects.Gpu.PdnMandelbrotFractalEffect.Impl.MandelbrotFractalShader@,``0@)">
            <inheritdoc/>
        </member>
        <member name="T:PaintDotNet.Effects.Gpu.PdnMotionBlurEffect">
            <summary>
            A Direct2D effect that operates the same as Paint.NET's Motion Blur effect.
            </summary>
            <inheritdoc cref="T:PaintDotNet.Effects.Gpu.PdnMotionBlurEffect"/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnMotionBlurEffect.Props.Angle">
            <summary>
            Specifies the angle, in radians, for the motion blur effect. The default is 0.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnMotionBlurEffect.Props.Distance">
            <summary>
            Specifies the distance for the motion blur effect.<br/>
            The range is [0, 500]. The default value is 10.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnMotionBlurEffect.Props.KernelType">
            <summary>
            Specifies the kernel type that is used for sample weights.<br/>
            The default value is <see cref="F:PaintDotNet.Effects.Gpu.PdnMotionBlurKernelType.Gaussian"/>.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnMotionBlurEffect.Props.Centered">
            <summary>
            Specifies whether the motion blur effect should be centered. The default is true.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnMotionBlurEffect.Props.EdgeMode">
            <summary>
            Specifies how sampling beyond the edge of the image should be performed. The default value is Clamp.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnMotionBlurEffect.Props.AlphaMode">
            <summary>
            Specifies the alpha mode for the input and output. The default value is Premultiplied.
            </summary>
        </member>
        <member name="T:PaintDotNet.Effects.Gpu.PdnMotionBlurEffect.MotionBlurShader">
            <inheritdoc cref="T:PaintDotNet.Effects.Gpu.PdnMotionBlurEffect.MotionBlurShader"/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnMotionBlurEffect.MotionBlurShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnMotionBlurEffect#MotionBlurShader}#EffectId">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnMotionBlurEffect.MotionBlurShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnMotionBlurEffect#MotionBlurShader}#EffectDisplayName">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnMotionBlurEffect.MotionBlurShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnMotionBlurEffect#MotionBlurShader}#EffectDescription">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnMotionBlurEffect.MotionBlurShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnMotionBlurEffect#MotionBlurShader}#EffectCategory">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnMotionBlurEffect.MotionBlurShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnMotionBlurEffect#MotionBlurShader}#EffectAuthor">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnMotionBlurEffect.MotionBlurShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnMotionBlurEffect#MotionBlurShader}#ConstantBufferSize">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnMotionBlurEffect.MotionBlurShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnMotionBlurEffect#MotionBlurShader}#InputCount">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnMotionBlurEffect.MotionBlurShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnMotionBlurEffect#MotionBlurShader}#ResourceTextureCount">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnMotionBlurEffect.MotionBlurShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnMotionBlurEffect#MotionBlurShader}#InputTypes">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnMotionBlurEffect.MotionBlurShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnMotionBlurEffect#MotionBlurShader}#InputDescriptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnMotionBlurEffect.MotionBlurShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnMotionBlurEffect#MotionBlurShader}#ResourceTextureDescriptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnMotionBlurEffect.MotionBlurShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnMotionBlurEffect#MotionBlurShader}#PixelOptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnMotionBlurEffect.MotionBlurShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnMotionBlurEffect#MotionBlurShader}#BufferPrecision">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnMotionBlurEffect.MotionBlurShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnMotionBlurEffect#MotionBlurShader}#ChannelDepth">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnMotionBlurEffect.MotionBlurShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnMotionBlurEffect#MotionBlurShader}#ShaderProfile">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnMotionBlurEffect.MotionBlurShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnMotionBlurEffect#MotionBlurShader}#CompileOptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnMotionBlurEffect.MotionBlurShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnMotionBlurEffect#MotionBlurShader}#HlslSource">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnMotionBlurEffect.MotionBlurShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnMotionBlurEffect#MotionBlurShader}#HlslBytecode">
            <inheritdoc/>
        </member>
        <member name="M:PaintDotNet.Effects.Gpu.PdnMotionBlurEffect.MotionBlurShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnMotionBlurEffect#MotionBlurShader}#CreateFromConstantBuffer(System.ReadOnlySpan{System.Byte})">
            <inheritdoc/>
        </member>
        <member name="M:PaintDotNet.Effects.Gpu.PdnMotionBlurEffect.MotionBlurShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnMotionBlurEffect#MotionBlurShader}#LoadConstantBuffer``1(PaintDotNet.Effects.Gpu.PdnMotionBlurEffect.MotionBlurShader@,``0@)">
            <inheritdoc/>
        </member>
        <member name="T:PaintDotNet.Effects.Gpu.PdnMotionBlurKernelType">
            <summary>
            Specifies the kernel that is used for blurring.
            </summary>
        </member>
        <member name="F:PaintDotNet.Effects.Gpu.PdnMotionBlurKernelType.Constant">
            <summary>
            Every pixel along the sampling path is given equal weighting.
            </summary>
        </member>
        <member name="F:PaintDotNet.Effects.Gpu.PdnMotionBlurKernelType.Gaussian">
            <summary>
            Weighting of pixels along the sampling path has a Gaussian drop-off
            based on the distance from the origination point.
            </summary>
        </member>
        <member name="T:PaintDotNet.Effects.Gpu.PdnOilPaintingEffect">
            <summary>
            A Direct2D effect that implements Paint.NET's Oil Painting effect.
            </summary>
            <remarks>
            This effect calculates the statistical mode of color intensity within the neighborhood of each pixel,
            and then uses the average color value of pixels with that intensity.
            </remarks>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnOilPaintingEffect.Props.BrushSize">
            <summary>
            Specifies the radius, or "brush size", that is used when gathering samples for the effect rendering.<br/>
            The range is [0, 50], and the default value is 10.
            </summary>
            <remarks>
            The current implementation of this effect will use the integer ceiling of the provided value.
            </remarks>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnOilPaintingEffect.Props.Granularity">
            <summary>
            Specifies the number of histogram bins/buckets that are used when rendering the effect.<br/>
            The range is [4, 256], the default is 51.
            </summary>
            <remarks>
            This corresponds to the "legacy" Oil Painting effect's "Coarseness" property, in which the
            number of histogram bins was equal to one plus Coarseness. Its range was [3, 255] with a
            default of 50, which is why this new implementation of the effect has a range of [4, 256]
            and a default value of 51.
            </remarks>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnOilPaintingEffect.Props.KernelShape">
            <summary>
            Specifies the kernel shape to use when gathering pixels.<br/>
            The default value is <see cref="F:PaintDotNet.Effects.Gpu.PdnOilPaintingKernelShape.Circle"/>.
            </summary>
            <remarks>
            The "legacy" Oil Painting effect always used a square shaped kernel, and did not have the ability to change it.
            </remarks>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnOilPaintingEffect.Props.EdgeMode">
            <summary>
            Specifies how samples outside the bounds of the input image are calculated.<br/>
            If this value is <see cref="F:PaintDotNet.Effects.Gpu.PdnOilPaintingEdgeMode.Transparent"/>, the effect pads the image with transparent
            pixels as it applies the kernel, resulting in a soft edge. The output will be larger than the input by
            approximately the blur radius (BrushSize), in pixels.<br/>
            If set to another edge mode, the effect clamps the output to the size of the input image.<br/>
            The default value is <see cref="F:PaintDotNet.Effects.Gpu.PdnOilPaintingEdgeMode.Clamp"/>.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnOilPaintingEffect.Props.AlphaMode">
            <summary>
            Specifies the alpha mode for the input and output. The default value is <see cref="F:PaintDotNet.Effects.Gpu.PdnOilPaintingAlphaMode.Premultiplied"/>.
            </summary>
        </member>
        <member name="T:PaintDotNet.Effects.Gpu.PdnOutlineEffect">
            <inheritdoc cref="T:PaintDotNet.Effects.Gpu.PdnOutlineEffect"/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnOutlineEffect.Props.Radius">
            <summary>
            The radius of the effect. A value of 0 will disable the effect.<br/>
            Performance scales with the square of this property value. Doubling the radius will quadruple the rendering time.<br/>
            The range is [0, 70]. The default value is 3.
            </summary>
            <remarks>
            The current implementation of this effect will use the integer ceiling of the radius value.
            </remarks>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnOutlineEffect.Props.Intensity">
            <summary>
            The intensity of the effect. This indirectly specifies the range of percentiles used to drive
            the underlying median approximation algorithm. An intensity value of 0.5f will render the
            difference between percentiles of 0.25 and 0.75. To calculate the range, use:<br/>
            <c>percentileLo = (1 - intensity) / 2</c><br/>
            <c>percentileHi = (1 + intensity) / 2</c><br/>
            The range is [0, 1]. The default value is 0.5f.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnOutlineEffect.Props.PrecisionBits">
            <summary>
            <inheritdoc cref="P:PaintDotNet.Direct2D1.Effects.MedianBlurEffect.Props.PrecisionBits"/>
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnOutlineEffect.Props.EdgeMode">
            <summary>
            Specifies how sampling beyond the edge of the image should be performed.<br/>
            The default value is <see cref="F:PaintDotNet.Effects.Gpu.PdnOutlineEdgeMode.Transparent"/>.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnOutlineEffect.Props.AlphaMode">
            <summary>
            Specifies the alpha mode for the input and output.<br/>
            The default value is <see cref="F:PaintDotNet.Effects.Gpu.PdnOutlineAlphaMode.Premultiplied"/>.
            </summary>
        </member>
        <member name="T:PaintDotNet.Effects.Gpu.PdnOutlineEffect.Impl">
            <inheritdoc cref="T:PaintDotNet.Effects.Gpu.PdnOutlineEffect.Impl"/>
        </member>
        <member name="T:PaintDotNet.Effects.Gpu.PdnOutlineEffect.Impl.CombineShader">
            <inheritdoc cref="T:PaintDotNet.Effects.Gpu.PdnOutlineEffect.Impl.CombineShader"/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnOutlineEffect.Impl.CombineShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnOutlineEffect#Impl#CombineShader}#EffectId">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnOutlineEffect.Impl.CombineShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnOutlineEffect#Impl#CombineShader}#EffectDisplayName">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnOutlineEffect.Impl.CombineShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnOutlineEffect#Impl#CombineShader}#EffectDescription">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnOutlineEffect.Impl.CombineShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnOutlineEffect#Impl#CombineShader}#EffectCategory">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnOutlineEffect.Impl.CombineShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnOutlineEffect#Impl#CombineShader}#EffectAuthor">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnOutlineEffect.Impl.CombineShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnOutlineEffect#Impl#CombineShader}#ConstantBufferSize">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnOutlineEffect.Impl.CombineShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnOutlineEffect#Impl#CombineShader}#InputCount">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnOutlineEffect.Impl.CombineShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnOutlineEffect#Impl#CombineShader}#ResourceTextureCount">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnOutlineEffect.Impl.CombineShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnOutlineEffect#Impl#CombineShader}#InputTypes">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnOutlineEffect.Impl.CombineShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnOutlineEffect#Impl#CombineShader}#InputDescriptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnOutlineEffect.Impl.CombineShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnOutlineEffect#Impl#CombineShader}#ResourceTextureDescriptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnOutlineEffect.Impl.CombineShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnOutlineEffect#Impl#CombineShader}#PixelOptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnOutlineEffect.Impl.CombineShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnOutlineEffect#Impl#CombineShader}#BufferPrecision">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnOutlineEffect.Impl.CombineShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnOutlineEffect#Impl#CombineShader}#ChannelDepth">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnOutlineEffect.Impl.CombineShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnOutlineEffect#Impl#CombineShader}#ShaderProfile">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnOutlineEffect.Impl.CombineShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnOutlineEffect#Impl#CombineShader}#CompileOptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnOutlineEffect.Impl.CombineShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnOutlineEffect#Impl#CombineShader}#HlslSource">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnOutlineEffect.Impl.CombineShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnOutlineEffect#Impl#CombineShader}#HlslBytecode">
            <inheritdoc/>
        </member>
        <member name="M:PaintDotNet.Effects.Gpu.PdnOutlineEffect.Impl.CombineShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnOutlineEffect#Impl#CombineShader}#CreateFromConstantBuffer(System.ReadOnlySpan{System.Byte})">
            <inheritdoc/>
        </member>
        <member name="M:PaintDotNet.Effects.Gpu.PdnOutlineEffect.Impl.CombineShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnOutlineEffect#Impl#CombineShader}#LoadConstantBuffer``1(PaintDotNet.Effects.Gpu.PdnOutlineEffect.Impl.CombineShader@,``0@)">
            <inheritdoc/>
        </member>
        <member name="T:PaintDotNet.Effects.Gpu.PdnPencilSketchEffect">
            <summary>
            A Direct2D effect that renders Paint.NET's Pencil Sketch effect.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnPencilSketchEffect.Props.PencilTipSize">
            <summary>
            The size of the pencil tip. The valid range is [1, 20]. The default is 2.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnPencilSketchEffect.Props.ColorRange">
            <summary>
            Specifies the color range. This is used to increase brightness and decrease contrast.<br/>
            The range is [-0.2, +0.2], which corresponds to the UI's range of [-20, +20]. The default value is 0.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnPencilSketchEffect.Props.AlphaMode">
            <summary>
            Specifies the alpha mode of the input and output. The default is Premultiplied.
            </summary>
        </member>
        <member name="T:PaintDotNet.Effects.Gpu.PdnPixelateEffect">
            <summary>
            A Direct2D effect that operates the same as Paint.NET's Pixelate effect.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnPixelateEffect.Props.CellSize">
            <summary>
            Specifies the cell size, in pixels, of pixelation. The range is [1, 256]. The default is 2.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnPixelateEffect.Props.ScaleDownInterpolationMode">
            <summary>
            Specifies the interpolation mode when scaling the image down. The default is MultisampleLinear.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnPixelateEffect.Props.ScaleUpInterpolationMode">
            <summary>
            Specifies the interpolation mode when scaling the image up. The default is NearestNeighbor.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnPixelateEffect.Props.Center">
            <summary>
            The image scaling center point. Use this to scale around a point other than the upper-left corner.<br/>
            The default value is { 0, 0 }.<br/>
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnPixelateEffect.Props.AlphaMode">
            <summary>
            Specifies the alpha mode for the input and the output. The default is Premultiplied.
            </summary>
        </member>
        <member name="T:PaintDotNet.Effects.Gpu.PdnPolarInversionEffect">
            <summary>
            Provides Paint.NET's Polar Inversion effect as a <see cref="T:PaintDotNet.Direct2D1.DynamicEffect"/> that can be used
            for rendering with Direct2D.
            </summary>
            <remarks>
            <inheritdoc />
            </remarks>
        </member>
        <member name="M:PaintDotNet.Effects.Gpu.PdnPolarInversionEffect.#ctor(PaintDotNet.Direct2D1.IDeviceContext)">
            <summary>
            <inheritdoc />
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnPolarInversionEffect.Props.Scale">
            <summary>
            Gets or sets the scale of the polar inversion effect.<br/>
            If a clipping region is used (e.g. the active selection), this should be set to the
            the user's scaling choice multiplied by the ratio of the clipping region's diameter
            to the InputRect's diameter (e.g. userScale * min(clipRect.Width, clipRect.Height) /
            min(inputRect.Width, inputRect.Height)).<br/>
            The range for the user's scaling value is usually [-8, +8], but this property has no
            minimum or maximum.<br/>
            The default value is 1.0.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnPolarInversionEffect.Props.Center">
            <summary>
            Gets or sets the center point of the polar inversion effect.
            </summary>
        </member>
        <member name="T:PaintDotNet.Effects.Gpu.PdnPolarInversionSampleMap">
            <inheritdoc cref="T:PaintDotNet.Effects.Gpu.PdnPolarInversionSampleMap"/>
        </member>
        <member name="T:PaintDotNet.Effects.Gpu.PdnPolarInversionSampleMap.Impl">
            <inheritdoc cref="T:PaintDotNet.Effects.Gpu.PdnPolarInversionSampleMap.Impl"/>
        </member>
        <member name="T:PaintDotNet.Effects.Gpu.PdnPolarInversionSampleMap.Impl.SampleMapShader">
            <inheritdoc cref="T:PaintDotNet.Effects.Gpu.PdnPolarInversionSampleMap.Impl.SampleMapShader"/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnPolarInversionSampleMap.Impl.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnPolarInversionSampleMap#Impl#SampleMapShader}#EffectId">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnPolarInversionSampleMap.Impl.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnPolarInversionSampleMap#Impl#SampleMapShader}#EffectDisplayName">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnPolarInversionSampleMap.Impl.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnPolarInversionSampleMap#Impl#SampleMapShader}#EffectDescription">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnPolarInversionSampleMap.Impl.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnPolarInversionSampleMap#Impl#SampleMapShader}#EffectCategory">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnPolarInversionSampleMap.Impl.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnPolarInversionSampleMap#Impl#SampleMapShader}#EffectAuthor">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnPolarInversionSampleMap.Impl.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnPolarInversionSampleMap#Impl#SampleMapShader}#ConstantBufferSize">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnPolarInversionSampleMap.Impl.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnPolarInversionSampleMap#Impl#SampleMapShader}#InputCount">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnPolarInversionSampleMap.Impl.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnPolarInversionSampleMap#Impl#SampleMapShader}#ResourceTextureCount">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnPolarInversionSampleMap.Impl.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnPolarInversionSampleMap#Impl#SampleMapShader}#InputTypes">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnPolarInversionSampleMap.Impl.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnPolarInversionSampleMap#Impl#SampleMapShader}#InputDescriptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnPolarInversionSampleMap.Impl.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnPolarInversionSampleMap#Impl#SampleMapShader}#ResourceTextureDescriptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnPolarInversionSampleMap.Impl.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnPolarInversionSampleMap#Impl#SampleMapShader}#PixelOptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnPolarInversionSampleMap.Impl.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnPolarInversionSampleMap#Impl#SampleMapShader}#BufferPrecision">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnPolarInversionSampleMap.Impl.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnPolarInversionSampleMap#Impl#SampleMapShader}#ChannelDepth">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnPolarInversionSampleMap.Impl.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnPolarInversionSampleMap#Impl#SampleMapShader}#ShaderProfile">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnPolarInversionSampleMap.Impl.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnPolarInversionSampleMap#Impl#SampleMapShader}#CompileOptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnPolarInversionSampleMap.Impl.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnPolarInversionSampleMap#Impl#SampleMapShader}#HlslSource">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnPolarInversionSampleMap.Impl.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnPolarInversionSampleMap#Impl#SampleMapShader}#HlslBytecode">
            <inheritdoc/>
        </member>
        <member name="M:PaintDotNet.Effects.Gpu.PdnPolarInversionSampleMap.Impl.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnPolarInversionSampleMap#Impl#SampleMapShader}#CreateFromConstantBuffer(System.ReadOnlySpan{System.Byte})">
            <inheritdoc/>
        </member>
        <member name="M:PaintDotNet.Effects.Gpu.PdnPolarInversionSampleMap.Impl.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnPolarInversionSampleMap#Impl#SampleMapShader}#LoadConstantBuffer``1(PaintDotNet.Effects.Gpu.PdnPolarInversionSampleMap.Impl.SampleMapShader@,``0@)">
            <inheritdoc/>
        </member>
        <member name="T:PaintDotNet.Effects.Gpu.PdnRadialBlurEffect">
            <summary>
            Provides Paint.NET's Radial Blur effect as a <see cref="T:PaintDotNet.Direct2D1.DynamicEffect"/> that can be used
            for rendering with Direct2D.
            </summary>
            <remarks>
            <inheritdoc cref="T:PaintDotNet.Direct2D1.DynamicImage" />
            </remarks>
            <inheritdoc cref="T:PaintDotNet.Effects.Gpu.PdnRadialBlurEffect"/>
        </member>
        <member name="T:PaintDotNet.Effects.Gpu.PdnRadialBlurEffect.RadialBlurShader">
            <inheritdoc cref="T:PaintDotNet.Effects.Gpu.PdnRadialBlurEffect.RadialBlurShader"/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnRadialBlurEffect.RadialBlurShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnRadialBlurEffect#RadialBlurShader}#EffectId">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnRadialBlurEffect.RadialBlurShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnRadialBlurEffect#RadialBlurShader}#EffectDisplayName">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnRadialBlurEffect.RadialBlurShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnRadialBlurEffect#RadialBlurShader}#EffectDescription">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnRadialBlurEffect.RadialBlurShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnRadialBlurEffect#RadialBlurShader}#EffectCategory">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnRadialBlurEffect.RadialBlurShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnRadialBlurEffect#RadialBlurShader}#EffectAuthor">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnRadialBlurEffect.RadialBlurShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnRadialBlurEffect#RadialBlurShader}#ConstantBufferSize">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnRadialBlurEffect.RadialBlurShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnRadialBlurEffect#RadialBlurShader}#InputCount">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnRadialBlurEffect.RadialBlurShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnRadialBlurEffect#RadialBlurShader}#ResourceTextureCount">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnRadialBlurEffect.RadialBlurShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnRadialBlurEffect#RadialBlurShader}#InputTypes">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnRadialBlurEffect.RadialBlurShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnRadialBlurEffect#RadialBlurShader}#InputDescriptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnRadialBlurEffect.RadialBlurShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnRadialBlurEffect#RadialBlurShader}#ResourceTextureDescriptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnRadialBlurEffect.RadialBlurShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnRadialBlurEffect#RadialBlurShader}#PixelOptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnRadialBlurEffect.RadialBlurShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnRadialBlurEffect#RadialBlurShader}#BufferPrecision">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnRadialBlurEffect.RadialBlurShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnRadialBlurEffect#RadialBlurShader}#ChannelDepth">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnRadialBlurEffect.RadialBlurShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnRadialBlurEffect#RadialBlurShader}#ShaderProfile">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnRadialBlurEffect.RadialBlurShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnRadialBlurEffect#RadialBlurShader}#CompileOptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnRadialBlurEffect.RadialBlurShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnRadialBlurEffect#RadialBlurShader}#HlslSource">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnRadialBlurEffect.RadialBlurShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnRadialBlurEffect#RadialBlurShader}#HlslBytecode">
            <inheritdoc/>
        </member>
        <member name="M:PaintDotNet.Effects.Gpu.PdnRadialBlurEffect.RadialBlurShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnRadialBlurEffect#RadialBlurShader}#CreateFromConstantBuffer(System.ReadOnlySpan{System.Byte})">
            <inheritdoc/>
        </member>
        <member name="M:PaintDotNet.Effects.Gpu.PdnRadialBlurEffect.RadialBlurShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnRadialBlurEffect#RadialBlurShader}#LoadConstantBuffer``1(PaintDotNet.Effects.Gpu.PdnRadialBlurEffect.RadialBlurShader@,``0@)">
            <inheritdoc/>
        </member>
        <member name="T:PaintDotNet.Effects.Gpu.PdnReduceNoiseEffect">
            <summary>
            A Direct2D effect that renders Paint.NET's built-in Reduce Noise effect.
            </summary>
            <remarks>
            This effect tends to work best with compressed gamma (aka companded, non-linear).
            If your input image is in linear gamma space, or if the output of thise effect
            just looks bad or wrong, then it may be best to first adjust the gamma using
            <see cref="T:PaintDotNet.Direct2D1.Effects.GammaTransferEffect"/>, <see cref="T:PaintDotNet.Direct2D1.Effects.GammaTransferEffect2"/>, or
            <see cref="T:PaintDotNet.Direct2D1.Effects.ConvertGammaEffect"/> with an exponent of 2.2. You can also use
            <see cref="T:PaintDotNet.Direct2D1.Effects.LinearToSrgbEffect"/>. Then apply the inverse to the output of this
            effect (either apply an exponent of 1.0/2.2, or use <see cref="T:PaintDotNet.Direct2D1.Effects.SrgbToLinearEffect"/>).
            </remarks>
            <inheritdoc cref="T:PaintDotNet.Effects.Gpu.PdnReduceNoiseEffect"/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnReduceNoiseEffect.Props.Radius">
            <summary>
            Specifies the radius of the noise reduction filter.<br/>
            The range is [0, 50], and the default value is 6.
            </summary>
            <remarks>
            The current implementation will use the integer ceiling of the provided value.
            </remarks>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnReduceNoiseEffect.Props.Strength">
            <summary>
            Specifies the strength of the noise reduction.<br/>
            The range is [0.01, 1], and the default is 0.4.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnReduceNoiseEffect.Props.EdgeMode">
            <summary>
            Specifies how sampling beyond the edge of the image should be performed.<br/>
            If this value is <see cref="F:PaintDotNet.Effects.Gpu.PdnReduceNoiseEdgeMode.Transparent"/>, the effect pads the image with transparent
            pixels as it applies the kernel, resulting in a soft edge. The output will be larger than the input by
            approximately the kernel radius, in pixels.<br/>
            If set to another edge mode, the effect clamps the output to the size of the input image.<br/>
            The default value is <see cref="F:PaintDotNet.Effects.Gpu.PdnReduceNoiseEdgeMode.Mirror"/>.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnReduceNoiseEffect.Props.AlphaMode">
            <summary>
            Specifies the alpha mode for the input and output.<br/>
            The default value is <see cref="F:PaintDotNet.Effects.Gpu.PdnReduceNoiseAlphaMode.Premultiplied"/>.
            </summary>
        </member>
        <member name="T:PaintDotNet.Effects.Gpu.PdnReduceNoiseEffect.Impl">
            <inheritdoc cref="T:PaintDotNet.Effects.Gpu.PdnReduceNoiseEffect.Impl"/>
        </member>
        <member name="T:PaintDotNet.Effects.Gpu.PdnReduceNoiseEffect.Impl.Shader">
            <inheritdoc cref="T:PaintDotNet.Effects.Gpu.PdnReduceNoiseEffect.Impl.Shader"/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnReduceNoiseEffect.Impl.Shader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnReduceNoiseEffect#Impl#Shader}#EffectId">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnReduceNoiseEffect.Impl.Shader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnReduceNoiseEffect#Impl#Shader}#EffectDisplayName">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnReduceNoiseEffect.Impl.Shader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnReduceNoiseEffect#Impl#Shader}#EffectDescription">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnReduceNoiseEffect.Impl.Shader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnReduceNoiseEffect#Impl#Shader}#EffectCategory">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnReduceNoiseEffect.Impl.Shader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnReduceNoiseEffect#Impl#Shader}#EffectAuthor">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnReduceNoiseEffect.Impl.Shader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnReduceNoiseEffect#Impl#Shader}#ConstantBufferSize">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnReduceNoiseEffect.Impl.Shader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnReduceNoiseEffect#Impl#Shader}#InputCount">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnReduceNoiseEffect.Impl.Shader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnReduceNoiseEffect#Impl#Shader}#ResourceTextureCount">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnReduceNoiseEffect.Impl.Shader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnReduceNoiseEffect#Impl#Shader}#InputTypes">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnReduceNoiseEffect.Impl.Shader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnReduceNoiseEffect#Impl#Shader}#InputDescriptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnReduceNoiseEffect.Impl.Shader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnReduceNoiseEffect#Impl#Shader}#ResourceTextureDescriptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnReduceNoiseEffect.Impl.Shader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnReduceNoiseEffect#Impl#Shader}#PixelOptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnReduceNoiseEffect.Impl.Shader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnReduceNoiseEffect#Impl#Shader}#BufferPrecision">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnReduceNoiseEffect.Impl.Shader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnReduceNoiseEffect#Impl#Shader}#ChannelDepth">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnReduceNoiseEffect.Impl.Shader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnReduceNoiseEffect#Impl#Shader}#ShaderProfile">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnReduceNoiseEffect.Impl.Shader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnReduceNoiseEffect#Impl#Shader}#CompileOptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnReduceNoiseEffect.Impl.Shader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnReduceNoiseEffect#Impl#Shader}#HlslSource">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnReduceNoiseEffect.Impl.Shader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnReduceNoiseEffect#Impl#Shader}#HlslBytecode">
            <inheritdoc/>
        </member>
        <member name="M:PaintDotNet.Effects.Gpu.PdnReduceNoiseEffect.Impl.Shader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnReduceNoiseEffect#Impl#Shader}#CreateFromConstantBuffer(System.ReadOnlySpan{System.Byte})">
            <inheritdoc/>
        </member>
        <member name="M:PaintDotNet.Effects.Gpu.PdnReduceNoiseEffect.Impl.Shader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnReduceNoiseEffect#Impl#Shader}#LoadConstantBuffer``1(PaintDotNet.Effects.Gpu.PdnReduceNoiseEffect.Impl.Shader@,``0@)">
            <inheritdoc/>
        </member>
        <member name="T:PaintDotNet.Effects.Gpu.PdnReliefEffect">
            <summary>
            A Direct2D effect that operates the same as Paint.NET's Relief effect.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnReliefEffect.Props.Angle">
            <summary>
            The angle, in degrees, of the relief effect. The default is 45.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnReliefEffect.Props.AlphaMode">
            <summary>
            Specifies the alpha mode for the input and output. The default value is Premultiplied.
            </summary>
        </member>
        <member name="T:PaintDotNet.Effects.Gpu.PdnRotateZoomEffect">
            <summary>
            Provides Paint.NET's Rotate/Zoom effect as a <see cref="T:PaintDotNet.Direct2D1.DynamicEffect"/> that can be used
            for rendering with Direct2D.
            </summary>
            <remarks>
            <inheritdoc/>
            </remarks>
        </member>
        <member name="M:PaintDotNet.Effects.Gpu.PdnRotateZoomEffect.#ctor(PaintDotNet.Direct2D1.IDeviceContext)">
            <summary>
            <inheritdoc />
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnRotateZoomEffect.Props.RollAngle">
            <summary>
            Specifies the angle of the transform. The range is [-180, +180]. The default is 0.
            </summary>
            <remarks>This corresponds to the X value when using the <see cref="P:PaintDotNet.Effects.Gpu.PdnRotateZoomEffect.Props.Roll"/> property.</remarks>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnRotateZoomEffect.Props.RollDirection">
            <summary>
            Specifies the direction of the transform. The range is [-180, +180]. The default is 0.
            </summary>
            <remarks>This corresponds to the Y value when using the <see cref="P:PaintDotNet.Effects.Gpu.PdnRotateZoomEffect.Props.Roll"/> property.</remarks>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnRotateZoomEffect.Props.RollAmount">
            <summary>
            Specifies the amount of the transform. The range is [0, 90]. The default is 0.
            </summary>
            <remarks>This corresponds to the Z value when using the <see cref="P:PaintDotNet.Effects.Gpu.PdnRotateZoomEffect.Props.Roll"/> property.</remarks>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnRotateZoomEffect.Props.Roll">
            <summary>
            Specifies all of the roll parameters. This is a convenient way to get or set RollAngle (X),
            RollDirection (Y), and RollAmount (Z) at the same time.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnRotateZoomEffect.Props.Offset">
            <summary>
            Specifies the translation offset of the transform in normalized coordinates.<br/>
            The range is [(-10,-10), (+10, +10)]. The default is (0, 0).
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnRotateZoomEffect.Props.Zoom">
            <summary>
            Specifies the zoom level. The valid range is [0.06, 16.0]. The default is 1.0.
            </summary>
        </member>
        <member name="T:PaintDotNet.Effects.Gpu.PdnRotateZoomSampleMap">
            <inheritdoc cref="T:PaintDotNet.Effects.Gpu.PdnRotateZoomSampleMap"/>
        </member>
        <member name="T:PaintDotNet.Effects.Gpu.PdnRotateZoomSampleMap.SampleMapShader">
            <inheritdoc cref="T:PaintDotNet.Effects.Gpu.PdnRotateZoomSampleMap.SampleMapShader"/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnRotateZoomSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnRotateZoomSampleMap#SampleMapShader}#EffectId">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnRotateZoomSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnRotateZoomSampleMap#SampleMapShader}#EffectDisplayName">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnRotateZoomSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnRotateZoomSampleMap#SampleMapShader}#EffectDescription">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnRotateZoomSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnRotateZoomSampleMap#SampleMapShader}#EffectCategory">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnRotateZoomSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnRotateZoomSampleMap#SampleMapShader}#EffectAuthor">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnRotateZoomSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnRotateZoomSampleMap#SampleMapShader}#ConstantBufferSize">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnRotateZoomSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnRotateZoomSampleMap#SampleMapShader}#InputCount">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnRotateZoomSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnRotateZoomSampleMap#SampleMapShader}#ResourceTextureCount">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnRotateZoomSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnRotateZoomSampleMap#SampleMapShader}#InputTypes">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnRotateZoomSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnRotateZoomSampleMap#SampleMapShader}#InputDescriptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnRotateZoomSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnRotateZoomSampleMap#SampleMapShader}#ResourceTextureDescriptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnRotateZoomSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnRotateZoomSampleMap#SampleMapShader}#PixelOptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnRotateZoomSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnRotateZoomSampleMap#SampleMapShader}#BufferPrecision">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnRotateZoomSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnRotateZoomSampleMap#SampleMapShader}#ChannelDepth">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnRotateZoomSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnRotateZoomSampleMap#SampleMapShader}#ShaderProfile">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnRotateZoomSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnRotateZoomSampleMap#SampleMapShader}#CompileOptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnRotateZoomSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnRotateZoomSampleMap#SampleMapShader}#HlslSource">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnRotateZoomSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnRotateZoomSampleMap#SampleMapShader}#HlslBytecode">
            <inheritdoc/>
        </member>
        <member name="M:PaintDotNet.Effects.Gpu.PdnRotateZoomSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnRotateZoomSampleMap#SampleMapShader}#CreateFromConstantBuffer(System.ReadOnlySpan{System.Byte})">
            <inheritdoc/>
        </member>
        <member name="M:PaintDotNet.Effects.Gpu.PdnRotateZoomSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnRotateZoomSampleMap#SampleMapShader}#LoadConstantBuffer``1(PaintDotNet.Effects.Gpu.PdnRotateZoomSampleMap.SampleMapShader@,``0@)">
            <inheritdoc/>
        </member>
        <member name="F:PaintDotNet.Effects.Gpu.PdnSketchBlurEdgeMode.Clamp">
            <summary>
            <inheritdoc cref="F:PaintDotNet.Direct2D1.Effects.BorderEdgeMode2.Clamp" />
            </summary>
        </member>
        <member name="F:PaintDotNet.Effects.Gpu.PdnSketchBlurEdgeMode.Wrap">
            <summary>
            <inheritdoc cref="F:PaintDotNet.Direct2D1.Effects.BorderEdgeMode2.Wrap" />
            </summary>
        </member>
        <member name="F:PaintDotNet.Effects.Gpu.PdnSketchBlurEdgeMode.Mirror">
            <summary>
            <inheritdoc cref="F:PaintDotNet.Direct2D1.Effects.BorderEdgeMode2.Mirror" />
            </summary>
        </member>
        <member name="F:PaintDotNet.Effects.Gpu.PdnSketchBlurEdgeMode.Transparent">
            <summary>
            <inheritdoc cref="F:PaintDotNet.Direct2D1.Effects.BorderEdgeMode2.Transparent" />
            </summary>
        </member>
        <member name="T:PaintDotNet.Effects.Gpu.PdnSketchBlurEffect">
            <summary>
            A Direct2D effect that renders Paint.NET's Sketch Blur effect.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnSketchBlurEffect.Props.Radius">
            <summary>
            The radius of the effect. A value of 0 will disable the effect.<br/>
            Performance scales with the square of this property value. Doubling the radius will quadruple the rendering time.<br/>
            The valid range is [0, 100], the default is 25.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnSketchBlurEffect.Props.Percentile">
            <summary>
            Specifies the percentile to use when approximating the median. Lower values result in darkened/eroded results,
            while higher values result in brightened/dilated results.<br/>
            The range is [0,1] which correspond's to the UI's range of [0, 100]. The default value is 0.5f.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnSketchBlurEffect.Props.Smoothness">
            <summary>
            Specifies how much smoothing is applied. This controls the number of rendering passes (iterations). Higher
            values will produce results that are close to an actual median effect, but will lose some of the coarse-
            grained sketchiness of lower values.<br/>
            Performance scales linearly with this property value. For example, a value of 5 will take approximately 5
            times as long to render than using a value of 1.<br/>
            The range is [1, 20], the default value is 3.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnSketchBlurEffect.Props.EdgeMode">
            <summary>
            Specifies how sampling beyond the edge of the image should be performed. The default value is Mirror.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnSketchBlurEffect.Props.AlphaMode">
            <summary>
            Specifies the alpha mode for the input and output. The default value is Premultiplied.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnSketchBlurEffect.Props.InputColorContext">
            <summary>
            Specifies the color context of the <see cref="P:PaintDotNet.Effects.Gpu.PdnSketchBlurEffect.Props.Input"/> image, which is used to optimize the quality
            of this effect's rendering.
            </summary>
            <remarks>
            If this property is set (is non-<c>null</c>, in other words), the image will be converted to linear
            gamma for some of the effect's internal rendering, while remaining in the original gamma (specified
            by this property) for other portions of rendering. The output of this effect will be in the color
            space defined by this property.<br/>
            <br/>
            This effect's rendering quality is optimal when the <see cref="P:PaintDotNet.Effects.Gpu.PdnSketchBlurEffect.Props.Input"/> image has not been linearized,
            and this property is set to its (non-linearized) color context.<br/>
            <br/>
            For Paint.NET GPU effect plugins, this means you should specify <see cref="P:PaintDotNet.Effects.Gpu.GpuEffectColorContext.WorkingSpace"/>
            for the <see cref="P:PaintDotNet.Effects.Gpu.IGpuEffectRenderInfo.ColorContext"/> property in your <see cref="M:PaintDotNet.Effects.Gpu.GpuEffect.OnInitializeRenderInfo(PaintDotNet.Effects.Gpu.IGpuEffectRenderInfo)"/>
            implementation. You can then set this property with the value of <see cref="P:PaintDotNet.Effects.Gpu.IGpuEffectDocumentInfo2.ColorContext"/>,
            or with the <see cref="P:PaintDotNet.Direct2D1.IDeviceImageFormatInfo.ColorContext"/> property of <see cref="P:PaintDotNet.Effects.Gpu.IGpuEffectEnvironment2.SourceImage"/>.
            </remarks>
        </member>
        <member name="T:PaintDotNet.Effects.Gpu.PdnSoftenPortraitEffect">
            <summary>
            A Direct2D effect that operates the same as Paint.NET's built-in Soften Portrait effect.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnSoftenPortraitEffect.Props.Softness">
            <summary>
            Specifies how much to soften the image. The range of this value is 0 to 10, and the default value is 5.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnSoftenPortraitEffect.Props.Lighting">
            <summary>
            Specifies how much to adjust the lighting of the image.<br/>
            The range of this value is [-0.2, +0.2], which corresponds to the UI's range of [-20, +20].<br/>
            The default value is 0.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnSoftenPortraitEffect.Props.Warmth">
            <summary>
            Specifies how much to adjust the warmth of the image.<br/>
            The range of this value is [0, 0.2], which corresponds to the UI's range of [0, +20].<br/>
            The default value is 0.1.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnSoftenPortraitEffect.Props.AlphaMode">
            <summary>
            Specifies the alpha mode of the input and the output.<br/>
            The default value is <see cref="F:PaintDotNet.Effects.Gpu.PdnSoftenPortraitAlphaMode.Premultiplied"/>.
            </summary>
        </member>
        <member name="T:PaintDotNet.Effects.Gpu.PdnSurfaceBlurEffect">
            <summary>
            A Direct2D effect that renders Paint.NET's built-in Surface Blur effect.<br/>
            <br/>
            Surface Blur is a bilateral filter that blurs the image while preserving sharp details and edges.
            </summary>
            <remarks>
            This effect tends to work best with compressed gamma (aka companded, non-linear).
            If your input image is in linear gamma space, or if the output of thise effect
            just looks bad or wrong, then it may be best to first adjust the gamma using
            <see cref="T:PaintDotNet.Direct2D1.Effects.GammaTransferEffect"/>, <see cref="T:PaintDotNet.Direct2D1.Effects.GammaTransferEffect2"/>, or
            <see cref="T:PaintDotNet.Direct2D1.Effects.ConvertGammaEffect"/> with an exponent of 2.2. You can also use
            <see cref="T:PaintDotNet.Direct2D1.Effects.LinearToSrgbEffect"/>. Then apply the inverse to the output of this
            effect (either apply an exponent of 1.0/2.2, or use <see cref="T:PaintDotNet.Direct2D1.Effects.SrgbToLinearEffect"/>).
            </remarks>
            <inheritdoc cref="T:PaintDotNet.Effects.Gpu.PdnSurfaceBlurEffect"/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnSurfaceBlurEffect.Props.Radius">
            <summary>
            Specifies the radius of the bilateral filter.<br/>
            The range is [0, 50], and the default value is 6.
            </summary>
            <remarks>
            The current implementation will use the integer ceiling of the provided value.
            </remarks>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnSurfaceBlurEffect.Props.Threshold">
            <summary>
            Specifies the threshold for determining whether a pixel should be included in the blurring.
            Lower values decrease the blurring effect.<br/>
            The range is [0, 0.01], and the value value is 0.15.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnSurfaceBlurEffect.Props.EdgeMode">
            <summary>
            Specifies how sampling beyond the edge of the image should be performed.<br/>
            If this value is <see cref="F:PaintDotNet.Effects.Gpu.PdnSurfaceBlurEdgeMode.Transparent"/>, the effect pads the image with transparent
            pixels as it applies the kernel, resulting in a soft edge. The output will be larger than the input by
            approximately the blur radius, in pixels.<br/>
            If set to another edge mode, the effect clamps the output to the size of the input image.<br/>
            The default value is <see cref="F:PaintDotNet.Effects.Gpu.PdnSurfaceBlurEdgeMode.Mirror"/>.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnSurfaceBlurEffect.Props.AlphaMode">
            <summary>
            Specifies the alpha mode for the input and output.<br/>
            The default value is <see cref="F:PaintDotNet.Effects.Gpu.PdnSurfaceBlurAlphaMode.Premultiplied"/>.
            </summary>
        </member>
        <member name="T:PaintDotNet.Effects.Gpu.PdnSurfaceBlurEffect.Impl">
            <inheritdoc cref="T:PaintDotNet.Effects.Gpu.PdnSurfaceBlurEffect.Impl"/>
        </member>
        <member name="T:PaintDotNet.Effects.Gpu.PdnSurfaceBlurEffect.Impl.Shader">
            <inheritdoc cref="T:PaintDotNet.Effects.Gpu.PdnSurfaceBlurEffect.Impl.Shader"/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnSurfaceBlurEffect.Impl.Shader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnSurfaceBlurEffect#Impl#Shader}#EffectId">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnSurfaceBlurEffect.Impl.Shader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnSurfaceBlurEffect#Impl#Shader}#EffectDisplayName">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnSurfaceBlurEffect.Impl.Shader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnSurfaceBlurEffect#Impl#Shader}#EffectDescription">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnSurfaceBlurEffect.Impl.Shader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnSurfaceBlurEffect#Impl#Shader}#EffectCategory">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnSurfaceBlurEffect.Impl.Shader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnSurfaceBlurEffect#Impl#Shader}#EffectAuthor">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnSurfaceBlurEffect.Impl.Shader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnSurfaceBlurEffect#Impl#Shader}#ConstantBufferSize">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnSurfaceBlurEffect.Impl.Shader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnSurfaceBlurEffect#Impl#Shader}#InputCount">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnSurfaceBlurEffect.Impl.Shader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnSurfaceBlurEffect#Impl#Shader}#ResourceTextureCount">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnSurfaceBlurEffect.Impl.Shader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnSurfaceBlurEffect#Impl#Shader}#InputTypes">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnSurfaceBlurEffect.Impl.Shader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnSurfaceBlurEffect#Impl#Shader}#InputDescriptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnSurfaceBlurEffect.Impl.Shader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnSurfaceBlurEffect#Impl#Shader}#ResourceTextureDescriptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnSurfaceBlurEffect.Impl.Shader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnSurfaceBlurEffect#Impl#Shader}#PixelOptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnSurfaceBlurEffect.Impl.Shader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnSurfaceBlurEffect#Impl#Shader}#BufferPrecision">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnSurfaceBlurEffect.Impl.Shader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnSurfaceBlurEffect#Impl#Shader}#ChannelDepth">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnSurfaceBlurEffect.Impl.Shader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnSurfaceBlurEffect#Impl#Shader}#ShaderProfile">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnSurfaceBlurEffect.Impl.Shader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnSurfaceBlurEffect#Impl#Shader}#CompileOptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnSurfaceBlurEffect.Impl.Shader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnSurfaceBlurEffect#Impl#Shader}#HlslSource">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnSurfaceBlurEffect.Impl.Shader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnSurfaceBlurEffect#Impl#Shader}#HlslBytecode">
            <inheritdoc/>
        </member>
        <member name="M:PaintDotNet.Effects.Gpu.PdnSurfaceBlurEffect.Impl.Shader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnSurfaceBlurEffect#Impl#Shader}#CreateFromConstantBuffer(System.ReadOnlySpan{System.Byte})">
            <inheritdoc/>
        </member>
        <member name="M:PaintDotNet.Effects.Gpu.PdnSurfaceBlurEffect.Impl.Shader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnSurfaceBlurEffect#Impl#Shader}#LoadConstantBuffer``1(PaintDotNet.Effects.Gpu.PdnSurfaceBlurEffect.Impl.Shader@,``0@)">
            <inheritdoc/>
        </member>
        <member name="T:PaintDotNet.Effects.Gpu.PdnTileReflectionEffect">
            <summary>
            Provides Paint.NET's Tile Reflection effect as a <see cref="T:PaintDotNet.Direct2D1.DynamicEffect"/> that can be used
            for rendering with Direct2D.
            </summary>
            <remarks>
            <inheritdoc/>
            </remarks>
        </member>
        <member name="M:PaintDotNet.Effects.Gpu.PdnTileReflectionEffect.#ctor(PaintDotNet.Direct2D1.IDeviceContext)">
            <summary>
            <inheritdoc />
            </summary>
        </member>
        <member name="T:PaintDotNet.Effects.Gpu.PdnTileReflectionSampleMap">
            <inheritdoc cref="T:PaintDotNet.Effects.Gpu.PdnTileReflectionSampleMap"/>
        </member>
        <member name="T:PaintDotNet.Effects.Gpu.PdnTileReflectionSampleMap.SampleMapShader">
            <inheritdoc cref="T:PaintDotNet.Effects.Gpu.PdnTileReflectionSampleMap.SampleMapShader"/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnTileReflectionSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnTileReflectionSampleMap#SampleMapShader}#EffectId">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnTileReflectionSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnTileReflectionSampleMap#SampleMapShader}#EffectDisplayName">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnTileReflectionSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnTileReflectionSampleMap#SampleMapShader}#EffectDescription">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnTileReflectionSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnTileReflectionSampleMap#SampleMapShader}#EffectCategory">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnTileReflectionSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnTileReflectionSampleMap#SampleMapShader}#EffectAuthor">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnTileReflectionSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnTileReflectionSampleMap#SampleMapShader}#ConstantBufferSize">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnTileReflectionSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnTileReflectionSampleMap#SampleMapShader}#InputCount">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnTileReflectionSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnTileReflectionSampleMap#SampleMapShader}#ResourceTextureCount">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnTileReflectionSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnTileReflectionSampleMap#SampleMapShader}#InputTypes">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnTileReflectionSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnTileReflectionSampleMap#SampleMapShader}#InputDescriptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnTileReflectionSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnTileReflectionSampleMap#SampleMapShader}#ResourceTextureDescriptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnTileReflectionSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnTileReflectionSampleMap#SampleMapShader}#PixelOptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnTileReflectionSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnTileReflectionSampleMap#SampleMapShader}#BufferPrecision">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnTileReflectionSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnTileReflectionSampleMap#SampleMapShader}#ChannelDepth">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnTileReflectionSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnTileReflectionSampleMap#SampleMapShader}#ShaderProfile">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnTileReflectionSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnTileReflectionSampleMap#SampleMapShader}#CompileOptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnTileReflectionSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnTileReflectionSampleMap#SampleMapShader}#HlslSource">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnTileReflectionSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnTileReflectionSampleMap#SampleMapShader}#HlslBytecode">
            <inheritdoc/>
        </member>
        <member name="M:PaintDotNet.Effects.Gpu.PdnTileReflectionSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnTileReflectionSampleMap#SampleMapShader}#CreateFromConstantBuffer(System.ReadOnlySpan{System.Byte})">
            <inheritdoc/>
        </member>
        <member name="M:PaintDotNet.Effects.Gpu.PdnTileReflectionSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnTileReflectionSampleMap#SampleMapShader}#LoadConstantBuffer``1(PaintDotNet.Effects.Gpu.PdnTileReflectionSampleMap.SampleMapShader@,``0@)">
            <inheritdoc/>
        </member>
        <member name="T:PaintDotNet.Effects.Gpu.PdnTwistEffect">
            <summary>
            Provides Paint.NET's Twist effect as a <see cref="T:PaintDotNet.Direct2D1.DynamicEffect"/> that can be used
            for rendering with Direct2D.
            </summary>
            <remarks>
            <inheritdoc />
            </remarks>
        </member>
        <member name="M:PaintDotNet.Effects.Gpu.PdnTwistEffect.#ctor(PaintDotNet.Direct2D1.IDeviceContext)">
            <summary>
            <inheritdoc />
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnTwistEffect.Props.Amount">
            <summary>
            The amount of twisting to perform.<br/>
            The range is [-2, +2], which corresponds to the UI's range of [-200, +200].<br/>
            The default value is 0.3.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnTwistEffect.Props.Scale">
            <summary>
            The scale of the twist effect. This is usually set to a user-defined scaling value (with a
            range of e.g. [0.01, 2.0]) multiplied by the ratio of the clipping regions's diameter (the minimum of
            its width and height) to the InputRect's diameter (that is: userScale * min(clipRect.Width, clipRect.Height) /
            min(inputRect.Width, inputRect.Height)). If the clipping and input rects are the same (e.g. no
            active selection), then there's no need to multiply by that ratio.<br/> 
            The range is [float.Epsilon, float.MaxValue], and the default is 1.0.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnTwistEffect.Props.Center">
            <summary>
            The center point of the twist effect.
            </summary>
        </member>
        <member name="T:PaintDotNet.Effects.Gpu.PdnTwistSampleMap">
            <inheritdoc cref="T:PaintDotNet.Effects.Gpu.PdnTwistSampleMap"/>
        </member>
        <member name="T:PaintDotNet.Effects.Gpu.PdnTwistSampleMap.SampleMapShader">
            <inheritdoc cref="T:PaintDotNet.Effects.Gpu.PdnTwistSampleMap.SampleMapShader"/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnTwistSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnTwistSampleMap#SampleMapShader}#EffectId">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnTwistSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnTwistSampleMap#SampleMapShader}#EffectDisplayName">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnTwistSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnTwistSampleMap#SampleMapShader}#EffectDescription">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnTwistSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnTwistSampleMap#SampleMapShader}#EffectCategory">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnTwistSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnTwistSampleMap#SampleMapShader}#EffectAuthor">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnTwistSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnTwistSampleMap#SampleMapShader}#ConstantBufferSize">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnTwistSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnTwistSampleMap#SampleMapShader}#InputCount">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnTwistSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnTwistSampleMap#SampleMapShader}#ResourceTextureCount">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnTwistSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnTwistSampleMap#SampleMapShader}#InputTypes">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnTwistSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnTwistSampleMap#SampleMapShader}#InputDescriptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnTwistSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnTwistSampleMap#SampleMapShader}#ResourceTextureDescriptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnTwistSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnTwistSampleMap#SampleMapShader}#PixelOptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnTwistSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnTwistSampleMap#SampleMapShader}#BufferPrecision">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnTwistSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnTwistSampleMap#SampleMapShader}#ChannelDepth">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnTwistSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnTwistSampleMap#SampleMapShader}#ShaderProfile">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnTwistSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnTwistSampleMap#SampleMapShader}#CompileOptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnTwistSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnTwistSampleMap#SampleMapShader}#HlslSource">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnTwistSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnTwistSampleMap#SampleMapShader}#HlslBytecode">
            <inheritdoc/>
        </member>
        <member name="M:PaintDotNet.Effects.Gpu.PdnTwistSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnTwistSampleMap#SampleMapShader}#CreateFromConstantBuffer(System.ReadOnlySpan{System.Byte})">
            <inheritdoc/>
        </member>
        <member name="M:PaintDotNet.Effects.Gpu.PdnTwistSampleMap.SampleMapShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnTwistSampleMap#SampleMapShader}#LoadConstantBuffer``1(PaintDotNet.Effects.Gpu.PdnTwistSampleMap.SampleMapShader@,``0@)">
            <inheritdoc/>
        </member>
        <member name="T:PaintDotNet.Effects.Gpu.PdnVignetteEffect">
            <summary>
            A Direct2D effect that operates the same as Paint.NET's built-in Vignette effect.
            </summary>
            <remarks>
            Note that this is not the same as <see cref="T:PaintDotNet.Direct2D1.Effects.VignetteEffect"/>, which is Direct2D's
            built-in <a href="https://docs.microsoft.com/en-us/windows/win32/direct2d/vignette-effect">Vignette effect</a>.
            </remarks>
            <inheritdoc cref="T:PaintDotNet.Effects.Gpu.PdnVignetteEffect"/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnVignetteEffect.Props.Offset">
            <summary>
            The offset of the vignette from the center. This is specified in coordinates that are
            normalized to half of the image coordinate space.<br/>
            [0, 0] draws the vignette from the center of the image, while [-1, -1] draws the vignette
            between the top left of the image and the center, and [+1, +1] draws the between the center
            and the bottom right of the image.<br/>
            The range of this property is [-2, -2] to [+2, +2]. The default value is [0, 0].
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnVignetteEffect.Props.Strength">
            <summary>
            Specifies how strong the vignette effect is. The range is 0 to 1, and the default is 1.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnVignetteEffect.Props.Radius">
            <summary>
            Specifies the normalized ratio of the vignette's radius. The range is 0.1 to 4.0, and the
            default is 0.5.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnVignetteEffect.Props.AlphaMode">
            <summary>
            Specifies the alpha mode for the effect's input and output. The default value is <see cref="F:PaintDotNet.Effects.Gpu.PdnVignetteAlphaMode.Premultiplied"/>.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnVignetteEffect.Props.InputGamma">
            <summary>
            Indicates the gamma of the input image, and for the output. The effect works in linear gamma space, so if the input image is
            known to be linear, the <see cref="F:PaintDotNet.Effects.Gpu.PdnVignetteInputGamma.Linear" /> value should be used to prevent sRGB to linear conversions
            from being performed on the input, and linear to sRGB conversions being performed for the output.<br/>
            The default value is <see cref="F:PaintDotNet.Effects.Gpu.PdnVignetteInputGamma.Srgb"/>.
            </summary>
        </member>
        <member name="T:PaintDotNet.Effects.Gpu.PdnVignetteEffect.Impl">
            <inheritdoc cref="T:PaintDotNet.Effects.Gpu.PdnVignetteEffect.Impl"/>
        </member>
        <member name="T:PaintDotNet.Effects.Gpu.PdnVignetteEffect.Impl.VignetteShader">
            <inheritdoc cref="T:PaintDotNet.Effects.Gpu.PdnVignetteEffect.Impl.VignetteShader"/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnVignetteEffect.Impl.VignetteShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnVignetteEffect#Impl#VignetteShader}#EffectId">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnVignetteEffect.Impl.VignetteShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnVignetteEffect#Impl#VignetteShader}#EffectDisplayName">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnVignetteEffect.Impl.VignetteShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnVignetteEffect#Impl#VignetteShader}#EffectDescription">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnVignetteEffect.Impl.VignetteShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnVignetteEffect#Impl#VignetteShader}#EffectCategory">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnVignetteEffect.Impl.VignetteShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnVignetteEffect#Impl#VignetteShader}#EffectAuthor">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnVignetteEffect.Impl.VignetteShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnVignetteEffect#Impl#VignetteShader}#ConstantBufferSize">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnVignetteEffect.Impl.VignetteShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnVignetteEffect#Impl#VignetteShader}#InputCount">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnVignetteEffect.Impl.VignetteShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnVignetteEffect#Impl#VignetteShader}#ResourceTextureCount">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnVignetteEffect.Impl.VignetteShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnVignetteEffect#Impl#VignetteShader}#InputTypes">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnVignetteEffect.Impl.VignetteShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnVignetteEffect#Impl#VignetteShader}#InputDescriptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnVignetteEffect.Impl.VignetteShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnVignetteEffect#Impl#VignetteShader}#ResourceTextureDescriptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnVignetteEffect.Impl.VignetteShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnVignetteEffect#Impl#VignetteShader}#PixelOptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnVignetteEffect.Impl.VignetteShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnVignetteEffect#Impl#VignetteShader}#BufferPrecision">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnVignetteEffect.Impl.VignetteShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnVignetteEffect#Impl#VignetteShader}#ChannelDepth">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnVignetteEffect.Impl.VignetteShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnVignetteEffect#Impl#VignetteShader}#ShaderProfile">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnVignetteEffect.Impl.VignetteShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnVignetteEffect#Impl#VignetteShader}#CompileOptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnVignetteEffect.Impl.VignetteShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnVignetteEffect#Impl#VignetteShader}#HlslSource">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnVignetteEffect.Impl.VignetteShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnVignetteEffect#Impl#VignetteShader}#HlslBytecode">
            <inheritdoc/>
        </member>
        <member name="M:PaintDotNet.Effects.Gpu.PdnVignetteEffect.Impl.VignetteShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnVignetteEffect#Impl#VignetteShader}#CreateFromConstantBuffer(System.ReadOnlySpan{System.Byte})">
            <inheritdoc/>
        </member>
        <member name="M:PaintDotNet.Effects.Gpu.PdnVignetteEffect.Impl.VignetteShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnVignetteEffect#Impl#VignetteShader}#LoadConstantBuffer``1(PaintDotNet.Effects.Gpu.PdnVignetteEffect.Impl.VignetteShader@,``0@)">
            <inheritdoc/>
        </member>
        <member name="F:PaintDotNet.Effects.Gpu.PdnVignetteInputGamma.Linear">
            <summary>
            <inheritdoc cref="F:PaintDotNet.Direct2D1.HighlightsAndShadowsInputGamma.Linear" />
            </summary>
        </member>
        <member name="F:PaintDotNet.Effects.Gpu.PdnVignetteInputGamma.Srgb">
            <summary>
            <inheritdoc cref="F:PaintDotNet.Direct2D1.HighlightsAndShadowsInputGamma.Srgb" />
            </summary>
        </member>
        <member name="T:PaintDotNet.Effects.Gpu.PdnZoomBlurEffect">
            <summary>
            Provides Paint.NET's Zoom Blur effect as a <see cref="T:PaintDotNet.Direct2D1.DynamicEffect"/> that can be used
            for rendering with Direct2D.
            </summary>
            <remarks>
            <inheritdoc cref="T:PaintDotNet.Direct2D1.DynamicImage" />
            </remarks>
            <inheritdoc cref="T:PaintDotNet.Effects.Gpu.PdnZoomBlurEffect"/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnZoomBlurEffect.Props.Center">
            <summary>
            Gets or sets the center of the zoom blur effect.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnZoomBlurEffect.Props.Scale">
            <summary>
            Gets or sets the amount of zoom (scaling) to perform. The range is [0.5, 2], and the default is 1.05.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnZoomBlurEffect.Props.AlphaExponent">
            <summary>
            Specifies the exponent used for alpha channel dropoff. Higher values cause a faster dropoff in the
            alpha for samples with respect to the distance from the sampled position. This results in the image
            being more focused towards the <see cref="P:PaintDotNet.Effects.Gpu.PdnZoomBlurEffect.Props.Center"/> point.<br/>
            The range is [1, 4]. The default value is 2.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnZoomBlurEffect.Props.Quality">
            <summary>
            Gets or sets the quality of the effect rendering. The minimum value is 1, and the default is 2.<br/>
            This is multiplied by the SampleCountPerQuality property to determine the number of rendering samples.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnZoomBlurEffect.Props.BorderMode">
            <summary>
            Gets or sets the border mode, which determines how samples outside the bounds of the input image
            are calculated.<br/>
            BorderMode.Hard will clamp the borders of the input image.<br/>
            BorderMode.Soft will cause pixels outside the image to be sampled as transparent black.<br/>
            The default is BorderMode.Hard.
            </summary>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnZoomBlurEffect.Props.AlphaMode">
            <summary>
            Gets or sets the alpha mode for the input and output.<br/>
            The default value is Premultiplied.
            </summary>
        </member>
        <member name="T:PaintDotNet.Effects.Gpu.PdnZoomBlurEffect.ZoomBlurShader">
            <inheritdoc cref="T:PaintDotNet.Effects.Gpu.PdnZoomBlurEffect.ZoomBlurShader"/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnZoomBlurEffect.ZoomBlurShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnZoomBlurEffect#ZoomBlurShader}#EffectId">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnZoomBlurEffect.ZoomBlurShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnZoomBlurEffect#ZoomBlurShader}#EffectDisplayName">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnZoomBlurEffect.ZoomBlurShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnZoomBlurEffect#ZoomBlurShader}#EffectDescription">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnZoomBlurEffect.ZoomBlurShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnZoomBlurEffect#ZoomBlurShader}#EffectCategory">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnZoomBlurEffect.ZoomBlurShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnZoomBlurEffect#ZoomBlurShader}#EffectAuthor">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnZoomBlurEffect.ZoomBlurShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnZoomBlurEffect#ZoomBlurShader}#ConstantBufferSize">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnZoomBlurEffect.ZoomBlurShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnZoomBlurEffect#ZoomBlurShader}#InputCount">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnZoomBlurEffect.ZoomBlurShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnZoomBlurEffect#ZoomBlurShader}#ResourceTextureCount">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnZoomBlurEffect.ZoomBlurShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnZoomBlurEffect#ZoomBlurShader}#InputTypes">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnZoomBlurEffect.ZoomBlurShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnZoomBlurEffect#ZoomBlurShader}#InputDescriptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnZoomBlurEffect.ZoomBlurShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnZoomBlurEffect#ZoomBlurShader}#ResourceTextureDescriptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnZoomBlurEffect.ZoomBlurShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnZoomBlurEffect#ZoomBlurShader}#PixelOptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnZoomBlurEffect.ZoomBlurShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnZoomBlurEffect#ZoomBlurShader}#BufferPrecision">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnZoomBlurEffect.ZoomBlurShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnZoomBlurEffect#ZoomBlurShader}#ChannelDepth">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnZoomBlurEffect.ZoomBlurShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnZoomBlurEffect#ZoomBlurShader}#ShaderProfile">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnZoomBlurEffect.ZoomBlurShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnZoomBlurEffect#ZoomBlurShader}#CompileOptions">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnZoomBlurEffect.ZoomBlurShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnZoomBlurEffect#ZoomBlurShader}#HlslSource">
            <inheritdoc/>
        </member>
        <member name="P:PaintDotNet.Effects.Gpu.PdnZoomBlurEffect.ZoomBlurShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnZoomBlurEffect#ZoomBlurShader}#HlslBytecode">
            <inheritdoc/>
        </member>
        <member name="M:PaintDotNet.Effects.Gpu.PdnZoomBlurEffect.ZoomBlurShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnZoomBlurEffect#ZoomBlurShader}#CreateFromConstantBuffer(System.ReadOnlySpan{System.Byte})">
            <inheritdoc/>
        </member>
        <member name="M:PaintDotNet.Effects.Gpu.PdnZoomBlurEffect.ZoomBlurShader.ComputeSharp#D2D1#Descriptors#ID2D1PixelShaderDescriptor{PaintDotNet#Effects#Gpu#PdnZoomBlurEffect#ZoomBlurShader}#LoadConstantBuffer``1(PaintDotNet.Effects.Gpu.PdnZoomBlurEffect.ZoomBlurShader@,``0@)">
            <inheritdoc/>
        </member>
        <member name="T:AutoConstructorAttribute">
            <summary>
            Add automatic constructor generation to the class.
            </summary>
            <example>
            [AutoConstructor]
            public partial class MyClass
            {
                private readonly MyDbContext _context;
                private readonly IHttpClientFactory _clientFactory;
                private readonly IService _service;
            }
            </example>
            <seealso href="https://github.com/k94ll13nn3/AutoConstructor#basic-usage"/>
        </member>
        <member name="M:AutoConstructorAttribute.#ctor(System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Add automatic constructor generation to the class.
            </summary>
            <param name="accessibility">Configure the accessibility of the constructor, public by default</param>
            <param name="addDefaultBaseAttribute">Configure automatic injection of <c>AutoConstructorDefaultBaseAttribute</c></param>
            <param name="disableThisCall">Disable call to this when it would have been called</param>
            <param name="addParameterless">Generate a parameterless constructor too.</param>
            <param name="matchBaseParameterOnName">If true, parameters that have the same name in base and child constructors will be matched together (when false, type must also match)</param>
        </member>
        <member name="T:AutoConstructorIgnoreAttribute">
            <summary>
            Exclude field from being injected into the generated constructor.
            </summary>
            <example>
            [AutoConstructor]
            public partial class MyClass
            {
                [AutoConstructorIgnore]
                private readonly MyDbContext _context;
            }
            </example>
        </member>
        <member name="T:AutoConstructorInjectAttribute">
            <summary>
            Modify the way that the field is injected into the constructor.
            </summary>
            <example>
            [AutoConstructor]
            public partial class MyClass
            {
                [AutoConstructorInject("guid.ToString().Length", "guid", typeof(Guid))]
                private readonly int _guidLength;
            }
            </example>
        </member>
        <member name="M:AutoConstructorInjectAttribute.#ctor(System.String,System.String,System.Type)">
            <summary>
            Initialize the attribute
            </summary>
            <param name="initializer"> A string that will be used to initialize the field, default to the parameterName if null or empty.</param>
            <param name="parameterName">The name of the parameter to used in the constructor, default to the field name trimmed if null or empty.</param>
            <param name="injectedType">The type of the parameter to used in the constructor, default to the field type if null.</param>
        </member>
        <member name="T:AutoConstructorInitializerAttribute">
            <summary>
            Configure a method to be called by the generated constructor. The method must be parameterless and returning void.
            </summary>
            <example>
            [AutoConstructor]
            internal partial class Test
            {
                private readonly int _t;
            
                [AutoConstructorInitializer]
                public void Initializer()
                {
                }
            }
            </example>
            <seealso href="https://github.com/k94ll13nn3/AutoConstructor#initializer-method"/>
        </member>
        <member name="T:AutoConstructorDefaultBaseAttribute">
            <summary>
            Configure a constructor to be injected as base(...) call to derived types with auto-generated constructor.
            </summary>
            <example>
            internal class Test
            {
                [AutoConstructorDefaultBase]
                public Test()
                {
                }
            }
            </example>
            <seealso href="https://github.com/k94ll13nn3/AutoConstructor#base-constructor-choice"/>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.ConstantBuffer">
            <summary>
            A type representing the constant buffer native layout for <see cref="T:PaintDotNet.Effects.Gpu.PdnAddNoiseEffect.Impl.AddNoiseShader"/>.
            </summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.dev">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnAddNoiseEffect.Impl.AddNoiseShader.dev"/>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.sat">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnAddNoiseEffect.Impl.AddNoiseShader.sat"/>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.coverage">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnAddNoiseEffect.Impl.AddNoiseShader.coverage"/>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.seed">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnAddNoiseEffect.Impl.AddNoiseShader.seed"/>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller">
            <summary>
            A type containing marshalling logic for the constant buffer in shaders of type <see cref="T:PaintDotNet.Effects.Gpu.PdnAddNoiseEffect.Impl.AddNoiseShader"/>.
            </summary>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.FromManaged(PaintDotNet.Effects.Gpu.PdnAddNoiseEffect.Impl.AddNoiseShader@,ComputeSharp.D2D1.Generated.ConstantBuffer@)">
            <summary>
            Marshals managed <see cref="T:PaintDotNet.Effects.Gpu.PdnAddNoiseEffect.Impl.AddNoiseShader"/> instances to native constant buffer data.
            </summary>
            <param name="buffer">The input native constant buffer.</param>
            <returns>The marshalled <see cref="T:PaintDotNet.Effects.Gpu.PdnAddNoiseEffect.Impl.AddNoiseShader"/> instance.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.ToManaged(ComputeSharp.D2D1.Generated.ConstantBuffer@)">
            <summary>
            Marshals native constant buffer data to managed <see cref="T:PaintDotNet.Effects.Gpu.PdnAddNoiseEffect.Impl.AddNoiseShader"/> instances.
            </summary>
            <param name="buffer">The input native constant buffer.</param>
            <returns>The marshalled <see cref="T:PaintDotNet.Effects.Gpu.PdnAddNoiseEffect.Impl.AddNoiseShader"/> instance.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.dev(PaintDotNet.Effects.Gpu.PdnAddNoiseEffect.Impl.AddNoiseShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnAddNoiseEffect.Impl.AddNoiseShader.dev"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnAddNoiseEffect.Impl.AddNoiseShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnAddNoiseEffect.Impl.AddNoiseShader.dev"/>.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.sat(PaintDotNet.Effects.Gpu.PdnAddNoiseEffect.Impl.AddNoiseShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnAddNoiseEffect.Impl.AddNoiseShader.sat"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnAddNoiseEffect.Impl.AddNoiseShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnAddNoiseEffect.Impl.AddNoiseShader.sat"/>.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.coverage(PaintDotNet.Effects.Gpu.PdnAddNoiseEffect.Impl.AddNoiseShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnAddNoiseEffect.Impl.AddNoiseShader.coverage"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnAddNoiseEffect.Impl.AddNoiseShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnAddNoiseEffect.Impl.AddNoiseShader.coverage"/>.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.seed(PaintDotNet.Effects.Gpu.PdnAddNoiseEffect.Impl.AddNoiseShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnAddNoiseEffect.Impl.AddNoiseShader.seed"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnAddNoiseEffect.Impl.AddNoiseShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnAddNoiseEffect.Impl.AddNoiseShader.seed"/>.</returns>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.Data">
            <summary>
            A container type for additional data needed by the shader.
            </summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.Data.InputDescriptions">
            <summary>The singleton <see cref="T:ComputeSharp.D2D1.Interop.D2D1InputDescription"/> array instance.</summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.Data.ResourceTextureDescriptions">
            <summary>The singleton <see cref="T:ComputeSharp.D2D1.Interop.D2D1ResourceTextureDescription"/> array instance.</summary>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.InputTypesMemoryManager">
            <summary>
            A <see cref="T:System.Buffers.MemoryManager`1"/> implementation to get the input types.
            </summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Instance">
            <summary>The singleton <see cref="T:ComputeSharp.D2D1.Generated.InputTypesMemoryManager"/> instance to use.</summary>
        </member>
        <member name="P:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Data">
            <summary>The RVA data with the input type info.</summary>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.GetSpan">
            <inheritdoc/>
        </member>
        <member name="P:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Memory">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Pin(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Unpin">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager">
            <summary>
            <see cref="T:System.Buffers.MemoryManager`1"/> implementation to get the HLSL bytecode.
            </summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Instance">
            <summary>The singleton <see cref="T:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager"/> instance to use.</summary>
        </member>
        <member name="P:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Data">
            <summary>The RVA data with the HLSL bytecode.</summary>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.GetSpan">
            <inheritdoc/>
        </member>
        <member name="P:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Memory">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Pin(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Unpin">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.ConstantBuffer">
            <summary>
            A type representing the constant buffer native layout for <see cref="T:PaintDotNet.Effects.Gpu.PdnBrightnessContrastEffect.BrightnessContrastShader"/>.
            </summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.preAdd">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnBrightnessContrastEffect.BrightnessContrastShader.preAdd"/>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.multiply">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnBrightnessContrastEffect.BrightnessContrastShader.multiply"/>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.invDivide">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnBrightnessContrastEffect.BrightnessContrastShader.invDivide"/>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.postAdd">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnBrightnessContrastEffect.BrightnessContrastShader.postAdd"/>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller">
            <summary>
            A type containing marshalling logic for the constant buffer in shaders of type <see cref="T:PaintDotNet.Effects.Gpu.PdnBrightnessContrastEffect.BrightnessContrastShader"/>.
            </summary>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.FromManaged(PaintDotNet.Effects.Gpu.PdnBrightnessContrastEffect.BrightnessContrastShader@,ComputeSharp.D2D1.Generated.ConstantBuffer@)">
            <summary>
            Marshals managed <see cref="T:PaintDotNet.Effects.Gpu.PdnBrightnessContrastEffect.BrightnessContrastShader"/> instances to native constant buffer data.
            </summary>
            <param name="buffer">The input native constant buffer.</param>
            <returns>The marshalled <see cref="T:PaintDotNet.Effects.Gpu.PdnBrightnessContrastEffect.BrightnessContrastShader"/> instance.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.ToManaged(ComputeSharp.D2D1.Generated.ConstantBuffer@)">
            <summary>
            Marshals native constant buffer data to managed <see cref="T:PaintDotNet.Effects.Gpu.PdnBrightnessContrastEffect.BrightnessContrastShader"/> instances.
            </summary>
            <param name="buffer">The input native constant buffer.</param>
            <returns>The marshalled <see cref="T:PaintDotNet.Effects.Gpu.PdnBrightnessContrastEffect.BrightnessContrastShader"/> instance.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.preAdd(PaintDotNet.Effects.Gpu.PdnBrightnessContrastEffect.BrightnessContrastShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnBrightnessContrastEffect.BrightnessContrastShader.preAdd"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnBrightnessContrastEffect.BrightnessContrastShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnBrightnessContrastEffect.BrightnessContrastShader.preAdd"/>.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.multiply(PaintDotNet.Effects.Gpu.PdnBrightnessContrastEffect.BrightnessContrastShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnBrightnessContrastEffect.BrightnessContrastShader.multiply"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnBrightnessContrastEffect.BrightnessContrastShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnBrightnessContrastEffect.BrightnessContrastShader.multiply"/>.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.invDivide(PaintDotNet.Effects.Gpu.PdnBrightnessContrastEffect.BrightnessContrastShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnBrightnessContrastEffect.BrightnessContrastShader.invDivide"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnBrightnessContrastEffect.BrightnessContrastShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnBrightnessContrastEffect.BrightnessContrastShader.invDivide"/>.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.postAdd(PaintDotNet.Effects.Gpu.PdnBrightnessContrastEffect.BrightnessContrastShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnBrightnessContrastEffect.BrightnessContrastShader.postAdd"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnBrightnessContrastEffect.BrightnessContrastShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnBrightnessContrastEffect.BrightnessContrastShader.postAdd"/>.</returns>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.Data">
            <summary>
            A container type for additional data needed by the shader.
            </summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.Data.InputDescriptions">
            <summary>The singleton <see cref="T:ComputeSharp.D2D1.Interop.D2D1InputDescription"/> array instance.</summary>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.InputTypesMemoryManager">
            <summary>
            A <see cref="T:System.Buffers.MemoryManager`1"/> implementation to get the input types.
            </summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Instance">
            <summary>The singleton <see cref="T:ComputeSharp.D2D1.Generated.InputTypesMemoryManager"/> instance to use.</summary>
        </member>
        <member name="P:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Data">
            <summary>The RVA data with the input type info.</summary>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.GetSpan">
            <inheritdoc/>
        </member>
        <member name="P:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Memory">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Pin(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Unpin">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager">
            <summary>
            <see cref="T:System.Buffers.MemoryManager`1"/> implementation to get the HLSL bytecode.
            </summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Instance">
            <summary>The singleton <see cref="T:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager"/> instance to use.</summary>
        </member>
        <member name="P:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Data">
            <summary>The RVA data with the HLSL bytecode.</summary>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.GetSpan">
            <inheritdoc/>
        </member>
        <member name="P:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Memory">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Pin(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Unpin">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.ConstantBuffer">
            <summary>
            A type representing the constant buffer native layout for <see cref="T:PaintDotNet.Effects.Gpu.PdnBrightnessContrastEffect.FullContrastShader"/>.
            </summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.brightnessNorm">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnBrightnessContrastEffect.FullContrastShader.brightnessNorm"/>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller">
            <summary>
            A type containing marshalling logic for the constant buffer in shaders of type <see cref="T:PaintDotNet.Effects.Gpu.PdnBrightnessContrastEffect.FullContrastShader"/>.
            </summary>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.FromManaged(PaintDotNet.Effects.Gpu.PdnBrightnessContrastEffect.FullContrastShader@,ComputeSharp.D2D1.Generated.ConstantBuffer@)">
            <summary>
            Marshals managed <see cref="T:PaintDotNet.Effects.Gpu.PdnBrightnessContrastEffect.FullContrastShader"/> instances to native constant buffer data.
            </summary>
            <param name="buffer">The input native constant buffer.</param>
            <returns>The marshalled <see cref="T:PaintDotNet.Effects.Gpu.PdnBrightnessContrastEffect.FullContrastShader"/> instance.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.ToManaged(ComputeSharp.D2D1.Generated.ConstantBuffer@)">
            <summary>
            Marshals native constant buffer data to managed <see cref="T:PaintDotNet.Effects.Gpu.PdnBrightnessContrastEffect.FullContrastShader"/> instances.
            </summary>
            <param name="buffer">The input native constant buffer.</param>
            <returns>The marshalled <see cref="T:PaintDotNet.Effects.Gpu.PdnBrightnessContrastEffect.FullContrastShader"/> instance.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.brightnessNorm(PaintDotNet.Effects.Gpu.PdnBrightnessContrastEffect.FullContrastShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnBrightnessContrastEffect.FullContrastShader.brightnessNorm"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnBrightnessContrastEffect.FullContrastShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnBrightnessContrastEffect.FullContrastShader.brightnessNorm"/>.</returns>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.Data">
            <summary>
            A container type for additional data needed by the shader.
            </summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.Data.InputDescriptions">
            <summary>The singleton <see cref="T:ComputeSharp.D2D1.Interop.D2D1InputDescription"/> array instance.</summary>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.InputTypesMemoryManager">
            <summary>
            A <see cref="T:System.Buffers.MemoryManager`1"/> implementation to get the input types.
            </summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Instance">
            <summary>The singleton <see cref="T:ComputeSharp.D2D1.Generated.InputTypesMemoryManager"/> instance to use.</summary>
        </member>
        <member name="P:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Data">
            <summary>The RVA data with the input type info.</summary>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.GetSpan">
            <inheritdoc/>
        </member>
        <member name="P:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Memory">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Pin(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Unpin">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager">
            <summary>
            <see cref="T:System.Buffers.MemoryManager`1"/> implementation to get the HLSL bytecode.
            </summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Instance">
            <summary>The singleton <see cref="T:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager"/> instance to use.</summary>
        </member>
        <member name="P:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Data">
            <summary>The RVA data with the HLSL bytecode.</summary>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.GetSpan">
            <inheritdoc/>
        </member>
        <member name="P:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Memory">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Pin(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Unpin">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.ConstantBuffer">
            <summary>
            A type representing the constant buffer native layout for <see cref="T:PaintDotNet.Effects.Gpu.PdnBulgeSampleMap.SampleMapShader"/>.
            </summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.strength">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnBulgeSampleMap.SampleMapShader.strength"/>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.invmaxrad">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnBulgeSampleMap.SampleMapShader.invmaxrad"/>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.center">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnBulgeSampleMap.SampleMapShader.center"/>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller">
            <summary>
            A type containing marshalling logic for the constant buffer in shaders of type <see cref="T:PaintDotNet.Effects.Gpu.PdnBulgeSampleMap.SampleMapShader"/>.
            </summary>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.FromManaged(PaintDotNet.Effects.Gpu.PdnBulgeSampleMap.SampleMapShader@,ComputeSharp.D2D1.Generated.ConstantBuffer@)">
            <summary>
            Marshals managed <see cref="T:PaintDotNet.Effects.Gpu.PdnBulgeSampleMap.SampleMapShader"/> instances to native constant buffer data.
            </summary>
            <param name="buffer">The input native constant buffer.</param>
            <returns>The marshalled <see cref="T:PaintDotNet.Effects.Gpu.PdnBulgeSampleMap.SampleMapShader"/> instance.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.ToManaged(ComputeSharp.D2D1.Generated.ConstantBuffer@)">
            <summary>
            Marshals native constant buffer data to managed <see cref="T:PaintDotNet.Effects.Gpu.PdnBulgeSampleMap.SampleMapShader"/> instances.
            </summary>
            <param name="buffer">The input native constant buffer.</param>
            <returns>The marshalled <see cref="T:PaintDotNet.Effects.Gpu.PdnBulgeSampleMap.SampleMapShader"/> instance.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.strength(PaintDotNet.Effects.Gpu.PdnBulgeSampleMap.SampleMapShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnBulgeSampleMap.SampleMapShader.strength"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnBulgeSampleMap.SampleMapShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnBulgeSampleMap.SampleMapShader.strength"/>.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.invmaxrad(PaintDotNet.Effects.Gpu.PdnBulgeSampleMap.SampleMapShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnBulgeSampleMap.SampleMapShader.invmaxrad"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnBulgeSampleMap.SampleMapShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnBulgeSampleMap.SampleMapShader.invmaxrad"/>.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.center(PaintDotNet.Effects.Gpu.PdnBulgeSampleMap.SampleMapShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnBulgeSampleMap.SampleMapShader.center"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnBulgeSampleMap.SampleMapShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnBulgeSampleMap.SampleMapShader.center"/>.</returns>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.Data">
            <summary>
            A container type for additional data needed by the shader.
            </summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.Data.InputDescriptions">
            <summary>The singleton <see cref="T:ComputeSharp.D2D1.Interop.D2D1InputDescription"/> array instance.</summary>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.InputTypesMemoryManager">
            <summary>
            A <see cref="T:System.Buffers.MemoryManager`1"/> implementation to get the input types.
            </summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Instance">
            <summary>The singleton <see cref="T:ComputeSharp.D2D1.Generated.InputTypesMemoryManager"/> instance to use.</summary>
        </member>
        <member name="P:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Data">
            <summary>The RVA data with the input type info.</summary>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.GetSpan">
            <inheritdoc/>
        </member>
        <member name="P:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Memory">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Pin(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Unpin">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager">
            <summary>
            <see cref="T:System.Buffers.MemoryManager`1"/> implementation to get the HLSL bytecode.
            </summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Instance">
            <summary>The singleton <see cref="T:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager"/> instance to use.</summary>
        </member>
        <member name="P:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Data">
            <summary>The RVA data with the HLSL bytecode.</summary>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.GetSpan">
            <inheritdoc/>
        </member>
        <member name="P:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Memory">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Pin(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Unpin">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.ConstantBuffer">
            <summary>
            A type representing the constant buffer native layout for <see cref="T:PaintDotNet.Effects.Gpu.PdnCloudsEffect.Impl.CloudsShader"/>.
            </summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.size">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnCloudsEffect.Impl.CloudsShader.size"/>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.colorFrom">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnCloudsEffect.Impl.CloudsShader.colorFrom"/>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.colorTo">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnCloudsEffect.Impl.CloudsShader.colorTo"/>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.scale">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnCloudsEffect.Impl.CloudsShader.scale"/>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.power">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnCloudsEffect.Impl.CloudsShader.power"/>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.seed">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnCloudsEffect.Impl.CloudsShader.seed"/>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller">
            <summary>
            A type containing marshalling logic for the constant buffer in shaders of type <see cref="T:PaintDotNet.Effects.Gpu.PdnCloudsEffect.Impl.CloudsShader"/>.
            </summary>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.FromManaged(PaintDotNet.Effects.Gpu.PdnCloudsEffect.Impl.CloudsShader@,ComputeSharp.D2D1.Generated.ConstantBuffer@)">
            <summary>
            Marshals managed <see cref="T:PaintDotNet.Effects.Gpu.PdnCloudsEffect.Impl.CloudsShader"/> instances to native constant buffer data.
            </summary>
            <param name="buffer">The input native constant buffer.</param>
            <returns>The marshalled <see cref="T:PaintDotNet.Effects.Gpu.PdnCloudsEffect.Impl.CloudsShader"/> instance.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.ToManaged(ComputeSharp.D2D1.Generated.ConstantBuffer@)">
            <summary>
            Marshals native constant buffer data to managed <see cref="T:PaintDotNet.Effects.Gpu.PdnCloudsEffect.Impl.CloudsShader"/> instances.
            </summary>
            <param name="buffer">The input native constant buffer.</param>
            <returns>The marshalled <see cref="T:PaintDotNet.Effects.Gpu.PdnCloudsEffect.Impl.CloudsShader"/> instance.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.size(PaintDotNet.Effects.Gpu.PdnCloudsEffect.Impl.CloudsShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnCloudsEffect.Impl.CloudsShader.size"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnCloudsEffect.Impl.CloudsShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnCloudsEffect.Impl.CloudsShader.size"/>.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.colorFrom(PaintDotNet.Effects.Gpu.PdnCloudsEffect.Impl.CloudsShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnCloudsEffect.Impl.CloudsShader.colorFrom"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnCloudsEffect.Impl.CloudsShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnCloudsEffect.Impl.CloudsShader.colorFrom"/>.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.colorTo(PaintDotNet.Effects.Gpu.PdnCloudsEffect.Impl.CloudsShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnCloudsEffect.Impl.CloudsShader.colorTo"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnCloudsEffect.Impl.CloudsShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnCloudsEffect.Impl.CloudsShader.colorTo"/>.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.scale(PaintDotNet.Effects.Gpu.PdnCloudsEffect.Impl.CloudsShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnCloudsEffect.Impl.CloudsShader.scale"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnCloudsEffect.Impl.CloudsShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnCloudsEffect.Impl.CloudsShader.scale"/>.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.power(PaintDotNet.Effects.Gpu.PdnCloudsEffect.Impl.CloudsShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnCloudsEffect.Impl.CloudsShader.power"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnCloudsEffect.Impl.CloudsShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnCloudsEffect.Impl.CloudsShader.power"/>.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.seed(PaintDotNet.Effects.Gpu.PdnCloudsEffect.Impl.CloudsShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnCloudsEffect.Impl.CloudsShader.seed"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnCloudsEffect.Impl.CloudsShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnCloudsEffect.Impl.CloudsShader.seed"/>.</returns>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.Data">
            <summary>
            A container type for additional data needed by the shader.
            </summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.Data.ResourceTextureDescriptions">
            <summary>The singleton <see cref="T:ComputeSharp.D2D1.Interop.D2D1ResourceTextureDescription"/> array instance.</summary>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager">
            <summary>
            <see cref="T:System.Buffers.MemoryManager`1"/> implementation to get the HLSL bytecode.
            </summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Instance">
            <summary>The singleton <see cref="T:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager"/> instance to use.</summary>
        </member>
        <member name="P:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Data">
            <summary>The RVA data with the HLSL bytecode.</summary>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.GetSpan">
            <inheritdoc/>
        </member>
        <member name="P:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Memory">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Pin(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Unpin">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.ConstantBuffer">
            <summary>
            A type representing the constant buffer native layout for <see cref="T:PaintDotNet.Effects.Gpu.PdnCrystalizeSampleMap.SampleMapShader"/>.
            </summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.seed">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnCrystalizeSampleMap.SampleMapShader.seed"/>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.cellSize">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnCrystalizeSampleMap.SampleMapShader.cellSize"/>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.cellSizeR">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnCrystalizeSampleMap.SampleMapShader.cellSizeR"/>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller">
            <summary>
            A type containing marshalling logic for the constant buffer in shaders of type <see cref="T:PaintDotNet.Effects.Gpu.PdnCrystalizeSampleMap.SampleMapShader"/>.
            </summary>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.FromManaged(PaintDotNet.Effects.Gpu.PdnCrystalizeSampleMap.SampleMapShader@,ComputeSharp.D2D1.Generated.ConstantBuffer@)">
            <summary>
            Marshals managed <see cref="T:PaintDotNet.Effects.Gpu.PdnCrystalizeSampleMap.SampleMapShader"/> instances to native constant buffer data.
            </summary>
            <param name="buffer">The input native constant buffer.</param>
            <returns>The marshalled <see cref="T:PaintDotNet.Effects.Gpu.PdnCrystalizeSampleMap.SampleMapShader"/> instance.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.ToManaged(ComputeSharp.D2D1.Generated.ConstantBuffer@)">
            <summary>
            Marshals native constant buffer data to managed <see cref="T:PaintDotNet.Effects.Gpu.PdnCrystalizeSampleMap.SampleMapShader"/> instances.
            </summary>
            <param name="buffer">The input native constant buffer.</param>
            <returns>The marshalled <see cref="T:PaintDotNet.Effects.Gpu.PdnCrystalizeSampleMap.SampleMapShader"/> instance.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.seed(PaintDotNet.Effects.Gpu.PdnCrystalizeSampleMap.SampleMapShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnCrystalizeSampleMap.SampleMapShader.seed"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnCrystalizeSampleMap.SampleMapShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnCrystalizeSampleMap.SampleMapShader.seed"/>.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.cellSize(PaintDotNet.Effects.Gpu.PdnCrystalizeSampleMap.SampleMapShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnCrystalizeSampleMap.SampleMapShader.cellSize"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnCrystalizeSampleMap.SampleMapShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnCrystalizeSampleMap.SampleMapShader.cellSize"/>.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.cellSizeR(PaintDotNet.Effects.Gpu.PdnCrystalizeSampleMap.SampleMapShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnCrystalizeSampleMap.SampleMapShader.cellSizeR"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnCrystalizeSampleMap.SampleMapShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnCrystalizeSampleMap.SampleMapShader.cellSizeR"/>.</returns>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.Data">
            <summary>
            A container type for additional data needed by the shader.
            </summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.Data.InputDescriptions">
            <summary>The singleton <see cref="T:ComputeSharp.D2D1.Interop.D2D1InputDescription"/> array instance.</summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.Data.ResourceTextureDescriptions">
            <summary>The singleton <see cref="T:ComputeSharp.D2D1.Interop.D2D1ResourceTextureDescription"/> array instance.</summary>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.InputTypesMemoryManager">
            <summary>
            A <see cref="T:System.Buffers.MemoryManager`1"/> implementation to get the input types.
            </summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Instance">
            <summary>The singleton <see cref="T:ComputeSharp.D2D1.Generated.InputTypesMemoryManager"/> instance to use.</summary>
        </member>
        <member name="P:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Data">
            <summary>The RVA data with the input type info.</summary>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.GetSpan">
            <inheritdoc/>
        </member>
        <member name="P:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Memory">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Pin(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Unpin">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager">
            <summary>
            <see cref="T:System.Buffers.MemoryManager`1"/> implementation to get the HLSL bytecode.
            </summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Instance">
            <summary>The singleton <see cref="T:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager"/> instance to use.</summary>
        </member>
        <member name="P:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Data">
            <summary>The RVA data with the HLSL bytecode.</summary>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.GetSpan">
            <inheritdoc/>
        </member>
        <member name="P:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Memory">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Pin(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Unpin">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.ConstantBuffer">
            <summary>
            A type representing the constant buffer native layout for <see cref="T:PaintDotNet.Effects.Gpu.PdnDentsSampleMap.SampleMapShader"/>.
            </summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.center">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnDentsSampleMap.SampleMapShader.center"/>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.scaleR">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnDentsSampleMap.SampleMapShader.scaleR"/>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.theta">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnDentsSampleMap.SampleMapShader.theta"/>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.detail">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnDentsSampleMap.SampleMapShader.detail"/>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.turbulence">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnDentsSampleMap.SampleMapShader.turbulence"/>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.refractionScale">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnDentsSampleMap.SampleMapShader.refractionScale"/>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.seed">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnDentsSampleMap.SampleMapShader.seed"/>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.rotateTx_0">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnDentsSampleMap.SampleMapShader.rotateTx"/>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.rotateTx_1">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnDentsSampleMap.SampleMapShader.rotateTx"/>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller">
            <summary>
            A type containing marshalling logic for the constant buffer in shaders of type <see cref="T:PaintDotNet.Effects.Gpu.PdnDentsSampleMap.SampleMapShader"/>.
            </summary>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.FromManaged(PaintDotNet.Effects.Gpu.PdnDentsSampleMap.SampleMapShader@,ComputeSharp.D2D1.Generated.ConstantBuffer@)">
            <summary>
            Marshals managed <see cref="T:PaintDotNet.Effects.Gpu.PdnDentsSampleMap.SampleMapShader"/> instances to native constant buffer data.
            </summary>
            <param name="buffer">The input native constant buffer.</param>
            <returns>The marshalled <see cref="T:PaintDotNet.Effects.Gpu.PdnDentsSampleMap.SampleMapShader"/> instance.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.ToManaged(ComputeSharp.D2D1.Generated.ConstantBuffer@)">
            <summary>
            Marshals native constant buffer data to managed <see cref="T:PaintDotNet.Effects.Gpu.PdnDentsSampleMap.SampleMapShader"/> instances.
            </summary>
            <param name="buffer">The input native constant buffer.</param>
            <returns>The marshalled <see cref="T:PaintDotNet.Effects.Gpu.PdnDentsSampleMap.SampleMapShader"/> instance.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.center(PaintDotNet.Effects.Gpu.PdnDentsSampleMap.SampleMapShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnDentsSampleMap.SampleMapShader.center"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnDentsSampleMap.SampleMapShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnDentsSampleMap.SampleMapShader.center"/>.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.scaleR(PaintDotNet.Effects.Gpu.PdnDentsSampleMap.SampleMapShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnDentsSampleMap.SampleMapShader.scaleR"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnDentsSampleMap.SampleMapShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnDentsSampleMap.SampleMapShader.scaleR"/>.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.theta(PaintDotNet.Effects.Gpu.PdnDentsSampleMap.SampleMapShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnDentsSampleMap.SampleMapShader.theta"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnDentsSampleMap.SampleMapShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnDentsSampleMap.SampleMapShader.theta"/>.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.detail(PaintDotNet.Effects.Gpu.PdnDentsSampleMap.SampleMapShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnDentsSampleMap.SampleMapShader.detail"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnDentsSampleMap.SampleMapShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnDentsSampleMap.SampleMapShader.detail"/>.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.turbulence(PaintDotNet.Effects.Gpu.PdnDentsSampleMap.SampleMapShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnDentsSampleMap.SampleMapShader.turbulence"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnDentsSampleMap.SampleMapShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnDentsSampleMap.SampleMapShader.turbulence"/>.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.refractionScale(PaintDotNet.Effects.Gpu.PdnDentsSampleMap.SampleMapShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnDentsSampleMap.SampleMapShader.refractionScale"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnDentsSampleMap.SampleMapShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnDentsSampleMap.SampleMapShader.refractionScale"/>.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.seed(PaintDotNet.Effects.Gpu.PdnDentsSampleMap.SampleMapShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnDentsSampleMap.SampleMapShader.seed"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnDentsSampleMap.SampleMapShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnDentsSampleMap.SampleMapShader.seed"/>.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.rotateTx(PaintDotNet.Effects.Gpu.PdnDentsSampleMap.SampleMapShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnDentsSampleMap.SampleMapShader.rotateTx"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnDentsSampleMap.SampleMapShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnDentsSampleMap.SampleMapShader.rotateTx"/>.</returns>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.Data">
            <summary>
            A container type for additional data needed by the shader.
            </summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.Data.InputDescriptions">
            <summary>The singleton <see cref="T:ComputeSharp.D2D1.Interop.D2D1InputDescription"/> array instance.</summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.Data.ResourceTextureDescriptions">
            <summary>The singleton <see cref="T:ComputeSharp.D2D1.Interop.D2D1ResourceTextureDescription"/> array instance.</summary>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.InputTypesMemoryManager">
            <summary>
            A <see cref="T:System.Buffers.MemoryManager`1"/> implementation to get the input types.
            </summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Instance">
            <summary>The singleton <see cref="T:ComputeSharp.D2D1.Generated.InputTypesMemoryManager"/> instance to use.</summary>
        </member>
        <member name="P:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Data">
            <summary>The RVA data with the input type info.</summary>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.GetSpan">
            <inheritdoc/>
        </member>
        <member name="P:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Memory">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Pin(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Unpin">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager">
            <summary>
            <see cref="T:System.Buffers.MemoryManager`1"/> implementation to get the HLSL bytecode.
            </summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Instance">
            <summary>The singleton <see cref="T:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager"/> instance to use.</summary>
        </member>
        <member name="P:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Data">
            <summary>The RVA data with the HLSL bytecode.</summary>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.GetSpan">
            <inheritdoc/>
        </member>
        <member name="P:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Memory">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Pin(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Unpin">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.ConstantBuffer">
            <summary>
            A type representing the constant buffer native layout for <see cref="T:PaintDotNet.Effects.Gpu.PdnFragmentEffect.FragmentShader"/>.
            </summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.fragments">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnFragmentEffect.FragmentShader.fragments"/>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.distance">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnFragmentEffect.FragmentShader.distance"/>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.theta">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnFragmentEffect.FragmentShader.theta"/>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller">
            <summary>
            A type containing marshalling logic for the constant buffer in shaders of type <see cref="T:PaintDotNet.Effects.Gpu.PdnFragmentEffect.FragmentShader"/>.
            </summary>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.FromManaged(PaintDotNet.Effects.Gpu.PdnFragmentEffect.FragmentShader@,ComputeSharp.D2D1.Generated.ConstantBuffer@)">
            <summary>
            Marshals managed <see cref="T:PaintDotNet.Effects.Gpu.PdnFragmentEffect.FragmentShader"/> instances to native constant buffer data.
            </summary>
            <param name="buffer">The input native constant buffer.</param>
            <returns>The marshalled <see cref="T:PaintDotNet.Effects.Gpu.PdnFragmentEffect.FragmentShader"/> instance.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.ToManaged(ComputeSharp.D2D1.Generated.ConstantBuffer@)">
            <summary>
            Marshals native constant buffer data to managed <see cref="T:PaintDotNet.Effects.Gpu.PdnFragmentEffect.FragmentShader"/> instances.
            </summary>
            <param name="buffer">The input native constant buffer.</param>
            <returns>The marshalled <see cref="T:PaintDotNet.Effects.Gpu.PdnFragmentEffect.FragmentShader"/> instance.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.fragments(PaintDotNet.Effects.Gpu.PdnFragmentEffect.FragmentShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnFragmentEffect.FragmentShader.fragments"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnFragmentEffect.FragmentShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnFragmentEffect.FragmentShader.fragments"/>.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.distance(PaintDotNet.Effects.Gpu.PdnFragmentEffect.FragmentShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnFragmentEffect.FragmentShader.distance"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnFragmentEffect.FragmentShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnFragmentEffect.FragmentShader.distance"/>.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.theta(PaintDotNet.Effects.Gpu.PdnFragmentEffect.FragmentShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnFragmentEffect.FragmentShader.theta"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnFragmentEffect.FragmentShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnFragmentEffect.FragmentShader.theta"/>.</returns>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.Data">
            <summary>
            A container type for additional data needed by the shader.
            </summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.Data.InputDescriptions">
            <summary>The singleton <see cref="T:ComputeSharp.D2D1.Interop.D2D1InputDescription"/> array instance.</summary>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.InputTypesMemoryManager">
            <summary>
            A <see cref="T:System.Buffers.MemoryManager`1"/> implementation to get the input types.
            </summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Instance">
            <summary>The singleton <see cref="T:ComputeSharp.D2D1.Generated.InputTypesMemoryManager"/> instance to use.</summary>
        </member>
        <member name="P:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Data">
            <summary>The RVA data with the input type info.</summary>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.GetSpan">
            <inheritdoc/>
        </member>
        <member name="P:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Memory">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Pin(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Unpin">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager">
            <summary>
            <see cref="T:System.Buffers.MemoryManager`1"/> implementation to get the HLSL bytecode.
            </summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Instance">
            <summary>The singleton <see cref="T:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager"/> instance to use.</summary>
        </member>
        <member name="P:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Data">
            <summary>The RVA data with the HLSL bytecode.</summary>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.GetSpan">
            <inheritdoc/>
        </member>
        <member name="P:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Memory">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Pin(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Unpin">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.ConstantBuffer">
            <summary>
            A type representing the constant buffer native layout for <see cref="T:PaintDotNet.Effects.Gpu.PdnFrostedGlassSampleMap.SampleMapShader"/>.
            </summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.instanceSeed">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnFrostedGlassSampleMap.SampleMapShader.instanceSeed"/>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.pow">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnFrostedGlassSampleMap.SampleMapShader.pow"/>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.invPow">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnFrostedGlassSampleMap.SampleMapShader.invPow"/>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.minRadiusPow">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnFrostedGlassSampleMap.SampleMapShader.minRadiusPow"/>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.maxRadiusPow">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnFrostedGlassSampleMap.SampleMapShader.maxRadiusPow"/>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller">
            <summary>
            A type containing marshalling logic for the constant buffer in shaders of type <see cref="T:PaintDotNet.Effects.Gpu.PdnFrostedGlassSampleMap.SampleMapShader"/>.
            </summary>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.FromManaged(PaintDotNet.Effects.Gpu.PdnFrostedGlassSampleMap.SampleMapShader@,ComputeSharp.D2D1.Generated.ConstantBuffer@)">
            <summary>
            Marshals managed <see cref="T:PaintDotNet.Effects.Gpu.PdnFrostedGlassSampleMap.SampleMapShader"/> instances to native constant buffer data.
            </summary>
            <param name="buffer">The input native constant buffer.</param>
            <returns>The marshalled <see cref="T:PaintDotNet.Effects.Gpu.PdnFrostedGlassSampleMap.SampleMapShader"/> instance.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.ToManaged(ComputeSharp.D2D1.Generated.ConstantBuffer@)">
            <summary>
            Marshals native constant buffer data to managed <see cref="T:PaintDotNet.Effects.Gpu.PdnFrostedGlassSampleMap.SampleMapShader"/> instances.
            </summary>
            <param name="buffer">The input native constant buffer.</param>
            <returns>The marshalled <see cref="T:PaintDotNet.Effects.Gpu.PdnFrostedGlassSampleMap.SampleMapShader"/> instance.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.instanceSeed(PaintDotNet.Effects.Gpu.PdnFrostedGlassSampleMap.SampleMapShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnFrostedGlassSampleMap.SampleMapShader.instanceSeed"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnFrostedGlassSampleMap.SampleMapShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnFrostedGlassSampleMap.SampleMapShader.instanceSeed"/>.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.pow(PaintDotNet.Effects.Gpu.PdnFrostedGlassSampleMap.SampleMapShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnFrostedGlassSampleMap.SampleMapShader.pow"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnFrostedGlassSampleMap.SampleMapShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnFrostedGlassSampleMap.SampleMapShader.pow"/>.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.invPow(PaintDotNet.Effects.Gpu.PdnFrostedGlassSampleMap.SampleMapShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnFrostedGlassSampleMap.SampleMapShader.invPow"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnFrostedGlassSampleMap.SampleMapShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnFrostedGlassSampleMap.SampleMapShader.invPow"/>.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.minRadiusPow(PaintDotNet.Effects.Gpu.PdnFrostedGlassSampleMap.SampleMapShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnFrostedGlassSampleMap.SampleMapShader.minRadiusPow"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnFrostedGlassSampleMap.SampleMapShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnFrostedGlassSampleMap.SampleMapShader.minRadiusPow"/>.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.maxRadiusPow(PaintDotNet.Effects.Gpu.PdnFrostedGlassSampleMap.SampleMapShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnFrostedGlassSampleMap.SampleMapShader.maxRadiusPow"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnFrostedGlassSampleMap.SampleMapShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnFrostedGlassSampleMap.SampleMapShader.maxRadiusPow"/>.</returns>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager">
            <summary>
            <see cref="T:System.Buffers.MemoryManager`1"/> implementation to get the HLSL bytecode.
            </summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Instance">
            <summary>The singleton <see cref="T:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager"/> instance to use.</summary>
        </member>
        <member name="P:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Data">
            <summary>The RVA data with the HLSL bytecode.</summary>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.GetSpan">
            <inheritdoc/>
        </member>
        <member name="P:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Memory">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Pin(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Unpin">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.ConstantBuffer">
            <summary>
            A type representing the constant buffer native layout for <see cref="T:PaintDotNet.Effects.Gpu.PdnHueSaturationLightnessEffect.HueSaturationShader"/>.
            </summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.hueDelta">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnHueSaturationLightnessEffect.HueSaturationShader.hueDelta"/>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.saturationFactor">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnHueSaturationLightnessEffect.HueSaturationShader.saturationFactor"/>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller">
            <summary>
            A type containing marshalling logic for the constant buffer in shaders of type <see cref="T:PaintDotNet.Effects.Gpu.PdnHueSaturationLightnessEffect.HueSaturationShader"/>.
            </summary>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.FromManaged(PaintDotNet.Effects.Gpu.PdnHueSaturationLightnessEffect.HueSaturationShader@,ComputeSharp.D2D1.Generated.ConstantBuffer@)">
            <summary>
            Marshals managed <see cref="T:PaintDotNet.Effects.Gpu.PdnHueSaturationLightnessEffect.HueSaturationShader"/> instances to native constant buffer data.
            </summary>
            <param name="buffer">The input native constant buffer.</param>
            <returns>The marshalled <see cref="T:PaintDotNet.Effects.Gpu.PdnHueSaturationLightnessEffect.HueSaturationShader"/> instance.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.ToManaged(ComputeSharp.D2D1.Generated.ConstantBuffer@)">
            <summary>
            Marshals native constant buffer data to managed <see cref="T:PaintDotNet.Effects.Gpu.PdnHueSaturationLightnessEffect.HueSaturationShader"/> instances.
            </summary>
            <param name="buffer">The input native constant buffer.</param>
            <returns>The marshalled <see cref="T:PaintDotNet.Effects.Gpu.PdnHueSaturationLightnessEffect.HueSaturationShader"/> instance.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.hueDelta(PaintDotNet.Effects.Gpu.PdnHueSaturationLightnessEffect.HueSaturationShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnHueSaturationLightnessEffect.HueSaturationShader.hueDelta"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnHueSaturationLightnessEffect.HueSaturationShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnHueSaturationLightnessEffect.HueSaturationShader.hueDelta"/>.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.saturationFactor(PaintDotNet.Effects.Gpu.PdnHueSaturationLightnessEffect.HueSaturationShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnHueSaturationLightnessEffect.HueSaturationShader.saturationFactor"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnHueSaturationLightnessEffect.HueSaturationShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnHueSaturationLightnessEffect.HueSaturationShader.saturationFactor"/>.</returns>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.Data">
            <summary>
            A container type for additional data needed by the shader.
            </summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.Data.InputDescriptions">
            <summary>The singleton <see cref="T:ComputeSharp.D2D1.Interop.D2D1InputDescription"/> array instance.</summary>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.InputTypesMemoryManager">
            <summary>
            A <see cref="T:System.Buffers.MemoryManager`1"/> implementation to get the input types.
            </summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Instance">
            <summary>The singleton <see cref="T:ComputeSharp.D2D1.Generated.InputTypesMemoryManager"/> instance to use.</summary>
        </member>
        <member name="P:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Data">
            <summary>The RVA data with the input type info.</summary>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.GetSpan">
            <inheritdoc/>
        </member>
        <member name="P:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Memory">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Pin(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Unpin">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager">
            <summary>
            <see cref="T:System.Buffers.MemoryManager`1"/> implementation to get the HLSL bytecode.
            </summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Instance">
            <summary>The singleton <see cref="T:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager"/> instance to use.</summary>
        </member>
        <member name="P:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Data">
            <summary>The RVA data with the HLSL bytecode.</summary>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.GetSpan">
            <inheritdoc/>
        </member>
        <member name="P:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Memory">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Pin(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Unpin">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.ConstantBuffer">
            <summary>
            A type representing the constant buffer native layout for <see cref="T:PaintDotNet.Effects.Gpu.PdnHueSaturationLightnessEffect.LightnessShader"/>.
            </summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.target">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnHueSaturationLightnessEffect.LightnessShader.target"/>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.lerp">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnHueSaturationLightnessEffect.LightnessShader.lerp"/>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller">
            <summary>
            A type containing marshalling logic for the constant buffer in shaders of type <see cref="T:PaintDotNet.Effects.Gpu.PdnHueSaturationLightnessEffect.LightnessShader"/>.
            </summary>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.FromManaged(PaintDotNet.Effects.Gpu.PdnHueSaturationLightnessEffect.LightnessShader@,ComputeSharp.D2D1.Generated.ConstantBuffer@)">
            <summary>
            Marshals managed <see cref="T:PaintDotNet.Effects.Gpu.PdnHueSaturationLightnessEffect.LightnessShader"/> instances to native constant buffer data.
            </summary>
            <param name="buffer">The input native constant buffer.</param>
            <returns>The marshalled <see cref="T:PaintDotNet.Effects.Gpu.PdnHueSaturationLightnessEffect.LightnessShader"/> instance.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.ToManaged(ComputeSharp.D2D1.Generated.ConstantBuffer@)">
            <summary>
            Marshals native constant buffer data to managed <see cref="T:PaintDotNet.Effects.Gpu.PdnHueSaturationLightnessEffect.LightnessShader"/> instances.
            </summary>
            <param name="buffer">The input native constant buffer.</param>
            <returns>The marshalled <see cref="T:PaintDotNet.Effects.Gpu.PdnHueSaturationLightnessEffect.LightnessShader"/> instance.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.target(PaintDotNet.Effects.Gpu.PdnHueSaturationLightnessEffect.LightnessShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnHueSaturationLightnessEffect.LightnessShader.target"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnHueSaturationLightnessEffect.LightnessShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnHueSaturationLightnessEffect.LightnessShader.target"/>.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.lerp(PaintDotNet.Effects.Gpu.PdnHueSaturationLightnessEffect.LightnessShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnHueSaturationLightnessEffect.LightnessShader.lerp"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnHueSaturationLightnessEffect.LightnessShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnHueSaturationLightnessEffect.LightnessShader.lerp"/>.</returns>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.Data">
            <summary>
            A container type for additional data needed by the shader.
            </summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.Data.InputDescriptions">
            <summary>The singleton <see cref="T:ComputeSharp.D2D1.Interop.D2D1InputDescription"/> array instance.</summary>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.InputTypesMemoryManager">
            <summary>
            A <see cref="T:System.Buffers.MemoryManager`1"/> implementation to get the input types.
            </summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Instance">
            <summary>The singleton <see cref="T:ComputeSharp.D2D1.Generated.InputTypesMemoryManager"/> instance to use.</summary>
        </member>
        <member name="P:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Data">
            <summary>The RVA data with the input type info.</summary>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.GetSpan">
            <inheritdoc/>
        </member>
        <member name="P:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Memory">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Pin(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Unpin">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager">
            <summary>
            <see cref="T:System.Buffers.MemoryManager`1"/> implementation to get the HLSL bytecode.
            </summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Instance">
            <summary>The singleton <see cref="T:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager"/> instance to use.</summary>
        </member>
        <member name="P:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Data">
            <summary>The RVA data with the HLSL bytecode.</summary>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.GetSpan">
            <inheritdoc/>
        </member>
        <member name="P:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Memory">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Pin(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Unpin">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.ConstantBuffer">
            <summary>
            A type representing the constant buffer native layout for <see cref="T:PaintDotNet.Effects.Gpu.PdnInkSketchEffect.Impl.AdjustShader"/>.
            </summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.threshold">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnInkSketchEffect.Impl.AdjustShader.threshold"/>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller">
            <summary>
            A type containing marshalling logic for the constant buffer in shaders of type <see cref="T:PaintDotNet.Effects.Gpu.PdnInkSketchEffect.Impl.AdjustShader"/>.
            </summary>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.FromManaged(PaintDotNet.Effects.Gpu.PdnInkSketchEffect.Impl.AdjustShader@,ComputeSharp.D2D1.Generated.ConstantBuffer@)">
            <summary>
            Marshals managed <see cref="T:PaintDotNet.Effects.Gpu.PdnInkSketchEffect.Impl.AdjustShader"/> instances to native constant buffer data.
            </summary>
            <param name="buffer">The input native constant buffer.</param>
            <returns>The marshalled <see cref="T:PaintDotNet.Effects.Gpu.PdnInkSketchEffect.Impl.AdjustShader"/> instance.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.ToManaged(ComputeSharp.D2D1.Generated.ConstantBuffer@)">
            <summary>
            Marshals native constant buffer data to managed <see cref="T:PaintDotNet.Effects.Gpu.PdnInkSketchEffect.Impl.AdjustShader"/> instances.
            </summary>
            <param name="buffer">The input native constant buffer.</param>
            <returns>The marshalled <see cref="T:PaintDotNet.Effects.Gpu.PdnInkSketchEffect.Impl.AdjustShader"/> instance.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.threshold(PaintDotNet.Effects.Gpu.PdnInkSketchEffect.Impl.AdjustShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnInkSketchEffect.Impl.AdjustShader.threshold"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnInkSketchEffect.Impl.AdjustShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnInkSketchEffect.Impl.AdjustShader.threshold"/>.</returns>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.Data">
            <summary>
            A container type for additional data needed by the shader.
            </summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.Data.InputDescriptions">
            <summary>The singleton <see cref="T:ComputeSharp.D2D1.Interop.D2D1InputDescription"/> array instance.</summary>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.InputTypesMemoryManager">
            <summary>
            A <see cref="T:System.Buffers.MemoryManager`1"/> implementation to get the input types.
            </summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Instance">
            <summary>The singleton <see cref="T:ComputeSharp.D2D1.Generated.InputTypesMemoryManager"/> instance to use.</summary>
        </member>
        <member name="P:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Data">
            <summary>The RVA data with the input type info.</summary>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.GetSpan">
            <inheritdoc/>
        </member>
        <member name="P:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Memory">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Pin(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Unpin">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager">
            <summary>
            <see cref="T:System.Buffers.MemoryManager`1"/> implementation to get the HLSL bytecode.
            </summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Instance">
            <summary>The singleton <see cref="T:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager"/> instance to use.</summary>
        </member>
        <member name="P:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Data">
            <summary>The RVA data with the HLSL bytecode.</summary>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.GetSpan">
            <inheritdoc/>
        </member>
        <member name="P:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Memory">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Pin(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Unpin">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.ConstantBuffer">
            <summary>
            A type representing the constant buffer native layout for <see cref="T:PaintDotNet.Effects.Gpu.PdnJuliaFractalEffect.Impl.JuliaFractalShader"/>.
            </summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.size">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnJuliaFractalEffect.Impl.JuliaFractalShader.size"/>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.scenePosOffset">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnJuliaFractalEffect.Impl.JuliaFractalShader.scenePosOffset"/>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.aspect">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnJuliaFractalEffect.Impl.JuliaFractalShader.aspect"/>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.invH">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnJuliaFractalEffect.Impl.JuliaFractalShader.invH"/>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.factor">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnJuliaFractalEffect.Impl.JuliaFractalShader.factor"/>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.zoom">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnJuliaFractalEffect.Impl.JuliaFractalShader.zoom"/>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.invZoom">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnJuliaFractalEffect.Impl.JuliaFractalShader.invZoom"/>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.angle">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnJuliaFractalEffect.Impl.JuliaFractalShader.angle"/>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.angleTheta">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnJuliaFractalEffect.Impl.JuliaFractalShader.angleTheta"/>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller">
            <summary>
            A type containing marshalling logic for the constant buffer in shaders of type <see cref="T:PaintDotNet.Effects.Gpu.PdnJuliaFractalEffect.Impl.JuliaFractalShader"/>.
            </summary>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.FromManaged(PaintDotNet.Effects.Gpu.PdnJuliaFractalEffect.Impl.JuliaFractalShader@,ComputeSharp.D2D1.Generated.ConstantBuffer@)">
            <summary>
            Marshals managed <see cref="T:PaintDotNet.Effects.Gpu.PdnJuliaFractalEffect.Impl.JuliaFractalShader"/> instances to native constant buffer data.
            </summary>
            <param name="buffer">The input native constant buffer.</param>
            <returns>The marshalled <see cref="T:PaintDotNet.Effects.Gpu.PdnJuliaFractalEffect.Impl.JuliaFractalShader"/> instance.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.ToManaged(ComputeSharp.D2D1.Generated.ConstantBuffer@)">
            <summary>
            Marshals native constant buffer data to managed <see cref="T:PaintDotNet.Effects.Gpu.PdnJuliaFractalEffect.Impl.JuliaFractalShader"/> instances.
            </summary>
            <param name="buffer">The input native constant buffer.</param>
            <returns>The marshalled <see cref="T:PaintDotNet.Effects.Gpu.PdnJuliaFractalEffect.Impl.JuliaFractalShader"/> instance.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.size(PaintDotNet.Effects.Gpu.PdnJuliaFractalEffect.Impl.JuliaFractalShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnJuliaFractalEffect.Impl.JuliaFractalShader.size"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnJuliaFractalEffect.Impl.JuliaFractalShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnJuliaFractalEffect.Impl.JuliaFractalShader.size"/>.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.scenePosOffset(PaintDotNet.Effects.Gpu.PdnJuliaFractalEffect.Impl.JuliaFractalShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnJuliaFractalEffect.Impl.JuliaFractalShader.scenePosOffset"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnJuliaFractalEffect.Impl.JuliaFractalShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnJuliaFractalEffect.Impl.JuliaFractalShader.scenePosOffset"/>.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.aspect(PaintDotNet.Effects.Gpu.PdnJuliaFractalEffect.Impl.JuliaFractalShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnJuliaFractalEffect.Impl.JuliaFractalShader.aspect"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnJuliaFractalEffect.Impl.JuliaFractalShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnJuliaFractalEffect.Impl.JuliaFractalShader.aspect"/>.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.invH(PaintDotNet.Effects.Gpu.PdnJuliaFractalEffect.Impl.JuliaFractalShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnJuliaFractalEffect.Impl.JuliaFractalShader.invH"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnJuliaFractalEffect.Impl.JuliaFractalShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnJuliaFractalEffect.Impl.JuliaFractalShader.invH"/>.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.factor(PaintDotNet.Effects.Gpu.PdnJuliaFractalEffect.Impl.JuliaFractalShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnJuliaFractalEffect.Impl.JuliaFractalShader.factor"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnJuliaFractalEffect.Impl.JuliaFractalShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnJuliaFractalEffect.Impl.JuliaFractalShader.factor"/>.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.zoom(PaintDotNet.Effects.Gpu.PdnJuliaFractalEffect.Impl.JuliaFractalShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnJuliaFractalEffect.Impl.JuliaFractalShader.zoom"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnJuliaFractalEffect.Impl.JuliaFractalShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnJuliaFractalEffect.Impl.JuliaFractalShader.zoom"/>.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.invZoom(PaintDotNet.Effects.Gpu.PdnJuliaFractalEffect.Impl.JuliaFractalShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnJuliaFractalEffect.Impl.JuliaFractalShader.invZoom"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnJuliaFractalEffect.Impl.JuliaFractalShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnJuliaFractalEffect.Impl.JuliaFractalShader.invZoom"/>.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.angle(PaintDotNet.Effects.Gpu.PdnJuliaFractalEffect.Impl.JuliaFractalShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnJuliaFractalEffect.Impl.JuliaFractalShader.angle"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnJuliaFractalEffect.Impl.JuliaFractalShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnJuliaFractalEffect.Impl.JuliaFractalShader.angle"/>.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.angleTheta(PaintDotNet.Effects.Gpu.PdnJuliaFractalEffect.Impl.JuliaFractalShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnJuliaFractalEffect.Impl.JuliaFractalShader.angleTheta"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnJuliaFractalEffect.Impl.JuliaFractalShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnJuliaFractalEffect.Impl.JuliaFractalShader.angleTheta"/>.</returns>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager">
            <summary>
            <see cref="T:System.Buffers.MemoryManager`1"/> implementation to get the HLSL bytecode.
            </summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Instance">
            <summary>The singleton <see cref="T:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager"/> instance to use.</summary>
        </member>
        <member name="P:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Data">
            <summary>The RVA data with the HLSL bytecode.</summary>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.GetSpan">
            <inheritdoc/>
        </member>
        <member name="P:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Memory">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Pin(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Unpin">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.ConstantBuffer">
            <summary>
            A type representing the constant buffer native layout for <see cref="T:PaintDotNet.Effects.Gpu.PdnMandelbrotFractalEffect.Impl.MandelbrotFractalShader"/>.
            </summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.size">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnMandelbrotFractalEffect.Impl.MandelbrotFractalShader.size"/>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.scenePosOffset">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnMandelbrotFractalEffect.Impl.MandelbrotFractalShader.scenePosOffset"/>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.invH">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnMandelbrotFractalEffect.Impl.MandelbrotFractalShader.invH"/>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.zoom">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnMandelbrotFractalEffect.Impl.MandelbrotFractalShader.zoom"/>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.invZoom">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnMandelbrotFractalEffect.Impl.MandelbrotFractalShader.invZoom"/>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.factor">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnMandelbrotFractalEffect.Impl.MandelbrotFractalShader.factor"/>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.angle">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnMandelbrotFractalEffect.Impl.MandelbrotFractalShader.angle"/>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.angleTheta">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnMandelbrotFractalEffect.Impl.MandelbrotFractalShader.angleTheta"/>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller">
            <summary>
            A type containing marshalling logic for the constant buffer in shaders of type <see cref="T:PaintDotNet.Effects.Gpu.PdnMandelbrotFractalEffect.Impl.MandelbrotFractalShader"/>.
            </summary>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.FromManaged(PaintDotNet.Effects.Gpu.PdnMandelbrotFractalEffect.Impl.MandelbrotFractalShader@,ComputeSharp.D2D1.Generated.ConstantBuffer@)">
            <summary>
            Marshals managed <see cref="T:PaintDotNet.Effects.Gpu.PdnMandelbrotFractalEffect.Impl.MandelbrotFractalShader"/> instances to native constant buffer data.
            </summary>
            <param name="buffer">The input native constant buffer.</param>
            <returns>The marshalled <see cref="T:PaintDotNet.Effects.Gpu.PdnMandelbrotFractalEffect.Impl.MandelbrotFractalShader"/> instance.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.ToManaged(ComputeSharp.D2D1.Generated.ConstantBuffer@)">
            <summary>
            Marshals native constant buffer data to managed <see cref="T:PaintDotNet.Effects.Gpu.PdnMandelbrotFractalEffect.Impl.MandelbrotFractalShader"/> instances.
            </summary>
            <param name="buffer">The input native constant buffer.</param>
            <returns>The marshalled <see cref="T:PaintDotNet.Effects.Gpu.PdnMandelbrotFractalEffect.Impl.MandelbrotFractalShader"/> instance.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.size(PaintDotNet.Effects.Gpu.PdnMandelbrotFractalEffect.Impl.MandelbrotFractalShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnMandelbrotFractalEffect.Impl.MandelbrotFractalShader.size"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnMandelbrotFractalEffect.Impl.MandelbrotFractalShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnMandelbrotFractalEffect.Impl.MandelbrotFractalShader.size"/>.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.scenePosOffset(PaintDotNet.Effects.Gpu.PdnMandelbrotFractalEffect.Impl.MandelbrotFractalShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnMandelbrotFractalEffect.Impl.MandelbrotFractalShader.scenePosOffset"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnMandelbrotFractalEffect.Impl.MandelbrotFractalShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnMandelbrotFractalEffect.Impl.MandelbrotFractalShader.scenePosOffset"/>.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.invH(PaintDotNet.Effects.Gpu.PdnMandelbrotFractalEffect.Impl.MandelbrotFractalShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnMandelbrotFractalEffect.Impl.MandelbrotFractalShader.invH"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnMandelbrotFractalEffect.Impl.MandelbrotFractalShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnMandelbrotFractalEffect.Impl.MandelbrotFractalShader.invH"/>.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.zoom(PaintDotNet.Effects.Gpu.PdnMandelbrotFractalEffect.Impl.MandelbrotFractalShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnMandelbrotFractalEffect.Impl.MandelbrotFractalShader.zoom"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnMandelbrotFractalEffect.Impl.MandelbrotFractalShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnMandelbrotFractalEffect.Impl.MandelbrotFractalShader.zoom"/>.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.invZoom(PaintDotNet.Effects.Gpu.PdnMandelbrotFractalEffect.Impl.MandelbrotFractalShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnMandelbrotFractalEffect.Impl.MandelbrotFractalShader.invZoom"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnMandelbrotFractalEffect.Impl.MandelbrotFractalShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnMandelbrotFractalEffect.Impl.MandelbrotFractalShader.invZoom"/>.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.factor(PaintDotNet.Effects.Gpu.PdnMandelbrotFractalEffect.Impl.MandelbrotFractalShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnMandelbrotFractalEffect.Impl.MandelbrotFractalShader.factor"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnMandelbrotFractalEffect.Impl.MandelbrotFractalShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnMandelbrotFractalEffect.Impl.MandelbrotFractalShader.factor"/>.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.angle(PaintDotNet.Effects.Gpu.PdnMandelbrotFractalEffect.Impl.MandelbrotFractalShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnMandelbrotFractalEffect.Impl.MandelbrotFractalShader.angle"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnMandelbrotFractalEffect.Impl.MandelbrotFractalShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnMandelbrotFractalEffect.Impl.MandelbrotFractalShader.angle"/>.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.angleTheta(PaintDotNet.Effects.Gpu.PdnMandelbrotFractalEffect.Impl.MandelbrotFractalShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnMandelbrotFractalEffect.Impl.MandelbrotFractalShader.angleTheta"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnMandelbrotFractalEffect.Impl.MandelbrotFractalShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnMandelbrotFractalEffect.Impl.MandelbrotFractalShader.angleTheta"/>.</returns>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager">
            <summary>
            <see cref="T:System.Buffers.MemoryManager`1"/> implementation to get the HLSL bytecode.
            </summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Instance">
            <summary>The singleton <see cref="T:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager"/> instance to use.</summary>
        </member>
        <member name="P:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Data">
            <summary>The RVA data with the HLSL bytecode.</summary>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.GetSpan">
            <inheritdoc/>
        </member>
        <member name="P:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Memory">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Pin(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Unpin">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.ConstantBuffer">
            <summary>
            A type representing the constant buffer native layout for <see cref="T:PaintDotNet.Effects.Gpu.PdnMotionBlurEffect.MotionBlurShader"/>.
            </summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.samplesCount">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnMotionBlurEffect.MotionBlurShader.samplesCount"/>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.invWeightsSum">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnMotionBlurEffect.MotionBlurShader.invWeightsSum"/>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.samplingRectXYWH_x">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnMotionBlurEffect.MotionBlurShader.samplingRectXYWH"/>
            <remarks>Serialized field mapping to <see cref="F:PaintDotNet.Rendering.RectInt32.x"/>.</remarks>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.samplingRectXYWH_y">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnMotionBlurEffect.MotionBlurShader.samplingRectXYWH"/>
            <remarks>Serialized field mapping to <see cref="F:PaintDotNet.Rendering.RectInt32.y"/>.</remarks>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.samplingRectXYWH_width">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnMotionBlurEffect.MotionBlurShader.samplingRectXYWH"/>
            <remarks>Serialized field mapping to <see cref="F:PaintDotNet.Rendering.RectInt32.width"/>.</remarks>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.samplingRectXYWH_height">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnMotionBlurEffect.MotionBlurShader.samplingRectXYWH"/>
            <remarks>Serialized field mapping to <see cref="F:PaintDotNet.Rendering.RectInt32.height"/>.</remarks>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller">
            <summary>
            A type containing marshalling logic for the constant buffer in shaders of type <see cref="T:PaintDotNet.Effects.Gpu.PdnMotionBlurEffect.MotionBlurShader"/>.
            </summary>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.FromManaged(PaintDotNet.Effects.Gpu.PdnMotionBlurEffect.MotionBlurShader@,ComputeSharp.D2D1.Generated.ConstantBuffer@)">
            <summary>
            Marshals managed <see cref="T:PaintDotNet.Effects.Gpu.PdnMotionBlurEffect.MotionBlurShader"/> instances to native constant buffer data.
            </summary>
            <param name="buffer">The input native constant buffer.</param>
            <returns>The marshalled <see cref="T:PaintDotNet.Effects.Gpu.PdnMotionBlurEffect.MotionBlurShader"/> instance.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.ToManaged(ComputeSharp.D2D1.Generated.ConstantBuffer@)">
            <summary>
            Marshals native constant buffer data to managed <see cref="T:PaintDotNet.Effects.Gpu.PdnMotionBlurEffect.MotionBlurShader"/> instances.
            </summary>
            <param name="buffer">The input native constant buffer.</param>
            <returns>The marshalled <see cref="T:PaintDotNet.Effects.Gpu.PdnMotionBlurEffect.MotionBlurShader"/> instance.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.samplesCount(PaintDotNet.Effects.Gpu.PdnMotionBlurEffect.MotionBlurShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnMotionBlurEffect.MotionBlurShader.samplesCount"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnMotionBlurEffect.MotionBlurShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnMotionBlurEffect.MotionBlurShader.samplesCount"/>.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.invWeightsSum(PaintDotNet.Effects.Gpu.PdnMotionBlurEffect.MotionBlurShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnMotionBlurEffect.MotionBlurShader.invWeightsSum"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnMotionBlurEffect.MotionBlurShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnMotionBlurEffect.MotionBlurShader.invWeightsSum"/>.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.samplingRectXYWH(PaintDotNet.Effects.Gpu.PdnMotionBlurEffect.MotionBlurShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnMotionBlurEffect.MotionBlurShader.samplingRectXYWH"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnMotionBlurEffect.MotionBlurShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnMotionBlurEffect.MotionBlurShader.samplingRectXYWH"/>.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.x(PaintDotNet.Rendering.RectInt32@)">
            <inheritdoc cref="F:PaintDotNet.Rendering.RectInt32.x"/>
            <param name="value">The input <see cref="T:PaintDotNet.Rendering.RectInt32"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Rendering.RectInt32.x"/>.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.y(PaintDotNet.Rendering.RectInt32@)">
            <inheritdoc cref="F:PaintDotNet.Rendering.RectInt32.y"/>
            <param name="value">The input <see cref="T:PaintDotNet.Rendering.RectInt32"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Rendering.RectInt32.y"/>.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.width(PaintDotNet.Rendering.RectInt32@)">
            <inheritdoc cref="F:PaintDotNet.Rendering.RectInt32.width"/>
            <param name="value">The input <see cref="T:PaintDotNet.Rendering.RectInt32"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Rendering.RectInt32.width"/>.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.height(PaintDotNet.Rendering.RectInt32@)">
            <inheritdoc cref="F:PaintDotNet.Rendering.RectInt32.height"/>
            <param name="value">The input <see cref="T:PaintDotNet.Rendering.RectInt32"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Rendering.RectInt32.height"/>.</returns>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.Data">
            <summary>
            A container type for additional data needed by the shader.
            </summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.Data.InputDescriptions">
            <summary>The singleton <see cref="T:ComputeSharp.D2D1.Interop.D2D1InputDescription"/> array instance.</summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.Data.ResourceTextureDescriptions">
            <summary>The singleton <see cref="T:ComputeSharp.D2D1.Interop.D2D1ResourceTextureDescription"/> array instance.</summary>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.InputTypesMemoryManager">
            <summary>
            A <see cref="T:System.Buffers.MemoryManager`1"/> implementation to get the input types.
            </summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Instance">
            <summary>The singleton <see cref="T:ComputeSharp.D2D1.Generated.InputTypesMemoryManager"/> instance to use.</summary>
        </member>
        <member name="P:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Data">
            <summary>The RVA data with the input type info.</summary>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.GetSpan">
            <inheritdoc/>
        </member>
        <member name="P:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Memory">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Pin(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Unpin">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager">
            <summary>
            <see cref="T:System.Buffers.MemoryManager`1"/> implementation to get the HLSL bytecode.
            </summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Instance">
            <summary>The singleton <see cref="T:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager"/> instance to use.</summary>
        </member>
        <member name="P:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Data">
            <summary>The RVA data with the HLSL bytecode.</summary>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.GetSpan">
            <inheritdoc/>
        </member>
        <member name="P:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Memory">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Pin(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Unpin">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.Data">
            <summary>
            A container type for additional data needed by the shader.
            </summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.Data.InputDescriptions">
            <summary>The singleton <see cref="T:ComputeSharp.D2D1.Interop.D2D1InputDescription"/> array instance.</summary>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.InputTypesMemoryManager">
            <summary>
            A <see cref="T:System.Buffers.MemoryManager`1"/> implementation to get the input types.
            </summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Instance">
            <summary>The singleton <see cref="T:ComputeSharp.D2D1.Generated.InputTypesMemoryManager"/> instance to use.</summary>
        </member>
        <member name="P:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Data">
            <summary>The RVA data with the input type info.</summary>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.GetSpan">
            <inheritdoc/>
        </member>
        <member name="P:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Memory">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Pin(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Unpin">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager">
            <summary>
            <see cref="T:System.Buffers.MemoryManager`1"/> implementation to get the HLSL bytecode.
            </summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Instance">
            <summary>The singleton <see cref="T:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager"/> instance to use.</summary>
        </member>
        <member name="P:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Data">
            <summary>The RVA data with the HLSL bytecode.</summary>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.GetSpan">
            <inheritdoc/>
        </member>
        <member name="P:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Memory">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Pin(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Unpin">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.ConstantBuffer">
            <summary>
            A type representing the constant buffer native layout for <see cref="T:PaintDotNet.Effects.Gpu.PdnPolarInversionSampleMap.Impl.SampleMapShader"/>.
            </summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.centerOffset">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnPolarInversionSampleMap.Impl.SampleMapShader.centerOffset"/>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.radius2">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnPolarInversionSampleMap.Impl.SampleMapShader.radius2"/>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.scale">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnPolarInversionSampleMap.Impl.SampleMapShader.scale"/>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller">
            <summary>
            A type containing marshalling logic for the constant buffer in shaders of type <see cref="T:PaintDotNet.Effects.Gpu.PdnPolarInversionSampleMap.Impl.SampleMapShader"/>.
            </summary>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.FromManaged(PaintDotNet.Effects.Gpu.PdnPolarInversionSampleMap.Impl.SampleMapShader@,ComputeSharp.D2D1.Generated.ConstantBuffer@)">
            <summary>
            Marshals managed <see cref="T:PaintDotNet.Effects.Gpu.PdnPolarInversionSampleMap.Impl.SampleMapShader"/> instances to native constant buffer data.
            </summary>
            <param name="buffer">The input native constant buffer.</param>
            <returns>The marshalled <see cref="T:PaintDotNet.Effects.Gpu.PdnPolarInversionSampleMap.Impl.SampleMapShader"/> instance.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.ToManaged(ComputeSharp.D2D1.Generated.ConstantBuffer@)">
            <summary>
            Marshals native constant buffer data to managed <see cref="T:PaintDotNet.Effects.Gpu.PdnPolarInversionSampleMap.Impl.SampleMapShader"/> instances.
            </summary>
            <param name="buffer">The input native constant buffer.</param>
            <returns>The marshalled <see cref="T:PaintDotNet.Effects.Gpu.PdnPolarInversionSampleMap.Impl.SampleMapShader"/> instance.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.centerOffset(PaintDotNet.Effects.Gpu.PdnPolarInversionSampleMap.Impl.SampleMapShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnPolarInversionSampleMap.Impl.SampleMapShader.centerOffset"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnPolarInversionSampleMap.Impl.SampleMapShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnPolarInversionSampleMap.Impl.SampleMapShader.centerOffset"/>.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.radius2(PaintDotNet.Effects.Gpu.PdnPolarInversionSampleMap.Impl.SampleMapShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnPolarInversionSampleMap.Impl.SampleMapShader.radius2"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnPolarInversionSampleMap.Impl.SampleMapShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnPolarInversionSampleMap.Impl.SampleMapShader.radius2"/>.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.scale(PaintDotNet.Effects.Gpu.PdnPolarInversionSampleMap.Impl.SampleMapShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnPolarInversionSampleMap.Impl.SampleMapShader.scale"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnPolarInversionSampleMap.Impl.SampleMapShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnPolarInversionSampleMap.Impl.SampleMapShader.scale"/>.</returns>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.Data">
            <summary>
            A container type for additional data needed by the shader.
            </summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.Data.InputDescriptions">
            <summary>The singleton <see cref="T:ComputeSharp.D2D1.Interop.D2D1InputDescription"/> array instance.</summary>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.InputTypesMemoryManager">
            <summary>
            A <see cref="T:System.Buffers.MemoryManager`1"/> implementation to get the input types.
            </summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Instance">
            <summary>The singleton <see cref="T:ComputeSharp.D2D1.Generated.InputTypesMemoryManager"/> instance to use.</summary>
        </member>
        <member name="P:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Data">
            <summary>The RVA data with the input type info.</summary>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.GetSpan">
            <inheritdoc/>
        </member>
        <member name="P:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Memory">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Pin(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Unpin">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager">
            <summary>
            <see cref="T:System.Buffers.MemoryManager`1"/> implementation to get the HLSL bytecode.
            </summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Instance">
            <summary>The singleton <see cref="T:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager"/> instance to use.</summary>
        </member>
        <member name="P:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Data">
            <summary>The RVA data with the HLSL bytecode.</summary>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.GetSpan">
            <inheritdoc/>
        </member>
        <member name="P:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Memory">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Pin(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Unpin">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.ConstantBuffer">
            <summary>
            A type representing the constant buffer native layout for <see cref="T:PaintDotNet.Effects.Gpu.PdnRadialBlurEffect.RadialBlurShader"/>.
            </summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.center">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnRadialBlurEffect.RadialBlurShader.center"/>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.thetaMin">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnRadialBlurEffect.RadialBlurShader.thetaMin"/>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.thetaMax">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnRadialBlurEffect.RadialBlurShader.thetaMax"/>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.sampleCount">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnRadialBlurEffect.RadialBlurShader.sampleCount"/>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.invSampleCount">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnRadialBlurEffect.RadialBlurShader.invSampleCount"/>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller">
            <summary>
            A type containing marshalling logic for the constant buffer in shaders of type <see cref="T:PaintDotNet.Effects.Gpu.PdnRadialBlurEffect.RadialBlurShader"/>.
            </summary>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.FromManaged(PaintDotNet.Effects.Gpu.PdnRadialBlurEffect.RadialBlurShader@,ComputeSharp.D2D1.Generated.ConstantBuffer@)">
            <summary>
            Marshals managed <see cref="T:PaintDotNet.Effects.Gpu.PdnRadialBlurEffect.RadialBlurShader"/> instances to native constant buffer data.
            </summary>
            <param name="buffer">The input native constant buffer.</param>
            <returns>The marshalled <see cref="T:PaintDotNet.Effects.Gpu.PdnRadialBlurEffect.RadialBlurShader"/> instance.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.ToManaged(ComputeSharp.D2D1.Generated.ConstantBuffer@)">
            <summary>
            Marshals native constant buffer data to managed <see cref="T:PaintDotNet.Effects.Gpu.PdnRadialBlurEffect.RadialBlurShader"/> instances.
            </summary>
            <param name="buffer">The input native constant buffer.</param>
            <returns>The marshalled <see cref="T:PaintDotNet.Effects.Gpu.PdnRadialBlurEffect.RadialBlurShader"/> instance.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.center(PaintDotNet.Effects.Gpu.PdnRadialBlurEffect.RadialBlurShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnRadialBlurEffect.RadialBlurShader.center"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnRadialBlurEffect.RadialBlurShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnRadialBlurEffect.RadialBlurShader.center"/>.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.thetaMin(PaintDotNet.Effects.Gpu.PdnRadialBlurEffect.RadialBlurShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnRadialBlurEffect.RadialBlurShader.thetaMin"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnRadialBlurEffect.RadialBlurShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnRadialBlurEffect.RadialBlurShader.thetaMin"/>.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.thetaMax(PaintDotNet.Effects.Gpu.PdnRadialBlurEffect.RadialBlurShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnRadialBlurEffect.RadialBlurShader.thetaMax"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnRadialBlurEffect.RadialBlurShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnRadialBlurEffect.RadialBlurShader.thetaMax"/>.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.sampleCount(PaintDotNet.Effects.Gpu.PdnRadialBlurEffect.RadialBlurShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnRadialBlurEffect.RadialBlurShader.sampleCount"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnRadialBlurEffect.RadialBlurShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnRadialBlurEffect.RadialBlurShader.sampleCount"/>.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.invSampleCount(PaintDotNet.Effects.Gpu.PdnRadialBlurEffect.RadialBlurShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnRadialBlurEffect.RadialBlurShader.invSampleCount"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnRadialBlurEffect.RadialBlurShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnRadialBlurEffect.RadialBlurShader.invSampleCount"/>.</returns>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.Data">
            <summary>
            A container type for additional data needed by the shader.
            </summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.Data.InputDescriptions">
            <summary>The singleton <see cref="T:ComputeSharp.D2D1.Interop.D2D1InputDescription"/> array instance.</summary>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.InputTypesMemoryManager">
            <summary>
            A <see cref="T:System.Buffers.MemoryManager`1"/> implementation to get the input types.
            </summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Instance">
            <summary>The singleton <see cref="T:ComputeSharp.D2D1.Generated.InputTypesMemoryManager"/> instance to use.</summary>
        </member>
        <member name="P:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Data">
            <summary>The RVA data with the input type info.</summary>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.GetSpan">
            <inheritdoc/>
        </member>
        <member name="P:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Memory">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Pin(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Unpin">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager">
            <summary>
            <see cref="T:System.Buffers.MemoryManager`1"/> implementation to get the HLSL bytecode.
            </summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Instance">
            <summary>The singleton <see cref="T:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager"/> instance to use.</summary>
        </member>
        <member name="P:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Data">
            <summary>The RVA data with the HLSL bytecode.</summary>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.GetSpan">
            <inheritdoc/>
        </member>
        <member name="P:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Memory">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Pin(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Unpin">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.ConstantBuffer">
            <summary>
            A type representing the constant buffer native layout for <see cref="T:PaintDotNet.Effects.Gpu.PdnReduceNoiseEffect.Impl.Shader"/>.
            </summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.area">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnReduceNoiseEffect.Impl.Shader.area"/>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.factor">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnReduceNoiseEffect.Impl.Shader.factor"/>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.samplingRectXYWH">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnReduceNoiseEffect.Impl.Shader.samplingRectXYWH"/>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller">
            <summary>
            A type containing marshalling logic for the constant buffer in shaders of type <see cref="T:PaintDotNet.Effects.Gpu.PdnReduceNoiseEffect.Impl.Shader"/>.
            </summary>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.FromManaged(PaintDotNet.Effects.Gpu.PdnReduceNoiseEffect.Impl.Shader@,ComputeSharp.D2D1.Generated.ConstantBuffer@)">
            <summary>
            Marshals managed <see cref="T:PaintDotNet.Effects.Gpu.PdnReduceNoiseEffect.Impl.Shader"/> instances to native constant buffer data.
            </summary>
            <param name="buffer">The input native constant buffer.</param>
            <returns>The marshalled <see cref="T:PaintDotNet.Effects.Gpu.PdnReduceNoiseEffect.Impl.Shader"/> instance.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.ToManaged(ComputeSharp.D2D1.Generated.ConstantBuffer@)">
            <summary>
            Marshals native constant buffer data to managed <see cref="T:PaintDotNet.Effects.Gpu.PdnReduceNoiseEffect.Impl.Shader"/> instances.
            </summary>
            <param name="buffer">The input native constant buffer.</param>
            <returns>The marshalled <see cref="T:PaintDotNet.Effects.Gpu.PdnReduceNoiseEffect.Impl.Shader"/> instance.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.area(PaintDotNet.Effects.Gpu.PdnReduceNoiseEffect.Impl.Shader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnReduceNoiseEffect.Impl.Shader.area"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnReduceNoiseEffect.Impl.Shader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnReduceNoiseEffect.Impl.Shader.area"/>.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.factor(PaintDotNet.Effects.Gpu.PdnReduceNoiseEffect.Impl.Shader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnReduceNoiseEffect.Impl.Shader.factor"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnReduceNoiseEffect.Impl.Shader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnReduceNoiseEffect.Impl.Shader.factor"/>.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.samplingRectXYWH(PaintDotNet.Effects.Gpu.PdnReduceNoiseEffect.Impl.Shader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnReduceNoiseEffect.Impl.Shader.samplingRectXYWH"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnReduceNoiseEffect.Impl.Shader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnReduceNoiseEffect.Impl.Shader.samplingRectXYWH"/>.</returns>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.Data">
            <summary>
            A container type for additional data needed by the shader.
            </summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.Data.InputDescriptions">
            <summary>The singleton <see cref="T:ComputeSharp.D2D1.Interop.D2D1InputDescription"/> array instance.</summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.Data.ResourceTextureDescriptions">
            <summary>The singleton <see cref="T:ComputeSharp.D2D1.Interop.D2D1ResourceTextureDescription"/> array instance.</summary>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.InputTypesMemoryManager">
            <summary>
            A <see cref="T:System.Buffers.MemoryManager`1"/> implementation to get the input types.
            </summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Instance">
            <summary>The singleton <see cref="T:ComputeSharp.D2D1.Generated.InputTypesMemoryManager"/> instance to use.</summary>
        </member>
        <member name="P:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Data">
            <summary>The RVA data with the input type info.</summary>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.GetSpan">
            <inheritdoc/>
        </member>
        <member name="P:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Memory">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Pin(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Unpin">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager">
            <summary>
            <see cref="T:System.Buffers.MemoryManager`1"/> implementation to get the HLSL bytecode.
            </summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Instance">
            <summary>The singleton <see cref="T:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager"/> instance to use.</summary>
        </member>
        <member name="P:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Data">
            <summary>The RVA data with the HLSL bytecode.</summary>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.GetSpan">
            <inheritdoc/>
        </member>
        <member name="P:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Memory">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Pin(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Unpin">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.ConstantBuffer">
            <summary>
            A type representing the constant buffer native layout for <see cref="T:PaintDotNet.Effects.Gpu.PdnRotateZoomSampleMap.SampleMapShader"/>.
            </summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.size">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnRotateZoomSampleMap.SampleMapShader.size"/>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.offset">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnRotateZoomSampleMap.SampleMapShader.offset"/>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.zoom">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnRotateZoomSampleMap.SampleMapShader.zoom"/>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.startPos">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnRotateZoomSampleMap.SampleMapShader.startPos"/>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.dsdx">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnRotateZoomSampleMap.SampleMapShader.dsdx"/>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.dsdy">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnRotateZoomSampleMap.SampleMapShader.dsdy"/>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.divZ">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnRotateZoomSampleMap.SampleMapShader.divZ"/>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.centerPt">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnRotateZoomSampleMap.SampleMapShader.centerPt"/>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.t">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnRotateZoomSampleMap.SampleMapShader.t"/>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller">
            <summary>
            A type containing marshalling logic for the constant buffer in shaders of type <see cref="T:PaintDotNet.Effects.Gpu.PdnRotateZoomSampleMap.SampleMapShader"/>.
            </summary>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.FromManaged(PaintDotNet.Effects.Gpu.PdnRotateZoomSampleMap.SampleMapShader@,ComputeSharp.D2D1.Generated.ConstantBuffer@)">
            <summary>
            Marshals managed <see cref="T:PaintDotNet.Effects.Gpu.PdnRotateZoomSampleMap.SampleMapShader"/> instances to native constant buffer data.
            </summary>
            <param name="buffer">The input native constant buffer.</param>
            <returns>The marshalled <see cref="T:PaintDotNet.Effects.Gpu.PdnRotateZoomSampleMap.SampleMapShader"/> instance.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.ToManaged(ComputeSharp.D2D1.Generated.ConstantBuffer@)">
            <summary>
            Marshals native constant buffer data to managed <see cref="T:PaintDotNet.Effects.Gpu.PdnRotateZoomSampleMap.SampleMapShader"/> instances.
            </summary>
            <param name="buffer">The input native constant buffer.</param>
            <returns>The marshalled <see cref="T:PaintDotNet.Effects.Gpu.PdnRotateZoomSampleMap.SampleMapShader"/> instance.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.size(PaintDotNet.Effects.Gpu.PdnRotateZoomSampleMap.SampleMapShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnRotateZoomSampleMap.SampleMapShader.size"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnRotateZoomSampleMap.SampleMapShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnRotateZoomSampleMap.SampleMapShader.size"/>.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.offset(PaintDotNet.Effects.Gpu.PdnRotateZoomSampleMap.SampleMapShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnRotateZoomSampleMap.SampleMapShader.offset"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnRotateZoomSampleMap.SampleMapShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnRotateZoomSampleMap.SampleMapShader.offset"/>.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.zoom(PaintDotNet.Effects.Gpu.PdnRotateZoomSampleMap.SampleMapShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnRotateZoomSampleMap.SampleMapShader.zoom"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnRotateZoomSampleMap.SampleMapShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnRotateZoomSampleMap.SampleMapShader.zoom"/>.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.startPos(PaintDotNet.Effects.Gpu.PdnRotateZoomSampleMap.SampleMapShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnRotateZoomSampleMap.SampleMapShader.startPos"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnRotateZoomSampleMap.SampleMapShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnRotateZoomSampleMap.SampleMapShader.startPos"/>.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.dsdx(PaintDotNet.Effects.Gpu.PdnRotateZoomSampleMap.SampleMapShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnRotateZoomSampleMap.SampleMapShader.dsdx"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnRotateZoomSampleMap.SampleMapShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnRotateZoomSampleMap.SampleMapShader.dsdx"/>.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.dsdy(PaintDotNet.Effects.Gpu.PdnRotateZoomSampleMap.SampleMapShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnRotateZoomSampleMap.SampleMapShader.dsdy"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnRotateZoomSampleMap.SampleMapShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnRotateZoomSampleMap.SampleMapShader.dsdy"/>.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.divZ(PaintDotNet.Effects.Gpu.PdnRotateZoomSampleMap.SampleMapShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnRotateZoomSampleMap.SampleMapShader.divZ"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnRotateZoomSampleMap.SampleMapShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnRotateZoomSampleMap.SampleMapShader.divZ"/>.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.centerPt(PaintDotNet.Effects.Gpu.PdnRotateZoomSampleMap.SampleMapShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnRotateZoomSampleMap.SampleMapShader.centerPt"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnRotateZoomSampleMap.SampleMapShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnRotateZoomSampleMap.SampleMapShader.centerPt"/>.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.t(PaintDotNet.Effects.Gpu.PdnRotateZoomSampleMap.SampleMapShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnRotateZoomSampleMap.SampleMapShader.t"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnRotateZoomSampleMap.SampleMapShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnRotateZoomSampleMap.SampleMapShader.t"/>.</returns>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.Data">
            <summary>
            A container type for additional data needed by the shader.
            </summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.Data.InputDescriptions">
            <summary>The singleton <see cref="T:ComputeSharp.D2D1.Interop.D2D1InputDescription"/> array instance.</summary>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.InputTypesMemoryManager">
            <summary>
            A <see cref="T:System.Buffers.MemoryManager`1"/> implementation to get the input types.
            </summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Instance">
            <summary>The singleton <see cref="T:ComputeSharp.D2D1.Generated.InputTypesMemoryManager"/> instance to use.</summary>
        </member>
        <member name="P:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Data">
            <summary>The RVA data with the input type info.</summary>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.GetSpan">
            <inheritdoc/>
        </member>
        <member name="P:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Memory">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Pin(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Unpin">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager">
            <summary>
            <see cref="T:System.Buffers.MemoryManager`1"/> implementation to get the HLSL bytecode.
            </summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Instance">
            <summary>The singleton <see cref="T:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager"/> instance to use.</summary>
        </member>
        <member name="P:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Data">
            <summary>The RVA data with the HLSL bytecode.</summary>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.GetSpan">
            <inheritdoc/>
        </member>
        <member name="P:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Memory">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Pin(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Unpin">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.ConstantBuffer">
            <summary>
            A type representing the constant buffer native layout for <see cref="T:PaintDotNet.Effects.Gpu.PdnSurfaceBlurEffect.Impl.Shader"/>.
            </summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.weightSlope">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnSurfaceBlurEffect.Impl.Shader.weightSlope"/>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.samplingRectXYWH">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnSurfaceBlurEffect.Impl.Shader.samplingRectXYWH"/>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller">
            <summary>
            A type containing marshalling logic for the constant buffer in shaders of type <see cref="T:PaintDotNet.Effects.Gpu.PdnSurfaceBlurEffect.Impl.Shader"/>.
            </summary>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.FromManaged(PaintDotNet.Effects.Gpu.PdnSurfaceBlurEffect.Impl.Shader@,ComputeSharp.D2D1.Generated.ConstantBuffer@)">
            <summary>
            Marshals managed <see cref="T:PaintDotNet.Effects.Gpu.PdnSurfaceBlurEffect.Impl.Shader"/> instances to native constant buffer data.
            </summary>
            <param name="buffer">The input native constant buffer.</param>
            <returns>The marshalled <see cref="T:PaintDotNet.Effects.Gpu.PdnSurfaceBlurEffect.Impl.Shader"/> instance.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.ToManaged(ComputeSharp.D2D1.Generated.ConstantBuffer@)">
            <summary>
            Marshals native constant buffer data to managed <see cref="T:PaintDotNet.Effects.Gpu.PdnSurfaceBlurEffect.Impl.Shader"/> instances.
            </summary>
            <param name="buffer">The input native constant buffer.</param>
            <returns>The marshalled <see cref="T:PaintDotNet.Effects.Gpu.PdnSurfaceBlurEffect.Impl.Shader"/> instance.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.weightSlope(PaintDotNet.Effects.Gpu.PdnSurfaceBlurEffect.Impl.Shader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnSurfaceBlurEffect.Impl.Shader.weightSlope"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnSurfaceBlurEffect.Impl.Shader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnSurfaceBlurEffect.Impl.Shader.weightSlope"/>.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.samplingRectXYWH(PaintDotNet.Effects.Gpu.PdnSurfaceBlurEffect.Impl.Shader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnSurfaceBlurEffect.Impl.Shader.samplingRectXYWH"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnSurfaceBlurEffect.Impl.Shader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnSurfaceBlurEffect.Impl.Shader.samplingRectXYWH"/>.</returns>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.Data">
            <summary>
            A container type for additional data needed by the shader.
            </summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.Data.InputDescriptions">
            <summary>The singleton <see cref="T:ComputeSharp.D2D1.Interop.D2D1InputDescription"/> array instance.</summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.Data.ResourceTextureDescriptions">
            <summary>The singleton <see cref="T:ComputeSharp.D2D1.Interop.D2D1ResourceTextureDescription"/> array instance.</summary>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.InputTypesMemoryManager">
            <summary>
            A <see cref="T:System.Buffers.MemoryManager`1"/> implementation to get the input types.
            </summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Instance">
            <summary>The singleton <see cref="T:ComputeSharp.D2D1.Generated.InputTypesMemoryManager"/> instance to use.</summary>
        </member>
        <member name="P:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Data">
            <summary>The RVA data with the input type info.</summary>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.GetSpan">
            <inheritdoc/>
        </member>
        <member name="P:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Memory">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Pin(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Unpin">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager">
            <summary>
            <see cref="T:System.Buffers.MemoryManager`1"/> implementation to get the HLSL bytecode.
            </summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Instance">
            <summary>The singleton <see cref="T:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager"/> instance to use.</summary>
        </member>
        <member name="P:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Data">
            <summary>The RVA data with the HLSL bytecode.</summary>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.GetSpan">
            <inheritdoc/>
        </member>
        <member name="P:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Memory">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Pin(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Unpin">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.ConstantBuffer">
            <summary>
            A type representing the constant buffer native layout for <see cref="T:PaintDotNet.Effects.Gpu.PdnTileReflectionSampleMap.SampleMapShader"/>.
            </summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.offset">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnTileReflectionSampleMap.SampleMapShader.offset"/>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.cosineSine">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnTileReflectionSampleMap.SampleMapShader.cosineSine"/>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.negSineCosine">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnTileReflectionSampleMap.SampleMapShader.negSineCosine"/>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.cosineNegSine">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnTileReflectionSampleMap.SampleMapShader.cosineNegSine"/>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.sineCosine">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnTileReflectionSampleMap.SampleMapShader.sineCosine"/>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.scale">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnTileReflectionSampleMap.SampleMapShader.scale"/>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.intensity">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnTileReflectionSampleMap.SampleMapShader.intensity"/>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller">
            <summary>
            A type containing marshalling logic for the constant buffer in shaders of type <see cref="T:PaintDotNet.Effects.Gpu.PdnTileReflectionSampleMap.SampleMapShader"/>.
            </summary>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.FromManaged(PaintDotNet.Effects.Gpu.PdnTileReflectionSampleMap.SampleMapShader@,ComputeSharp.D2D1.Generated.ConstantBuffer@)">
            <summary>
            Marshals managed <see cref="T:PaintDotNet.Effects.Gpu.PdnTileReflectionSampleMap.SampleMapShader"/> instances to native constant buffer data.
            </summary>
            <param name="buffer">The input native constant buffer.</param>
            <returns>The marshalled <see cref="T:PaintDotNet.Effects.Gpu.PdnTileReflectionSampleMap.SampleMapShader"/> instance.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.ToManaged(ComputeSharp.D2D1.Generated.ConstantBuffer@)">
            <summary>
            Marshals native constant buffer data to managed <see cref="T:PaintDotNet.Effects.Gpu.PdnTileReflectionSampleMap.SampleMapShader"/> instances.
            </summary>
            <param name="buffer">The input native constant buffer.</param>
            <returns>The marshalled <see cref="T:PaintDotNet.Effects.Gpu.PdnTileReflectionSampleMap.SampleMapShader"/> instance.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.offset(PaintDotNet.Effects.Gpu.PdnTileReflectionSampleMap.SampleMapShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnTileReflectionSampleMap.SampleMapShader.offset"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnTileReflectionSampleMap.SampleMapShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnTileReflectionSampleMap.SampleMapShader.offset"/>.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.cosineSine(PaintDotNet.Effects.Gpu.PdnTileReflectionSampleMap.SampleMapShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnTileReflectionSampleMap.SampleMapShader.cosineSine"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnTileReflectionSampleMap.SampleMapShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnTileReflectionSampleMap.SampleMapShader.cosineSine"/>.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.negSineCosine(PaintDotNet.Effects.Gpu.PdnTileReflectionSampleMap.SampleMapShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnTileReflectionSampleMap.SampleMapShader.negSineCosine"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnTileReflectionSampleMap.SampleMapShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnTileReflectionSampleMap.SampleMapShader.negSineCosine"/>.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.cosineNegSine(PaintDotNet.Effects.Gpu.PdnTileReflectionSampleMap.SampleMapShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnTileReflectionSampleMap.SampleMapShader.cosineNegSine"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnTileReflectionSampleMap.SampleMapShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnTileReflectionSampleMap.SampleMapShader.cosineNegSine"/>.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.sineCosine(PaintDotNet.Effects.Gpu.PdnTileReflectionSampleMap.SampleMapShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnTileReflectionSampleMap.SampleMapShader.sineCosine"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnTileReflectionSampleMap.SampleMapShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnTileReflectionSampleMap.SampleMapShader.sineCosine"/>.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.scale(PaintDotNet.Effects.Gpu.PdnTileReflectionSampleMap.SampleMapShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnTileReflectionSampleMap.SampleMapShader.scale"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnTileReflectionSampleMap.SampleMapShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnTileReflectionSampleMap.SampleMapShader.scale"/>.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.intensity(PaintDotNet.Effects.Gpu.PdnTileReflectionSampleMap.SampleMapShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnTileReflectionSampleMap.SampleMapShader.intensity"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnTileReflectionSampleMap.SampleMapShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnTileReflectionSampleMap.SampleMapShader.intensity"/>.</returns>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.Data">
            <summary>
            A container type for additional data needed by the shader.
            </summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.Data.InputDescriptions">
            <summary>The singleton <see cref="T:ComputeSharp.D2D1.Interop.D2D1InputDescription"/> array instance.</summary>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.InputTypesMemoryManager">
            <summary>
            A <see cref="T:System.Buffers.MemoryManager`1"/> implementation to get the input types.
            </summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Instance">
            <summary>The singleton <see cref="T:ComputeSharp.D2D1.Generated.InputTypesMemoryManager"/> instance to use.</summary>
        </member>
        <member name="P:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Data">
            <summary>The RVA data with the input type info.</summary>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.GetSpan">
            <inheritdoc/>
        </member>
        <member name="P:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Memory">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Pin(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Unpin">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager">
            <summary>
            <see cref="T:System.Buffers.MemoryManager`1"/> implementation to get the HLSL bytecode.
            </summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Instance">
            <summary>The singleton <see cref="T:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager"/> instance to use.</summary>
        </member>
        <member name="P:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Data">
            <summary>The RVA data with the HLSL bytecode.</summary>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.GetSpan">
            <inheritdoc/>
        </member>
        <member name="P:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Memory">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Pin(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Unpin">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.ConstantBuffer">
            <summary>
            A type representing the constant buffer native layout for <see cref="T:PaintDotNet.Effects.Gpu.PdnTwistSampleMap.SampleMapShader"/>.
            </summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.amount">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnTwistSampleMap.SampleMapShader.amount"/>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.invSize">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnTwistSampleMap.SampleMapShader.invSize"/>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.twist">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnTwistSampleMap.SampleMapShader.twist"/>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.center">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnTwistSampleMap.SampleMapShader.center"/>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.invMaxRad">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnTwistSampleMap.SampleMapShader.invMaxRad"/>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller">
            <summary>
            A type containing marshalling logic for the constant buffer in shaders of type <see cref="T:PaintDotNet.Effects.Gpu.PdnTwistSampleMap.SampleMapShader"/>.
            </summary>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.FromManaged(PaintDotNet.Effects.Gpu.PdnTwistSampleMap.SampleMapShader@,ComputeSharp.D2D1.Generated.ConstantBuffer@)">
            <summary>
            Marshals managed <see cref="T:PaintDotNet.Effects.Gpu.PdnTwistSampleMap.SampleMapShader"/> instances to native constant buffer data.
            </summary>
            <param name="buffer">The input native constant buffer.</param>
            <returns>The marshalled <see cref="T:PaintDotNet.Effects.Gpu.PdnTwistSampleMap.SampleMapShader"/> instance.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.ToManaged(ComputeSharp.D2D1.Generated.ConstantBuffer@)">
            <summary>
            Marshals native constant buffer data to managed <see cref="T:PaintDotNet.Effects.Gpu.PdnTwistSampleMap.SampleMapShader"/> instances.
            </summary>
            <param name="buffer">The input native constant buffer.</param>
            <returns>The marshalled <see cref="T:PaintDotNet.Effects.Gpu.PdnTwistSampleMap.SampleMapShader"/> instance.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.amount(PaintDotNet.Effects.Gpu.PdnTwistSampleMap.SampleMapShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnTwistSampleMap.SampleMapShader.amount"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnTwistSampleMap.SampleMapShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnTwistSampleMap.SampleMapShader.amount"/>.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.invSize(PaintDotNet.Effects.Gpu.PdnTwistSampleMap.SampleMapShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnTwistSampleMap.SampleMapShader.invSize"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnTwistSampleMap.SampleMapShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnTwistSampleMap.SampleMapShader.invSize"/>.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.twist(PaintDotNet.Effects.Gpu.PdnTwistSampleMap.SampleMapShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnTwistSampleMap.SampleMapShader.twist"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnTwistSampleMap.SampleMapShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnTwistSampleMap.SampleMapShader.twist"/>.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.center(PaintDotNet.Effects.Gpu.PdnTwistSampleMap.SampleMapShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnTwistSampleMap.SampleMapShader.center"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnTwistSampleMap.SampleMapShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnTwistSampleMap.SampleMapShader.center"/>.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.invMaxRad(PaintDotNet.Effects.Gpu.PdnTwistSampleMap.SampleMapShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnTwistSampleMap.SampleMapShader.invMaxRad"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnTwistSampleMap.SampleMapShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnTwistSampleMap.SampleMapShader.invMaxRad"/>.</returns>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.Data">
            <summary>
            A container type for additional data needed by the shader.
            </summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.Data.InputDescriptions">
            <summary>The singleton <see cref="T:ComputeSharp.D2D1.Interop.D2D1InputDescription"/> array instance.</summary>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.InputTypesMemoryManager">
            <summary>
            A <see cref="T:System.Buffers.MemoryManager`1"/> implementation to get the input types.
            </summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Instance">
            <summary>The singleton <see cref="T:ComputeSharp.D2D1.Generated.InputTypesMemoryManager"/> instance to use.</summary>
        </member>
        <member name="P:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Data">
            <summary>The RVA data with the input type info.</summary>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.GetSpan">
            <inheritdoc/>
        </member>
        <member name="P:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Memory">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Pin(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Unpin">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager">
            <summary>
            <see cref="T:System.Buffers.MemoryManager`1"/> implementation to get the HLSL bytecode.
            </summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Instance">
            <summary>The singleton <see cref="T:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager"/> instance to use.</summary>
        </member>
        <member name="P:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Data">
            <summary>The RVA data with the HLSL bytecode.</summary>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.GetSpan">
            <inheritdoc/>
        </member>
        <member name="P:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Memory">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Pin(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Unpin">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.ConstantBuffer">
            <summary>
            A type representing the constant buffer native layout for <see cref="T:PaintDotNet.Effects.Gpu.PdnVignetteEffect.Impl.VignetteShader"/>.
            </summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.centerOffset">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnVignetteEffect.Impl.VignetteShader.centerOffset"/>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.radiusR">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnVignetteEffect.Impl.VignetteShader.radiusR"/>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.strength">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnVignetteEffect.Impl.VignetteShader.strength"/>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.invStrength">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnVignetteEffect.Impl.VignetteShader.invStrength"/>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller">
            <summary>
            A type containing marshalling logic for the constant buffer in shaders of type <see cref="T:PaintDotNet.Effects.Gpu.PdnVignetteEffect.Impl.VignetteShader"/>.
            </summary>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.FromManaged(PaintDotNet.Effects.Gpu.PdnVignetteEffect.Impl.VignetteShader@,ComputeSharp.D2D1.Generated.ConstantBuffer@)">
            <summary>
            Marshals managed <see cref="T:PaintDotNet.Effects.Gpu.PdnVignetteEffect.Impl.VignetteShader"/> instances to native constant buffer data.
            </summary>
            <param name="buffer">The input native constant buffer.</param>
            <returns>The marshalled <see cref="T:PaintDotNet.Effects.Gpu.PdnVignetteEffect.Impl.VignetteShader"/> instance.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.ToManaged(ComputeSharp.D2D1.Generated.ConstantBuffer@)">
            <summary>
            Marshals native constant buffer data to managed <see cref="T:PaintDotNet.Effects.Gpu.PdnVignetteEffect.Impl.VignetteShader"/> instances.
            </summary>
            <param name="buffer">The input native constant buffer.</param>
            <returns>The marshalled <see cref="T:PaintDotNet.Effects.Gpu.PdnVignetteEffect.Impl.VignetteShader"/> instance.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.centerOffset(PaintDotNet.Effects.Gpu.PdnVignetteEffect.Impl.VignetteShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnVignetteEffect.Impl.VignetteShader.centerOffset"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnVignetteEffect.Impl.VignetteShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnVignetteEffect.Impl.VignetteShader.centerOffset"/>.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.radiusR(PaintDotNet.Effects.Gpu.PdnVignetteEffect.Impl.VignetteShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnVignetteEffect.Impl.VignetteShader.radiusR"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnVignetteEffect.Impl.VignetteShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnVignetteEffect.Impl.VignetteShader.radiusR"/>.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.strength(PaintDotNet.Effects.Gpu.PdnVignetteEffect.Impl.VignetteShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnVignetteEffect.Impl.VignetteShader.strength"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnVignetteEffect.Impl.VignetteShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnVignetteEffect.Impl.VignetteShader.strength"/>.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.invStrength(PaintDotNet.Effects.Gpu.PdnVignetteEffect.Impl.VignetteShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnVignetteEffect.Impl.VignetteShader.invStrength"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnVignetteEffect.Impl.VignetteShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnVignetteEffect.Impl.VignetteShader.invStrength"/>.</returns>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.Data">
            <summary>
            A container type for additional data needed by the shader.
            </summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.Data.InputDescriptions">
            <summary>The singleton <see cref="T:ComputeSharp.D2D1.Interop.D2D1InputDescription"/> array instance.</summary>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.InputTypesMemoryManager">
            <summary>
            A <see cref="T:System.Buffers.MemoryManager`1"/> implementation to get the input types.
            </summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Instance">
            <summary>The singleton <see cref="T:ComputeSharp.D2D1.Generated.InputTypesMemoryManager"/> instance to use.</summary>
        </member>
        <member name="P:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Data">
            <summary>The RVA data with the input type info.</summary>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.GetSpan">
            <inheritdoc/>
        </member>
        <member name="P:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Memory">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Pin(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Unpin">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager">
            <summary>
            <see cref="T:System.Buffers.MemoryManager`1"/> implementation to get the HLSL bytecode.
            </summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Instance">
            <summary>The singleton <see cref="T:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager"/> instance to use.</summary>
        </member>
        <member name="P:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Data">
            <summary>The RVA data with the HLSL bytecode.</summary>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.GetSpan">
            <inheritdoc/>
        </member>
        <member name="P:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Memory">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Pin(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Unpin">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.ConstantBuffer">
            <summary>
            A type representing the constant buffer native layout for <see cref="T:PaintDotNet.Effects.Gpu.PdnZoomBlurEffect.ZoomBlurShader"/>.
            </summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.center">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnZoomBlurEffect.ZoomBlurShader.center"/>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.scaleMin">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnZoomBlurEffect.ZoomBlurShader.scaleMin"/>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.scaleMax">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnZoomBlurEffect.ZoomBlurShader.scaleMax"/>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.alphaSubtrahend">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnZoomBlurEffect.ZoomBlurShader.alphaSubtrahend"/>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.alphaDenominatorInv">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnZoomBlurEffect.ZoomBlurShader.alphaDenominatorInv"/>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.alphaExponent">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnZoomBlurEffect.ZoomBlurShader.alphaExponent"/>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.alphaMultiplier">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnZoomBlurEffect.ZoomBlurShader.alphaMultiplier"/>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.scaleLo">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnZoomBlurEffect.ZoomBlurShader.scaleLo"/>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.scaleHi">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnZoomBlurEffect.ZoomBlurShader.scaleHi"/>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.sampleCount">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnZoomBlurEffect.ZoomBlurShader.sampleCount"/>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.ConstantBuffer.invSampleCount">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnZoomBlurEffect.ZoomBlurShader.invSampleCount"/>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller">
            <summary>
            A type containing marshalling logic for the constant buffer in shaders of type <see cref="T:PaintDotNet.Effects.Gpu.PdnZoomBlurEffect.ZoomBlurShader"/>.
            </summary>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.FromManaged(PaintDotNet.Effects.Gpu.PdnZoomBlurEffect.ZoomBlurShader@,ComputeSharp.D2D1.Generated.ConstantBuffer@)">
            <summary>
            Marshals managed <see cref="T:PaintDotNet.Effects.Gpu.PdnZoomBlurEffect.ZoomBlurShader"/> instances to native constant buffer data.
            </summary>
            <param name="buffer">The input native constant buffer.</param>
            <returns>The marshalled <see cref="T:PaintDotNet.Effects.Gpu.PdnZoomBlurEffect.ZoomBlurShader"/> instance.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.ToManaged(ComputeSharp.D2D1.Generated.ConstantBuffer@)">
            <summary>
            Marshals native constant buffer data to managed <see cref="T:PaintDotNet.Effects.Gpu.PdnZoomBlurEffect.ZoomBlurShader"/> instances.
            </summary>
            <param name="buffer">The input native constant buffer.</param>
            <returns>The marshalled <see cref="T:PaintDotNet.Effects.Gpu.PdnZoomBlurEffect.ZoomBlurShader"/> instance.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.center(PaintDotNet.Effects.Gpu.PdnZoomBlurEffect.ZoomBlurShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnZoomBlurEffect.ZoomBlurShader.center"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnZoomBlurEffect.ZoomBlurShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnZoomBlurEffect.ZoomBlurShader.center"/>.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.scaleMin(PaintDotNet.Effects.Gpu.PdnZoomBlurEffect.ZoomBlurShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnZoomBlurEffect.ZoomBlurShader.scaleMin"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnZoomBlurEffect.ZoomBlurShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnZoomBlurEffect.ZoomBlurShader.scaleMin"/>.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.scaleMax(PaintDotNet.Effects.Gpu.PdnZoomBlurEffect.ZoomBlurShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnZoomBlurEffect.ZoomBlurShader.scaleMax"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnZoomBlurEffect.ZoomBlurShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnZoomBlurEffect.ZoomBlurShader.scaleMax"/>.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.alphaSubtrahend(PaintDotNet.Effects.Gpu.PdnZoomBlurEffect.ZoomBlurShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnZoomBlurEffect.ZoomBlurShader.alphaSubtrahend"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnZoomBlurEffect.ZoomBlurShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnZoomBlurEffect.ZoomBlurShader.alphaSubtrahend"/>.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.alphaDenominatorInv(PaintDotNet.Effects.Gpu.PdnZoomBlurEffect.ZoomBlurShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnZoomBlurEffect.ZoomBlurShader.alphaDenominatorInv"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnZoomBlurEffect.ZoomBlurShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnZoomBlurEffect.ZoomBlurShader.alphaDenominatorInv"/>.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.alphaExponent(PaintDotNet.Effects.Gpu.PdnZoomBlurEffect.ZoomBlurShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnZoomBlurEffect.ZoomBlurShader.alphaExponent"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnZoomBlurEffect.ZoomBlurShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnZoomBlurEffect.ZoomBlurShader.alphaExponent"/>.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.alphaMultiplier(PaintDotNet.Effects.Gpu.PdnZoomBlurEffect.ZoomBlurShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnZoomBlurEffect.ZoomBlurShader.alphaMultiplier"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnZoomBlurEffect.ZoomBlurShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnZoomBlurEffect.ZoomBlurShader.alphaMultiplier"/>.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.scaleLo(PaintDotNet.Effects.Gpu.PdnZoomBlurEffect.ZoomBlurShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnZoomBlurEffect.ZoomBlurShader.scaleLo"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnZoomBlurEffect.ZoomBlurShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnZoomBlurEffect.ZoomBlurShader.scaleLo"/>.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.scaleHi(PaintDotNet.Effects.Gpu.PdnZoomBlurEffect.ZoomBlurShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnZoomBlurEffect.ZoomBlurShader.scaleHi"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnZoomBlurEffect.ZoomBlurShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnZoomBlurEffect.ZoomBlurShader.scaleHi"/>.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.sampleCount(PaintDotNet.Effects.Gpu.PdnZoomBlurEffect.ZoomBlurShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnZoomBlurEffect.ZoomBlurShader.sampleCount"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnZoomBlurEffect.ZoomBlurShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnZoomBlurEffect.ZoomBlurShader.sampleCount"/>.</returns>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.ConstantBufferMarshaller.invSampleCount(PaintDotNet.Effects.Gpu.PdnZoomBlurEffect.ZoomBlurShader@)">
            <inheritdoc cref="F:PaintDotNet.Effects.Gpu.PdnZoomBlurEffect.ZoomBlurShader.invSampleCount"/>
            <param name="value">The input <see cref="T:PaintDotNet.Effects.Gpu.PdnZoomBlurEffect.ZoomBlurShader"/> value.</param>
            <returns>A mutable reference to <see cref="F:PaintDotNet.Effects.Gpu.PdnZoomBlurEffect.ZoomBlurShader.invSampleCount"/>.</returns>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.Data">
            <summary>
            A container type for additional data needed by the shader.
            </summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.Data.InputDescriptions">
            <summary>The singleton <see cref="T:ComputeSharp.D2D1.Interop.D2D1InputDescription"/> array instance.</summary>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.InputTypesMemoryManager">
            <summary>
            A <see cref="T:System.Buffers.MemoryManager`1"/> implementation to get the input types.
            </summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Instance">
            <summary>The singleton <see cref="T:ComputeSharp.D2D1.Generated.InputTypesMemoryManager"/> instance to use.</summary>
        </member>
        <member name="P:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Data">
            <summary>The RVA data with the input type info.</summary>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.GetSpan">
            <inheritdoc/>
        </member>
        <member name="P:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Memory">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Pin(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Unpin">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.InputTypesMemoryManager.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager">
            <summary>
            <see cref="T:System.Buffers.MemoryManager`1"/> implementation to get the HLSL bytecode.
            </summary>
        </member>
        <member name="F:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Instance">
            <summary>The singleton <see cref="T:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager"/> instance to use.</summary>
        </member>
        <member name="P:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Data">
            <summary>The RVA data with the HLSL bytecode.</summary>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.GetSpan">
            <inheritdoc/>
        </member>
        <member name="P:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Memory">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Pin(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Unpin">
            <inheritdoc/>
        </member>
        <member name="M:ComputeSharp.D2D1.Generated.HlslBytecodeMemoryManager.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
    </members>
</doc>
